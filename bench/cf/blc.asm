DOS Header
==========
00000000,e_magic,x2,MZ,signature (should be "MZ")
00000002,e_cblp,h2,0090h,Bytes in last block of file
00000004,e_cp,2,3,Blocks in file
00000006,e_crlc,2,0,Relocations
00000008,e_cparhdr,2,4,Size of header in paragraphs
0000000A,e_minalloc,h2,0000h,Minimum extra paragraphs needed
0000000C,e_maxalloc,h2,FFFFh,Maximum extra paragraphs needed
0000000E,e_ss,h2,0000h,Initial (relative) SS value [ignore]
00000010,e_sp,h2,00B8h,Initial SP value [ignore]
00000012,e_csum,h2,0000h,Checksum
00000014,e_ip,h2,0000h,Initial IP value [ignore]
00000016,e_cs,h2,0000h,Initial (relative) CS value [ignore]
00000018,e_lfarlc,h2,0040h,File address of relocation table
0000001A,e_ovno,h2,0000h,Overlay number
0000001C,e_res,h4,00000000h,Reserved words
00000020,e_res,h4,00000000h,Reserved words
00000024,e_oemid,h2,0000h,OEM identifier (for e_oeminfo)
00000026,e_oeminfo,h2,0000h,OEM information; e_oemid specific
00000028,e_res2,h4,00000000h,Reserved words
0000002C,e_res2,h4,00000000h,Reserved words
00000030,e_res2,h4,00000000h,Reserved words
00000034,e_res2,h4,00000000h,Reserved words
00000038,e_res2,h4,00000000h,Reserved words
0000003C,e_lfanew,h4,00000080h,File address of new exe header
DOS Stub
========
00000040,push cs,h1,0Eh,
00000041,pop ds,h1,1Fh,(ie data segment:=code segment)
00000042,mov dx,0x000E,h3,BA0E00h,(ie ds:dx is text string below)
00000045,mov ah,0x09,h2,B409h,(write to stdout)
00000047,int 0x21,h2,CD21h,
00000049,mov ax,0x4C01,h3,B8014Ch,(exit)
0000004C,int 0x21,h2,CD21h,
0000004E,-,-,5468 ,Th
00000050,-,-,69732070 726F6772 616D2063 616E6E6F ,is program canno
00000060,-,-,74206265 2072756E 20696E20 444F5320 ,t be run in DOS 
00000070,-,-,6D6F6465 2E0D0D0A 24000000 00000000 ,mode....$.......
PE Header
=========
00000080,signature,x4,PE\0\0,(should be "PE\0\0")
00000084,machine,h2,014Ch,i386
00000086,sections,2,2,Number of sections
00000088,DateTimeStamp,h4,00000000h,Jan 1st 1970 00:00:00
0000008C,PointerToSymbolTable,h4,00000000h,
00000090,NumberOfSymbols,h4,00000000h,
00000094,SizeOfOptionalHeader,h2,00E0h,
00000096,Characteristics,h2,030Fh,32BIT+EXEC-RELOCS-LINES?-LOCALS?-DEBUG
00000098,Magic,h2,010Bh,32bit
0000009A,MajorLinkerVersion,h1,06h,6.0
0000009B,MinorLinkerVersion,h1,00h,
0000009C,SizeOfCode,h4,00000000h,
000000A0,SizeOfInitializedData,h4,00000000h,
000000A4,SizeOfUninitializedData,h4,00000000h,
000000A8,AddressOfEntryPoint,h4,00001A60h,
000000AC,BaseOfCode,h4,00001000h,
000000B0,BaseOfData,h4,00002000h,
000000B4,ImageBase,h4,00400000h,
000000B8,SectionAlignment,h4,00001000h,
000000BC,FileAlignment,h4,00000200h,
000000C0,MajorOperatingSystemVersion,h2,0004h,4.0
000000C2,MinorOperatingSystemVersion,h2,0000h,
000000C4,MajorImageVersion,h2,0000h,0.0
000000C6,MinorImageVersion,h2,0000h,
000000C8,MajorSubsystemVersion,h2,0004h,4.0
000000CA,MinorSubsystemVersion,h2,0000h,
000000CC,Win32VersionValue,h4,00000000h,
000000D0,SizeOfImage,h4,00032F10h,????
000000D4,SizeOfHeaders,h4,00000200h,
000000D8,CheckSum,h4,00000000h,
000000DC,Subsystem,h2,0003h,console app
000000DE,DllCharacteristics,h2,0000h,
000000E0,SizeOfStackReserve,h4,00100000h,
000000E4,SizeOfStackCommit,h4,00001000h,
000000E8,SizeOfHeapReserve,h4,00100000h,
000000EC,SizeOfHeapCommit,h4,00001000h,
000000F0,LoaderFlags,h4,00000000h,
000000F4,NumberOfRvaAndSizes,4,16,
RVA table
=========
000000F8,RelativeVirtualAddress[1],h4,00000000h,export
000000FC,RVASize[1],h4,00000000h,
00000100,RelativeVirtualAddress[2],h4,000020C0h,import (see "Import Section" tab)
00000104,RVASize[2],h4,00000028h,
00000108,RelativeVirtualAddress[3],h4,00000000h,resource
0000010C,RVASize[3],h4,00000000h,
00000110,RelativeVirtualAddress[4],h4,00000000h,exception
00000114,RVASize[4],h4,00000000h,
00000118,RelativeVirtualAddress[5],h4,00000000h,security
0000011C,RVASize[5],h4,00000000h,
00000120,RelativeVirtualAddress[6],h4,00000000h,basereloc
00000124,RVASize[6],h4,00000000h,
00000128,RelativeVirtualAddress[7],h4,00000000h,debug
0000012C,RVASize[7],h4,00000000h,
00000130,RelativeVirtualAddress[8],h4,00000000h,architecture
00000134,RVASize[8],h4,00000000h,
00000138,RelativeVirtualAddress[9],h4,00000000h,globalptr
0000013C,RVASize[9],h4,00000000h,
00000140,RelativeVirtualAddress[10],h4,00000000h,TLS table
00000144,RVASize[10],h4,00000000h,
00000148,RelativeVirtualAddress[11],h4,00000000h,loadconfig
0000014C,RVASize[11],h4,00000000h,
00000150,RelativeVirtualAddress[12],h4,00000000h,boundimport
00000154,RVASize[12],h4,00000000h,
00000158,RelativeVirtualAddress[13],h4,000020E8h,IAT
0000015C,RVASize[13],h4,0000002Ch,
00000160,RelativeVirtualAddress[14],h4,00000000h,delayimport
00000164,RVASize[14],h4,00000000h,
00000168,RelativeVirtualAddress[15],h4,00000000h,comdescriptor
0000016C,RVASize[15],h4,00000000h,
00000170,RelativeVirtualAddress[16],h4,00000000h,IDD 16
00000174,RVASize[16],h4,00000000h,
Section table
=============
00000178,Name[1],x8,.text\0\0\0,
00000180,VirtualSize,h4,00000B20h,
00000184,VirtualAddress,h4,00001000h,
00000188,SizeOfRawData,h4,00000C00h,
0000018C,PointerToRawData,h4,00000200h, (see "Code Section" tab)
00000190,PointerToRelocations,h4,00000000h,  (should be 0)
00000194,PointerToLinenumbers,h4,00000000h,  (should be 0)
00000198,NumberOfRelocations,h2,0000h,  (should be 0)
0000019A,NumberOfLinenumbers,h2,0000h,  (should be 0)
0000019C,Characteristics,h4,60000020h,code+executable+read
,-,,,
000001A0,Name[2],x8,.data\0\0\0,
000001A8,VirtualSize,h4,00030F10h,
000001AC,VirtualAddress,h4,00002000h,
000001B0,SizeOfRawData,h4,00000200h,
000001B4,PointerToRawData,h4,00000E00h, (see "Data Section" tab)
000001B8,PointerToRelocations,h4,00000000h,  (should be 0)
000001BC,PointerToLinenumbers,h4,00000000h,  (should be 0)
000001C0,NumberOfRelocations,h2,0000h,  (should be 0)
000001C2,NumberOfLinenumbers,h2,0000h,  (should be 0)
000001C4,Characteristics,h4,C0000040h,read+write+init
,-,,,
000001C8,padding,-,00000000 00000000 ,........
000001D0,padding,-,00000000 00000000 00000000 00000000 ,................
000001E0,padding,-,00000000 00000000 00000000 00000000 ,................
000001F0,padding,-,00000000 00000000 00000000 00000000 ,................
Code Section
============
00000200,00401000:  push ebp,-,125,uv 00 20  1   1      -- Error
00000201,00401001:  mov ebp,esp,-,211345,vu 20 10  1   1      
00000203,00401003:  sub esp,0,-,201354 00000000,uv 10 10  1   2      
00000209,00401009:  nop,-,220,vu 00 00  1   2      
0000020A,0040100A:  mov eax,[ebp+12],-,213105 0C,uv 01 20  1   3      
0000020D,0040100D:  push eax,-,120,uv 00 01  1   4 01   
0000020E,0040100E:  call #00401AD8,-,350 C50A0000,v  00 00  1   4      
00000213,00401013:  add esp,4,-,203304 04,uv 10 10  1   5      
00000216,00401016:  mov eax,[ebp+8],-,213105 08,vu 01 20  1   5      
00000219,00401019:  push eax,-,120,uv 00 01  1   6      
0000021A,0040101A:  call #00401AE0,-,350 C10A0000,v  00 00  1   6      -- exit()
0000021F,0040101F:  add esp,4,-,203304 04,uv 10 10  1   7      
00000222,00401022:  leave,-,311,np 00 00  3   8      
00000223,00401023:  ret,-,303,np 00 00  2  11      
,-,,,
00000224,00401024:  push ebp,-,125,uv 00 20  1  13      -- Errorx
00000225,00401025:  mov ebp,esp,-,211345,vu 20 10  1  13      
00000227,00401027:  sub esp,0,-,201354 00000000,uv 10 10  1  14      
0000022D,0040102D:  nop,-,220,vu 00 00  1  14      
0000022E,0040102E:  mov eax,[ebp+16],-,213105 10,uv 01 20  1  15      
00000231,00401031:  push eax,-,120,uv 00 01  1  16 01   
00000232,00401032:  mov eax,[ebp+12],-,213105 0C,vu 01 20  1  16      
00000235,00401035:  push eax,-,120,uv 00 01  1  17      
00000236,00401036:  call #00401AD8,-,350 9D0A0000,v  00 00  1  17      
0000023B,0040103B:  add esp,8,-,203304 08,uv 10 10  1  18      
0000023E,0040103E:  mov eax,[ebp+8],-,213105 08,vu 01 20  1  18      
00000241,00401041:  push eax,-,120,uv 00 01  1  19      
00000242,00401042:  call #00401AE0,-,350 990A0000,v  00 00  1  19      -- exit()
00000247,00401047:  add esp,4,-,203304 04,uv 10 10  1  20      
0000024A,0040104A:  leave,-,311,np 00 00  3  21      
0000024B,0040104B:  ret,-,303,np 00 00  2  24      
,-,,,
0000024C,0040104C:  push ebp,-,125,uv 00 20  1  26              -- Gc()
0000024D,0040104D:  mov ebp,esp,-,211345,vu 20 10  1  26      
0000024F,0040104F:  sub esp,0,-,201354 00000000,uv 10 10  1  27      
00000255,00401055:  nop,-,220,vu 00 00  1  27      
00000256,00401056:  mov eax,[ebp+8],-,213105 08,uv 01 20  1  28      
00000259,00401059:  test eax,eax,-,205300,uv 00 01  1  29 01   
0000025B,0040105B:  je #004010C1,-,017204 60000000,v  00 00  1  29      
00000261,00401061:  mov eax,[ebp+8],-,213105 08,uv 01 20  1  30      
00000264,00401064:  mov ecx,#00402018,-,271 18204000,vu 02 00  1  30      -- root
00000269,00401069:  cmp eax,ecx,-,071310,uv 00 03  1  31      
0000026B,0040106B:  je #004010C1,-,017204 50000000,v  00 00  1  31      
00000271,00401071:  jmp #00401083,-,351 0D000000,v  00 00  1  32      
00000276,00401076:  mov eax,[ebp+8],-,213105 08,uv 01 20  1  33      
00000279,00401079:  add eax,4,-,203300 04,uv 01 01  1  34 01   
0000027C,0040107C:  mov ecx,[eax],-,213010,uv 02 01  1  37 01 *01*
0000027E,0040107E:  mov [ebp+8],ecx,-,211115 08,uv 00 22  1  38 02   
00000281,00401081:  jmp #00401056,-,353 D3,v  00 00  1  38      
00000283,00401083:  mov eax,[ebp+8],-,213105 08,uv 01 20  1  39      
00000286,00401086:  add eax,8,-,203300 08,uv 01 01  1  40 01   
00000289,00401089:  mov ecx,[eax],-,213010,uv 02 01  1  43 01 *01*
0000028B,0040108B:  add ecx,-1,-,203301 FF,uv 02 02  1  44 02   
0000028E,0040108E:  mov [eax],ecx,-,211010,uv 00 03  1  45 02   
00000290,00401090:  test ecx,ecx,-,205311,vu 00 02  1  45      
00000292,00401092:  je #0040109D,-,017204 05000000,v  00 00  1  46      
00000298,00401098:  jmp #004010C1,-,351 24000000,v  00 00  1  47      
0000029D,0040109D:  mov eax,[ebp+8],-,213105 08,uv 01 20  1  48      
000002A0,004010A0:  mov ecx,[eax],-,213010,uv 02 01  1  51 01 *01*
000002A2,004010A2:  push ecx,-,121,uv 00 02  1  52 02   
000002A3,004010A3:  call #0040104C,-,350 A4FFFFFF,v  00 00  1  52      -- Gc()
000002A8,004010A8:  add esp,4,-,203304 04,uv 10 10  1  53      
000002AB,004010AB:  mov eax,[ebp+8],-,213105 08,vu 01 20  1  53      
000002AE,004010AE:  mov ecx,[#00432F08],-,213015 082F4300,uv 02 00  1  54      -- frep
000002B4,004010B4:  mov [eax],ecx,-,211010,uv 00 03  1  56 02 *01*
000002B6,004010B6:  mov eax,[ebp+8],-,213105 08,vu 01 20  1  56      
000002B9,004010B9:  mov [#00432F08],eax,-,211005 082F4300,uv 00 01  1  57      -- frep
000002BF,004010BF:  jmp #00401076,-,353 B5,v  00 00  1  57      
000002C1,004010C1:  leave,-,311,np 00 00  3  58      
000002C2,004010C2:  ret,-,303,np 00 00  2  61      
,-,,,
000002C3,004010C3:  push ebp,-,125,uv 00 20  1  63              -- Var()
000002C4,004010C4:  mov ebp,esp,-,211345,vu 20 10  1  63      
000002C6,004010C6:  sub esp,16,-,201354 10000000,uv 10 10  1  64      
000002CC,004010CC:  nop,-,220,vu 00 00  1  64      
000002CD,004010CD:  mov eax,[#00402028],-,213005 28204000,uv 01 00  1  65      -- envp
000002D3,004010D3:  mov [ebp-12],eax,-,211105 F4,uv 00 21  1  66 01   -- t := envp
000002D6,004010D6:  mov [ebp-16],eax,-,211105 F0,vu 00 21  1  66      -- e := envp
000002D9,004010D9:  mov eax,[#004021C0],-,213005 C0214000,uv 01 00  1  67      -- ip
000002DF,004010DF:  add eax,1,-,203300 01,uv 01 01  1  68 01   
000002E2,004010E2:  shl eax,2,-,301340 02,u  01 01  1  69      
000002E5,004010E5:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1  69      -- mem
000002EA,004010EA:  add ecx,eax,-,001301,uv 02 03  1  70      
000002EC,004010EC:  mov eax,[ecx],-,213001,uv 01 02  1  73 02 *02*
000002EE,004010EE:  mov [ebp-8],eax,-,211105 F8,uv 00 21  1  74 01      -- x := mem[ip+1]
000002F1,004010F1:  mov eax,0,-,270 00000000,vu 01 00  1  74      
000002F6,004010F6:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1  75         -- i := 0
000002F9,004010F9:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1  75      -- i
000002FC,004010FC:  mov ecx,[ebp-8],-,213115 F8,uv 02 20  1  76      -- x
000002FF,004010FF:  cmp eax,ecx,-,071310,uv 00 03  1  77 02   
00000301,00401101:  jge #00401131,-,017215 2A000000,v  00 00  1  77      
00000307,00401107:  mov eax,[ebp-16],-,213105 F0,uv 01 20  1  78      -- e
0000030A,0040110A:  mov ecx,#00402018,-,271 18204000,vu 02 00  1  78      -- root
0000030F,0040110F:  cmp eax,ecx,-,071310,uv 00 03  1  79      
00000311,00401111:  je #00401131,-,017204 1A000000,v  00 00  1  79      
00000317,00401117:  jmp #00401127,-,351 0B000000,v  00 00  1  80      
0000031C,0040111C:  mov eax,[ebp-4],-,213105 FC,uv 01 20  1  81      -- i
0000031F,0040111F:  add eax,1,-,203300 01,uv 01 01  1  82 01   
00000322,00401122:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1  83 01   -- i
00000325,00401125:  jmp #004010F9,-,353 D2,v  00 00  1  83      
00000327,00401127:  mov eax,[ebp-16],-,213105 F0,uv 01 20  1  84      -- e
0000032A,0040112A:  mov ecx,[eax],-,213010,uv 02 01  1  87 01 *01*
0000032C,0040112C:  mov [ebp-16],ecx,-,211115 F0,uv 00 22  1  88 02   -- e := e->next
0000032F,0040112F:  jmp #0040111C,-,353 EB,v  00 00  1  88      
00000331,00401131:  mov eax,[ebp-16],-,213105 F0,uv 01 20  1  89      -- e
00000334,00401134:  mov ecx,#00402018,-,271 18204000,vu 02 00  1  89      -- root
00000339,00401139:  cmp eax,ecx,-,071310,uv 00 03  1  90      
0000033B,0040113B:  jne #0040115A,-,017205 19000000,v  00 00  1  90      
00000341,00401141:  mov eax,[ebp-8],-,213105 F8,uv 01 20  1  91      -- x
00000344,00401144:  add eax,10,-,203300 0A,uv 01 01  1  92 01   
00000347,00401147:  mov ecx,[ebp-8],-,213115 F8,vu 02 20  1  92      -- x
0000034A,0040114A:  push ecx,-,121,uv 00 02  1  93      
0000034B,0040114B:  mov ecx,#0040202C,-,271 2C204000,vu 02 00  1  93      
00000350,00401150:  push ecx,-,121,uv 00 02  1  94      
00000351,00401151:  push eax,-,120,vu 00 01  1  94      
00000352,00401152:  call #00401024,-,350 CDFEFFFF,v  00 00  1  95      -- Errorx
00000357,00401157:  add esp,12,-,203304 0C,uv 10 10  1  96      
0000035A,0040115A:  mov eax,[ebp-16],-,213105 F0,vu 01 20  1  96      -- e
0000035D,0040115D:  add eax,12,-,203300 0C,uv 01 01  1  97      
00000360,00401160:  mov ecx,[eax],-,213010,uv 02 01  1 100 01 *01*
00000362,00401162:  mov [#004021C0],ecx,-,211015 C0214000,uv 00 02  1 101 02   -- ip := e->term
00000368,00401168:  mov eax,[ebp-16],-,213105 F0,vu 01 20  1 101      -- e
0000036B,0040116B:  add eax,4,-,203300 04,uv 01 01  1 102      
0000036E,0040116E:  mov ecx,[eax],-,213010,uv 02 01  1 105 01 *01*
00000370,00401170:  add ecx,8,-,203301 08,uv 02 02  1 106 02   
00000373,00401173:  mov eax,[ecx],-,213001,uv 01 02  1 109 02 *02*
00000375,00401175:  add eax,1,-,203300 01,uv 01 01  1 110 01   
00000378,00401178:  mov [ecx],eax,-,211001,uv 00 03  1 111 01   
0000037A,0040117A:  mov eax,[ebp-16],-,213105 F0,vu 01 20  1 111      -- e
0000037D,0040117D:  add eax,4,-,203300 04,uv 01 01  1 112      
00000380,00401180:  mov ecx,[eax],-,213010,uv 02 01  1 115 01 *01*
00000382,00401182:  mov [#00402028],ecx,-,211015 28204000,uv 00 02  1 116 02   -- envp = REF(e->envp)
00000388,00401188:  mov eax,[ebp-12],-,213105 F4,vu 01 20  1 116      -- t
0000038B,0040118B:  push eax,-,120,uv 00 01  1 117      
0000038C,0040118C:  call #0040104C,-,350 BBFEFFFF,v  00 00  1 117      -- Gc(t)
00000391,00401191:  add esp,4,-,203304 04,uv 10 10  1 118      
00000394,00401194:  leave,-,311,np 00 00  3 119      
00000395,00401195:  ret,-,303,np 00 00  2 122      
,-,,,
00000396,00401196:  push ebp,-,125,uv 00 20  1 124      -- Gro()
00000397,00401197:  mov ebp,esp,-,211345,vu 20 10  1 124      
00000399,00401199:  sub esp,4,-,201354 04000000,uv 10 10  1 125      
0000039F,0040119F:  nop,-,220,vu 00 00  1 125      
000003A0,004011A0:  mov eax,[#004020F0] (_iob),-,213005 F0204000,uv 01 00  1 126      -- stdin
000003A6,004011A6:  push eax,-,120,uv 00 01  1 127 01   
000003A7,004011A7:  call #00401AE8,-,350 3C090000,v  00 00  1 127      -- fgetc()
000003AC,004011AC:  add esp,4,-,203304 04,uv 10 10  1 128      
000003AF,004011AF:  mov [ebp-4],eax,-,211105 FC,vu 00 21  1 128      -- c
000003B2,004011B2:  cmp eax,-1,-,203370 FF,uv 00 01  1 129      
000003B5,004011B5:  je #0040133A,-,017204 7F010000,v  00 00  1 129      
000003BB,004011BB:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 130      -- ecp
000003C1,004011C1:  mov ecx,eax,-,211301,uv 02 01  1 131 01   
000003C3,004011C3:  add eax,1,-,203300 01,vu 01 01  1 131      
000003C6,004011C6:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 132      -- ecp
000003CC,004011CC:  shl ecx,2,-,301341 02,u  02 02  1 133      
000003CF,004011CF:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 133      -- mem
000003D4,004011D4:  add eax,ecx,-,001310,uv 01 03  1 134      
000003D6,004011D6:  mov ecx,3,-,271 03000000,vu 02 00  1 134                -- ABS
000003DB,004011DB:  mov [eax],ecx,-,211010,uv 00 03  1 137    *01*              -- mem[ecp++] = ABS
000003DD,004011DD:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 137      -- ecp
000003E3,004011E3:  mov ecx,eax,-,211301,uv 02 01  1 138      
000003E5,004011E5:  add eax,1,-,203300 01,vu 01 01  1 138      
000003E8,004011E8:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 139      -- ecp
000003EE,004011EE:  shl ecx,2,-,301341 02,u  02 02  1 140      
000003F1,004011F1:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 140      -- mem
000003F6,004011F6:  add eax,ecx,-,001310,uv 01 03  1 141      
000003F8,004011F8:  mov ecx,2,-,271 02000000,vu 02 00  1 141                -- APP
000003FD,004011FD:  mov [eax],ecx,-,211010,uv 00 03  1 144    *01*              -- mem[ecp++] = APP
000003FF,004011FF:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 144      -- ecp
00000405,00401205:  mov ecx,eax,-,211301,uv 02 01  1 145      
00000407,00401207:  add eax,1,-,203300 01,vu 01 01  1 145      
0000040A,0040120A:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 146      -- ecp
00000410,00401210:  shl ecx,2,-,301341 02,u  02 02  1 147      
00000413,00401213:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 147      -- mem
00000418,00401218:  add eax,ecx,-,001310,uv 01 03  1 148      
0000041A,0040121A:  mov ecx,8,-,271 08000000,vu 02 00  1 148                -- 8
0000041F,0040121F:  mov [eax],ecx,-,211010,uv 00 03  1 151    *01*              -- mem[ecp++] = 8
00000421,00401221:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 151      -- ecp
00000427,00401227:  mov ecx,eax,-,211301,uv 02 01  1 152      
00000429,00401229:  add eax,1,-,203300 01,vu 01 01  1 152      
0000042C,0040122C:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 153      -- ecp
00000432,00401232:  shl ecx,2,-,301341 02,u  02 02  1 154      
00000435,00401235:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 154      -- mem
0000043A,0040123A:  add eax,ecx,-,001310,uv 01 03  1 155      
0000043C,0040123C:  mov ecx,2,-,271 02000000,vu 02 00  1 155                -- APP
00000441,00401241:  mov [eax],ecx,-,211010,uv 00 03  1 158    *01*              -- mem[ecp++] = APP
00000443,00401243:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 158      -- ecp
00000449,00401249:  mov ecx,eax,-,211301,uv 02 01  1 159      
0000044B,0040124B:  add eax,1,-,203300 01,vu 01 01  1 159      
0000044E,0040124E:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 160      -- ecp
00000454,00401254:  shl ecx,2,-,301341 02,u  02 02  1 161      
00000457,00401257:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 161      -- mem
0000045C,0040125C:  add eax,ecx,-,001310,uv 01 03  1 162      
0000045E,0040125E:  mov ecx,2,-,271 02000000,vu 02 00  1 162                -- 2
00000463,00401263:  mov [eax],ecx,-,211010,uv 00 03  1 165    *01*              -- mem[ecp++] = 2
00000465,00401265:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 165      -- ecp
0000046B,0040126B:  mov ecx,eax,-,211301,uv 02 01  1 166      
0000046D,0040126D:  add eax,1,-,203300 01,vu 01 01  1 166      
00000470,00401270:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 167      -- ecp
00000476,00401276:  shl ecx,2,-,301341 02,u  02 02  1 168      
00000479,00401279:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 168      -- mem
0000047E,0040127E:  add eax,ecx,-,001310,uv 01 03  1 169      
00000480,00401280:  mov ecx,1,-,271 01000000,vu 02 00  1 169                -- VAR
00000485,00401285:  mov [eax],ecx,-,211010,uv 00 03  1 172    *01*              -- mem[ecp++] = VAR
00000487,00401287:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 172      -- ecp
0000048D,0040128D:  mov ecx,eax,-,211301,uv 02 01  1 173      
0000048F,0040128F:  add eax,1,-,203300 01,vu 01 01  1 173      
00000492,00401292:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 174      -- ecp
00000498,00401298:  shl ecx,2,-,301341 02,u  02 02  1 175      
0000049B,0040129B:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 175      -- mem
000004A0,004012A0:  add eax,ecx,-,001310,uv 01 03  1 176      
000004A2,004012A2:  mov ecx,0,-,271 00000000,vu 02 00  1 176                -- 0
000004A7,004012A7:  mov [eax],ecx,-,211010,uv 00 03  1 179    *01*              -- mem[ecp++] = 0
000004A9,004012A9:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 179      -- ecp
000004AF,004012AF:  mov ecx,eax,-,211301,uv 02 01  1 180      
000004B1,004012B1:  add eax,1,-,203300 01,vu 01 01  1 180      
000004B4,004012B4:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 181      -- ecp
000004BA,004012BA:  shl ecx,2,-,301341 02,u  02 02  1 182      
000004BD,004012BD:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 182      -- mem
000004C2,004012C2:  add eax,ecx,-,001310,uv 01 03  1 183      
000004C4,004012C4:  mov ecx,3,-,271 03000000,vu 02 00  1 183                -- ABS
000004C9,004012C9:  mov [eax],ecx,-,211010,uv 00 03  1 186    *01*              -- mem[ecp++] = ABS
000004CB,004012CB:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 186      -- ecp
000004D1,004012D1:  mov ecx,eax,-,211301,uv 02 01  1 187      
000004D3,004012D3:  add eax,1,-,203300 01,vu 01 01  1 187      
000004D6,004012D6:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 188      -- ecp
000004DC,004012DC:  shl ecx,2,-,301341 02,u  02 02  1 189      
000004DF,004012DF:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 189      -- mem
000004E4,004012E4:  add eax,ecx,-,001310,uv 01 03  1 190      
000004E6,004012E6:  mov ecx,3,-,271 03000000,vu 02 00  1 190                -- ABS
000004EB,004012EB:  mov [eax],ecx,-,211010,uv 00 03  1 193    *01*              -- mem[ecp++] = ABS
000004ED,004012ED:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 193      -- ecp
000004F3,004012F3:  mov ecx,eax,-,211301,uv 02 01  1 194      
000004F5,004012F5:  add eax,1,-,203300 01,vu 01 01  1 194      
000004F8,004012F8:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 195      -- ecp
000004FE,004012FE:  shl ecx,2,-,301341 02,u  02 02  1 196      
00000501,00401301:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 196      -- mem
00000506,00401306:  add eax,ecx,-,001310,uv 01 03  1 197      
00000508,00401308:  mov ecx,1,-,271 01000000,vu 02 00  1 197                -- VAR
0000050D,0040130D:  mov [eax],ecx,-,211010,uv 00 03  1 200    *01*              -- mem[ecp++] = VAR
0000050F,0040130F:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 200      -- ecp
00000515,00401315:  mov ecx,eax,-,211301,uv 02 01  1 201      
00000517,00401317:  add eax,1,-,203300 01,vu 01 01  1 201      
0000051A,0040131A:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 202      -- ecp
00000520,00401320:  shl ecx,2,-,301341 02,u  02 02  1 203      
00000523,00401323:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 203      -- mem
00000528,00401328:  add eax,ecx,-,001310,uv 01 03  1 204      
0000052A,0040132A:  mov ecx,[ebp-4],-,213115 FC,vu 02 20  1 204      -- c
0000052D,0040132D:  xor ecx,-1,-,203361 FF,uv 02 02  1 205           -- ~c
00000530,00401330:  and ecx,1,-,203341 01,uv 02 02  1 206 02         -- ~c&1
00000533,00401333:  mov [eax],ecx,-,211010,uv 00 03  1 207 02                   -- mem[ecp++] = ~c&1
00000535,00401335:  jmp #004013C2,-,351 88000000,v  00 00  1 207      
            else
0000053A,0040133A:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 208      -- ecp
00000540,00401340:  mov ecx,eax,-,211301,uv 02 01  1 209 01   
00000542,00401342:  add eax,1,-,203300 01,vu 01 01  1 209      
00000545,00401345:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 210      -- ecp
0000054B,0040134B:  shl ecx,2,-,301341 02,u  02 02  1 211      
0000054E,0040134E:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 211      -- mem
00000553,00401353:  add eax,ecx,-,001310,uv 01 03  1 212      
00000555,00401355:  mov ecx,3,-,271 03000000,vu 02 00  1 212                -- ABS
0000055A,0040135A:  mov [eax],ecx,-,211010,uv 00 03  1 215    *01*              -- mem[ecp++] = ABS
0000055C,0040135C:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 215      -- ecp
00000562,00401362:  mov ecx,eax,-,211301,uv 02 01  1 216      
00000564,00401364:  add eax,1,-,203300 01,vu 01 01  1 216      
00000567,00401367:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 217      -- ecp
0000056D,0040136D:  shl ecx,2,-,301341 02,u  02 02  1 218      
00000570,00401370:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 218      -- mem
00000575,00401375:  add eax,ecx,-,001310,uv 01 03  1 219      
00000577,00401377:  mov ecx,3,-,271 03000000,vu 02 00  1 219                -- ABS
0000057C,0040137C:  mov [eax],ecx,-,211010,uv 00 03  1 222    *01*              -- mem[ecp++] = ABS
0000057E,0040137E:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 222      -- ecp
00000584,00401384:  mov ecx,eax,-,211301,uv 02 01  1 223      
00000586,00401386:  add eax,1,-,203300 01,vu 01 01  1 223      
00000589,00401389:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 224      -- ecp
0000058F,0040138F:  shl ecx,2,-,301341 02,u  02 02  1 225      
00000592,00401392:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 225      -- mem
00000597,00401397:  add eax,ecx,-,001310,uv 01 03  1 226      
00000599,00401399:  mov ecx,1,-,271 01000000,vu 02 00  1 226                -- VAR
0000059E,0040139E:  mov [eax],ecx,-,211010,uv 00 03  1 229    *01*              -- mem[ecp++] = VAR
000005A0,004013A0:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 229      -- ecp
000005A6,004013A6:  mov ecx,eax,-,211301,uv 02 01  1 230      
000005A8,004013A8:  add eax,1,-,203300 01,vu 01 01  1 230      
000005AB,004013AB:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 231      -- ecp
000005B1,004013B1:  shl ecx,2,-,301341 02,u  02 02  1 232      
000005B4,004013B4:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 232      -- mem
000005B9,004013B9:  add eax,ecx,-,001310,uv 01 03  1 233      
000005BB,004013BB:  mov ecx,0,-,271 00000000,vu 02 00  1 233                -- 0
000005C0,004013C0:  mov [eax],ecx,-,211010,uv 00 03  1 236    *01*              -- mem[ecp++] = 0
            end if
000005C2,004013C2:  leave,-,311,np 00 00  3 237      
000005C3,004013C3:  ret,-,303,np 00 00  2 240      
,-,,,
000005C4,004013C4:  push ebp,-,125,uv 00 20  1 242      -- Put()
000005C5,004013C5:  mov ebp,esp,-,211345,vu 20 10  1 242      
000005C7,004013C7:  sub esp,0,-,201354 00000000,uv 10 10  1 243      
000005CD,004013CD:  nop,-,220,vu 00 00  1 243      
000005CE,004013CE:  mov eax,[#004021C0],-,213005 C0214000,uv 01 00  1 244      -- ip
000005D4,004013D4:  and eax,1,-,203340 01,uv 01 01  1 245 01    -- ip &1
000005D7,004013D7:  add eax,48,-,203300 30,uv 01 01  1 246 01   -- + '0'
000005DA,004013DA:  mov ecx,[#004020F0] (_iob),-,213015 F0204000,vu 02 00  1 246      -- stdin, erm stdout
000005E0,004013E0:  add ecx,32,-,203301 20,uv 02 02  1 247      
000005E3,004013E3:  push ecx,-,121,uv 00 02  1 248 02   
000005E4,004013E4:  push eax,-,120,vu 00 01  1 248      
000005E5,004013E5:  call #00401AF0,-,350 06070000,v  00 00  1 249      -- fputc()
000005EA,004013EA:  add esp,8,-,203304 08,uv 10 10  1 250      
000005ED,004013ED:  mov eax,2,-,270 02000000,vu 01 00  1 250      
000005F2,004013F2:  mov [#004021C0],eax,-,211005 C0214000,uv 00 01  1 251      -- ip = 2
000005F8,004013F8:  leave,-,311,np 00 00  3 252      
000005F9,004013F9:  ret,-,303,np 00 00  2 255      
,-,,,
000005FA,004013FA:  push ebp,-,125,uv 00 20  1 257      -- Bye()
000005FB,004013FB:  mov ebp,esp,-,211345,vu 20 10  1 257      
000005FD,004013FD:  sub esp,4,-,201354 04000000,uv 10 10  1 258      
00000603,00401403:  nop,-,220,vu 00 00  1 258      
00000604,00401404:  mov eax,[#004021C0],-,213005 C0214000,uv 01 00  1 259      -- ip
0000060A,0040140A:  add eax,2,-,203300 02,uv 01 01  1 260 01   
0000060D,0040140D:  shl eax,2,-,301340 02,u  01 01  1 261      
00000610,00401410:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1 261      -- mem
00000615,00401415:  add ecx,eax,-,001301,uv 02 03  1 262      
00000617,00401417:  mov eax,[ecx],-,213001,uv 01 02  1 265 02 *02*
00000619,00401419:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 266 01      -- rc := mem[ip+2]
0000061C,0040141C:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 266         -- rc
0000061F,0040141F:  test eax,eax,-,205300,uv 00 01  1 267      
00000621,00401421:  je #00401439,-,017204 12000000,v  00 00  1 267      
00000627,00401427:  mov eax,#00402042,-,270 42204000,uv 01 00  1 268      -- "CONTINUATIONS EXHAUSTED"
0000062C,0040142C:  push eax,-,120,uv 00 01  1 269 01   
0000062D,0040142D:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 269      -- rc
00000630,00401430:  push eax,-,120,uv 00 01  1 270      
00000631,00401431:  call #00401000,-,350 CAFBFFFF,v  00 00  1 270      -- Error
00000636,00401436:  add esp,8,-,203304 08,uv 10 10  1 271      
00000639,00401439:  mov eax,0,-,270 00000000,vu 01 00  1 271      
0000063E,0040143E:  push eax,-,120,uv 00 01  1 272      
0000063F,0040143F:  call #00401AE0,-,350 9C060000,v  00 00  1 272      -- exit()
00000644,00401444:  add esp,4,-,203304 04,uv 10 10  1 273      
00000647,00401447:  leave,-,311,np 00 00  3 274      
00000648,00401448:  ret,-,303,np 00 00  2 277      
,-,,,
00000649,00401449:  push ebp,-,125,uv 00 20  1 279      -- Abs()
0000064A,0040144A:  mov ebp,esp,-,211345,vu 20 10  1 279      
0000064C,0040144C:  sub esp,4,-,201354 04000000,uv 10 10  1 280      
00000652,00401452:  nop,-,220,vu 00 00  1 280      
00000653,00401453:  mov eax,[#00432F0C],-,213005 0C2F4300,uv 01 00  1 281      -- contp
00000659,00401459:  test eax,eax,-,205300,uv 00 01  1 282 01   
0000065B,0040145B:  je #00401466,-,017204 05000000,v  00 00  1 282      
00000661,00401461:  jmp #0040146B,-,351 05000000,v  00 00  1 283      
00000666,00401466:  call #004013FA,-,350 8FFFFFFF,v  00 00  1 284      -- Bye()
0000066B,0040146B:  mov eax,[#00432F0C],-,213005 0C2F4300,uv 01 00  1 285      -- contp
00000671,00401471:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 286 01   -- t := contp
00000674,00401474:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 286      -- t
00000677,00401477:  mov ecx,[eax],-,213010,uv 02 01  1 289    *01*
00000679,00401479:  mov [#00432F0C],ecx,-,211015 0C2F4300,uv 00 02  1 290 02   -- contp := t->next
0000067F,0040147F:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 290      -- t
00000682,00401482:  mov ecx,[#00402028],-,213015 28204000,uv 02 00  1 291      -- envp
00000688,00401488:  mov [eax],ecx,-,211010,uv 00 03  1 293 02 *01*  -- t->next := envp
0000068A,0040148A:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 293      -- t
0000068D,0040148D:  mov [#00402028],eax,-,211005 28204000,uv 00 01  1 294      -- envp
00000693,00401493:  mov eax,[#004021C0],-,213005 C0214000,vu 01 00  1 294      -- ip
00000699,00401499:  add eax,1,-,203300 01,uv 01 01  1 295      
0000069C,0040149C:  mov [#004021C0],eax,-,211005 C0214000,uv 00 01  1 296 01   -- ip
000006A2,004014A2:  leave,-,311,np 00 00  3 297      
000006A3,004014A3:  ret,-,303,np 00 00  2 300      
,-,,,
000006A4,004014A4:  push ebp,-,125,uv 00 20  1 302      -- Alloc()
000006A5,004014A5:  mov ebp,esp,-,211345,vu 20 10  1 302      
000006A7,004014A7:  sub esp,4,-,201354 04000000,uv 10 10  1 303      
000006AD,004014AD:  nop,-,220,vu 00 00  1 303      
000006AE,004014AE:  mov eax,[#00432F08],-,213005 082F4300,uv 01 00  1 304      -- frep
000006B4,004014B4:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 305 01          -- t
000006B7,004014B7:  test eax,eax,-,205300,vu 00 01  1 305      
000006B9,004014B9:  je #004014C4,-,017204 05000000,v  00 00  1 306      
000006BF,004014BF:  jmp #004014FC,-,351 38000000,v  00 00  1 307      
000006C4,004014C4:  mov eax,16,-,270 10000000,uv 01 00  1 308      -- sizeof(struct Closure)
000006C9,004014C9:  push eax,-,120,uv 00 01  1 309 01   
000006CA,004014CA:  mov eax,1,-,270 01000000,vu 01 00  1 309      
000006CF,004014CF:  push eax,-,120,uv 00 01  1 310      
000006D0,004014D0:  call #00401AF8,-,350 23060000,v  00 00  1 310      -- calloc()
000006D5,004014D5:  add esp,8,-,203304 08,uv 10 10  1 311      
000006D8,004014D8:  mov [ebp-4],eax,-,211105 FC,vu 00 21  1 311         -- t := ""
000006DB,004014DB:  test eax,eax,-,205300,uv 00 01  1 312      
000006DD,004014DD:  je #004014E8,-,017204 05000000,v  00 00  1 312      
000006E3,004014E3:  jmp #004014FC,-,351 14000000,v  00 00  1 313      
000006E8,004014E8:  mov eax,#0040205A,-,270 5A204000,uv 01 00  1 314      -- "OUT OF HEAP"
000006ED,004014ED:  push eax,-,120,uv 00 01  1 315 01   
000006EE,004014EE:  mov eax,6,-,270 06000000,vu 01 00  1 315      
000006F3,004014F3:  push eax,-,120,uv 00 01  1 316      
000006F4,004014F4:  call #00401000,-,350 07FBFFFF,v  00 00  1 316      -- Error
000006F9,004014F9:  add esp,8,-,203304 08,uv 10 10  1 317      
000006FC,004014FC:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 317         -- t
000006FF,004014FF:  mov ecx,[eax],-,213010,uv 02 01  1 320    *01*      -- t->next
00000701,00401501:  mov [#00432F08],ecx,-,211015 082F4300,uv 00 02  1 321 02   -- frep := t->next
00000707,00401507:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 321         -- t
0000070A,0040150A:  add eax,8,-,203300 08,uv 01 01  1 322      
0000070D,0040150D:  mov ecx,1,-,271 01000000,vu 02 00  1 322      
00000712,00401512:  mov [eax],ecx,-,211010,uv 00 03  1 325    *01*      -- t->refs := 1
00000714,00401514:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 325      -- return t
00000717,00401517:  jmp #0040151C,-,351 00000000,v  00 00  1 326      
0000071C,0040151C:  leave,-,311,np 00 00  3 327      
0000071D,0040151D:  ret,-,303,np 00 00  2 330      
,-,,,
0000071E,0040151E:  push ebp,-,125,uv 00 20  1 332      -- App()
0000071F,0040151F:  mov ebp,esp,-,211345,vu 20 10  1 332      
00000721,00401521:  sub esp,12,-,201354 0C000000,uv 10 10  1 333      
00000727,00401527:  nop,-,220,vu 00 00  1 333      
00000728,00401528:  mov eax,[#004021C0],-,213005 C0214000,uv 01 00  1 334      -- ip
0000072E,0040152E:  add eax,1,-,203300 01,uv 01 01  1 335 01   
00000731,00401531:  shl eax,2,-,301340 02,u  01 01  1 336      
00000734,00401534:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1 336      -- mem
00000739,00401539:  add ecx,eax,-,001301,uv 02 03  1 337      
0000073B,0040153B:  mov eax,[ecx],-,213001,uv 01 02  1 340 02 *02*
0000073D,0040153D:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 341 01   -- x = mem[ip+1]
00000740,00401540:  call #004014A4,-,350 5FFFFFFF,v  00 00  1 341      -- Alloc()
00000745,00401545:  mov [ebp-8],eax,-,211105 F8,uv 00 21  1 342      -- *t = Alloc()
00000748,00401548:  mov eax,[ebp-8],-,213105 F8,vu 01 20  1 342      -- t
0000074B,0040154B:  add eax,12,-,203300 0C,uv 01 01  1 343      
0000074E,0040154E:  mov ecx,[#004021C0],-,213015 C0214000,vu 02 00  1 343      -- ip
00000754,00401554:  add ecx,2,-,203301 02,uv 02 02  1 344      
00000757,00401557:  mov edx,[ebp-4],-,213125 FC,vu 04 20  1 344      -- x
0000075A,0040155A:  add ecx,edx,-,001321,uv 02 06  1 345      
0000075C,0040155C:  mov [eax],ecx,-,211010,uv 00 03  1 346 02       -- t->term = ip + 2 + x;
0000075E,0040155E:  mov eax,[ebp-8],-,213105 F8,vu 01 20  1 346      -- t
00000761,00401561:  add eax,4,-,203300 04,uv 01 01  1 347      
00000764,00401564:  mov ecx,[ebp-8],-,213115 F8,vu 02 20  1 347      -- t
00000767,00401567:  add ecx,12,-,203301 0C,uv 02 02  1 348      
0000076A,0040156A:  mov edx,[ecx],-,213021,uv 04 02  1 351 02 *02*   -- t->term
0000076C,0040156C:  cmp edx,21,-,203372 15,uv 00 04  1 352 04   
0000076F,0040156F:  jle #00401592,-,017216 1D000000,v  00 00  1 352      
00000775,00401575:  mov ecx,[ebp-8],-,213115 F8,uv 02 20  1 353      -- t
00000778,00401578:  add ecx,12,-,203301 0C,uv 02 02  1 354 02   
0000077B,0040157B:  mov edx,[ecx],-,213021,uv 04 02  1 357 02 *02*  -- t->term
0000077D,0040157D:  mov ecx,[#004021C4],-,213015 C4214000,vu 02 00  1 357      -- ecp
00000783,00401583:  cmp edx,ecx,-,071312,uv 00 06  1 358            -- t->term!=ecp
00000785,00401585:  je #00401592,-,017204 07000000,v  00 00  1 358      
0000078B,0040158B:  mov ecx,1,-,271 01000000,uv 02 00  1 359      
00000790,00401590:  jmp #00401597,-,353 05,v  00 00  1 359      
00000792,00401592:  mov ecx,0,-,271 00000000,uv 02 00  1 360      
00000797,00401597:  mov [ebp-12],eax,-,211105 F4,vu 00 21  1 360      -- <tmp>
0000079A,0040159A:  test ecx,ecx,-,205311,uv 00 02  1 361      
0000079C,0040159C:  je #004015B7,-,017204 15000000,v  00 00  1 361      
000007A2,004015A2:  mov eax,[#00402028],-,213005 28204000,uv 01 00  1 362      -- envp
000007A8,004015A8:  add eax,8,-,203300 08,uv 01 01  1 363 01   
000007AB,004015AB:  mov ecx,[eax],-,213010,uv 02 01  1 366 01 *01*
000007AD,004015AD:  add ecx,1,-,203301 01,uv 02 02  1 367 02   
000007B0,004015B0:  mov [eax],ecx,-,211010,uv 00 03  1 368 02           -- envp->refs += 1
000007B2,004015B2:  jmp #004015C1,-,351 0A000000,v  00 00  1 368      
000007B7,004015B7:  mov eax,#00402018,-,270 18204000,uv 01 00  1 369      -- &root
000007BC,004015BC:  jmp #004015C7,-,351 06000000,v  00 00  1 369      
000007C1,004015C1:  mov eax,[#00402028],-,213005 28204000,uv 01 00  1 370      -- envp
000007C7,004015C7:  mov ecx,[ebp-12],-,213115 F4,vu 02 20  1 370      -- <tmp>
000007CA,004015CA:  mov [ecx],eax,-,211001,uv 00 03  1 373    *02*      t->envp = <tmp>
000007CC,004015CC:  mov eax,[ebp-8],-,213105 F8,vu 01 20  1 373      -- t
000007CF,004015CF:  mov ecx,[#00432F0C],-,213015 0C2F4300,uv 02 00  1 374      -- contp
000007D5,004015D5:  mov [eax],ecx,-,211010,uv 00 03  1 376 02 *01*
000007D7,004015D7:  mov eax,[ebp-8],-,213105 F8,vu 01 20  1 376      -- t
000007DA,004015DA:  mov [#00432F0C],eax,-,211005 0C2F4300,uv 00 01  1 377      -- contp
000007E0,004015E0:  mov eax,[#004021C0],-,213005 C0214000,vu 01 00  1 377      -- ip
000007E6,004015E6:  add eax,2,-,203300 02,uv 01 01  1 378      
000007E9,004015E9:  mov [#004021C0],eax,-,211005 C0214000,uv 00 01  1 379 01   -- ip
000007EF,004015EF:  leave,-,311,np 00 00  3 380      
000007F0,004015F0:  ret,-,303,np 00 00  2 383      
,-,,,
000007F1,004015F1:  push ebp,-,125,uv 00 20  1 385      -- Iop()
000007F2,004015F2:  mov ebp,esp,-,211345,vu 20 10  1 385      
000007F4,004015F4:  sub esp,0,-,201354 00000000,uv 10 10  1 386      
000007FA,004015FA:  nop,-,220,vu 00 00  1 386      
000007FB,004015FB:  mov eax,[#004021C0],-,213005 C0214000,uv 01 00  1 387      -- ip
00000801,00401601:  mov ecx,[#004021C4],-,213015 C4214000,vu 02 00  1 387      -- ecp
00000807,00401607:  cmp eax,ecx,-,071310,uv 00 03  1 388      
00000809,00401609:  jne #00401619,-,017205 0A000000,v  00 00  1 388      
0000080F,0040160F:  call #00401196,-,350 82FBFFFF,v  00 00  1 389      -- Gro()
00000814,00401614:  jmp #0040161E,-,351 05000000,v  00 00  1 390      
00000819,00401619:  call #004013C4,-,350 A6FDFFFF,v  00 00  1 391      -- Put()
0000081E,0040161E:  mov eax,[#00402028],-,213005 28204000,uv 01 00  1 392      -- envp
00000824,00401624:  push eax,-,120,uv 00 01  1 393 01   
00000825,00401625:  call #0040104C,-,350 22FAFFFF,v  00 00  1 393      -- Gc()
0000082A,0040162A:  add esp,4,-,203304 04,uv 10 10  1 394      
0000082D,0040162D:  mov eax,#00402018,-,270 18204000,vu 01 00  1 394      -- root
00000832,00401632:  mov [#00402028],eax,-,211005 28204000,uv 00 01  1 395      -- envp = &root;
00000838,00401638:  leave,-,311,np 00 00  3 396      
00000839,00401639:  ret,-,303,np 00 00  2 399      
,-,,,
0000083A,0040163A:  push ebp,-,125,uv 00 20  1 401      -- Rex()
0000083B,0040163B:  mov ebp,esp,-,211345,vu 20 10  1 401      
0000083D,0040163D:  sub esp,0,-,201354 00000000,uv 10 10  1 402      
00000843,00401643:  nop,-,220,vu 00 00  1 402      
00000844,00401644:  mov eax,[#004021C0],-,213005 C0214000,uv 01 00  1 403      -- ip
0000084A,0040164A:  shl eax,2,-,301340 02,u  01 01  1 404      
0000084D,0040164D:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1 404      -- mem
00000852,00401652:  add ecx,eax,-,001301,uv 02 03  1 405      
00000854,00401654:  mov eax,[ecx],-,213001,uv 01 02  1 408 02 *02*      -- mem[ip]
00000856,00401656:  jmp #00401660,-,351 05000000,v  00 00  1 408      
0000085B,0040165B:  jmp #00401669,-,351 09000000,v  00 00  1 409      
00000860,00401660:  cmp eax,1,-,203370 01,uv 00 01  1 410               -- case VAR
00000863,00401663:  jne #00401678,-,017205 0F000000,v  00 00  1 410      
00000869,00401669:  call #004010C3,-,350 55FAFFFF,v  00 00  1 411      -- Var()
0000086E,0040166E:  jmp #004016CF,-,351 5C000000,v  00 00  1 412      
00000873,00401673:  jmp #00401681,-,351 09000000,v  00 00  1 413      
00000878,00401678:  cmp eax,2,-,203370 02,uv 00 01  1 414               -- case APP
0000087B,0040167B:  jne #00401690,-,017205 0F000000,v  00 00  1 414      
00000881,00401681:  call #0040151E,-,350 98FEFFFF,v  00 00  1 415      -- App()
00000886,00401686:  jmp #004016CF,-,351 44000000,v  00 00  1 416      
0000088B,0040168B:  jmp #00401699,-,351 09000000,v  00 00  1 417      
00000890,00401690:  cmp eax,3,-,203370 03,uv 00 01  1 418               -- case ABS
00000893,00401693:  jne #004016A8,-,017205 0F000000,v  00 00  1 418      
00000899,00401699:  call #00401449,-,350 ABFDFFFF,v  00 00  1 419      -- Abs()
0000089E,0040169E:  jmp #004016CF,-,351 2C000000,v  00 00  1 420      
000008A3,004016A3:  jmp #004016B1,-,351 09000000,v  00 00  1 421      
000008A8,004016A8:  cmp eax,0,-,203370 00,uv 00 01  1 422               -- case IOP
000008AB,004016AB:  jne #004016BB,-,017205 0A000000,v  00 00  1 422      
000008B1,004016B1:  call #004015F1,-,350 3BFFFFFF,v  00 00  1 423      -- Iop()
000008B6,004016B6:  jmp #004016CF,-,351 14000000,v  00 00  1 424      
000008BB,004016BB:  mov eax,#00402066,-,270 66204000,uv 01 00  1 425      -- "CORRUPT TERM"
000008C0,004016C0:  push eax,-,120,uv 00 01  1 426 01   
000008C1,004016C1:  mov eax,7,-,270 07000000,vu 01 00  1 426      
000008C6,004016C6:  push eax,-,120,uv 00 01  1 427      
000008C7,004016C7:  call #00401000,-,350 34F9FFFF,v  00 00  1 427      -- Error
000008CC,004016CC:  add esp,8,-,203304 08,uv 10 10  1 428      
000008CF,004016CF:  leave,-,311,np 00 00  3 429                 -- end switch
000008D0,004016D0:  ret,-,303,np 00 00  2 432      
,-,,,
000008D1,004016D1:  push ebp,-,125,uv 00 20  1 434                      -- GetBit
000008D2,004016D2:  mov ebp,esp,-,211345,vu 20 10  1 434      
000008D4,004016D4:  sub esp,4,-,201354 04000000,uv 10 10  1 435      
000008DA,004016DA:  nop,-,220,vu 00 00  1 435      
000008DB,004016DB:  mov eax,[ebp+8],-,213105 08,uv 01 20  1 436      -- f
000008DE,004016DE:  push eax,-,120,uv 00 01  1 437 01   
000008DF,004016DF:  call #00401AE8,-,350 04040000,v  00 00  1 437      -- fgetc()
000008E4,004016E4:  add esp,4,-,203304 04,uv 10 10  1 438      
000008E7,004016E7:  mov [ebp-4],eax,-,211105 FC,vu 00 21  1 438      -- c
000008EA,004016EA:  cmp eax,-1,-,203370 FF,uv 00 01  1 439      
000008ED,004016ED:  je #004016FC,-,017204 09000000,v  00 00  1 439      
000008F3,004016F3:  mov eax,[ebp-4],-,213105 FC,uv 01 20  1 440      -- c
000008F6,004016F6:  and eax,1,-,203340 01,uv 01 01  1 441 01   
000008F9,004016F9:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 442 01   -- c &= 1
000008FC,004016FC:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 442      -- return c
000008FF,004016FF:  shl eax,24,-,301340 18,u  01 01  1 443      
00000902,00401702:  sar eax,24,-,301370 18,u  01 01  1 444      
00000905,00401705:  jmp #0040170A,-,351 00000000,v  00 00  1 444      
0000090A,0040170A:  leave,-,311,np 00 00  3 445      
0000090B,0040170B:  ret,-,303,np 00 00  2 448      
,-,,,
0000090C,0040170C:  push ebp,-,125,uv 00 20  1 450              -- NeedBit()
0000090D,0040170D:  mov ebp,esp,-,211345,vu 20 10  1 450      
0000090F,0040170F:  sub esp,4,-,201354 04000000,uv 10 10  1 451      
00000915,00401715:  nop,-,220,vu 00 00  1 451      
00000916,00401716:  mov eax,[ebp+8],-,213105 08,uv 01 20  1 452      -- f
00000919,00401719:  push eax,-,120,uv 00 01  1 453 01   
0000091A,0040171A:  call #004016D1,-,350 B2FFFFFF,v  00 00  1 453      -- GetBit
0000091F,0040171F:  add esp,4,-,203304 04,uv 10 10  1 454      
00000922,00401722:  mov [ebp-1],al,-,210105 FF,vu 00 21  1 454      -- c
00000925,00401725:  movsx eax,byte [ebp-1],-,017276105 FF,np 01 20  4 455      -- c
00000929,00401729:  cmp eax,-1,-,203370 FF,uv 00 01  1 459      
0000092C,0040172C:  jne #00401746,-,017205 14000000,v  00 00  1 459      
00000932,00401732:  mov eax,#00402073,-,270 73204000,uv 01 00  1 460      -- "UNEXPECTED EOF"
00000937,00401737:  push eax,-,120,uv 00 01  1 461 01   
00000938,00401738:  mov eax,9,-,270 09000000,vu 01 00  1 461      
0000093D,0040173D:  push eax,-,120,uv 00 01  1 462      
0000093E,0040173E:  call #00401000,-,350 BDF8FFFF,v  00 00  1 462      -- Error
00000943,00401743:  add esp,8,-,203304 08,uv 10 10  1 463      
00000946,00401746:  movsx eax,byte [ebp-1],-,017276105 FF,np 01 20  4 464      -- return c
0000094A,0040174A:  jmp #0040174F,-,351 00000000,v  00 00  1 468      
0000094F,0040174F:  leave,-,311,np 00 00  3 469      
00000950,00401750:  ret,-,303,np 00 00  2 472      
,-,,,
00000951,00401751:  push ebp,-,125,uv 00 20  1 474      -- Parse
00000952,00401752:  mov ebp,esp,-,211345,vu 20 10  1 474      
00000954,00401754:  sub esp,32,-,201354 20000000,uv 10 10  1 475      
0000095A,0040175A:  nop,-,220,vu 00 00  1 475      
0000095B,0040175B:  mov eax,0,-,270 00000000,uv 01 00  1 476      
00000960,00401760:  mov [ebp-10],al,-,210105 F6,uv 00 21  1 477 01   -- need
00000963,00401763:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 477      -- ecp
00000969,00401769:  mov [ebp-8],eax,-,211105 F8,uv 00 21  1 478      -- start
0000096C,0040176C:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 478      -- ecp
00000972,00401772:  add eax,2,-,203300 02,uv 01 01  1 479      
00000975,00401775:  cmp eax,50000,-,201370 50C30000,uv 00 01  1 480 01   -- TERMS
0000097B,0040177B:  jle #00401795,-,017216 14000000,v  00 00  1 480      
00000981,00401781:  mov eax,#00402082,-,270 82204000,uv 01 00  1 481      
00000986,00401786:  push eax,-,120,uv 00 01  1 482 01   
00000987,00401787:  mov eax,5,-,270 05000000,vu 01 00  1 482      
0000098C,0040178C:  push eax,-,120,uv 00 01  1 483      
0000098D,0040178D:  call #00401000,-,350 6EF8FFFF,v  00 00  1 483      -- Error
00000992,00401792:  add esp,8,-,203304 08,uv 10 10  1 484      
00000995,00401795:  mov eax,[ebp+16],-,213105 10,vu 01 20  1 484      -- f
00000998,00401798:  push eax,-,120,uv 00 01  1 485      
00000999,00401799:  call #004016D1,-,350 33FFFFFF,v  00 00  1 485      -- GetBit
0000099E,0040179E:  add esp,4,-,203304 04,uv 10 10  1 486      
000009A1,004017A1:  mov [ebp-9],al,-,210105 F7,vu 00 21  1 486      -- bit
000009A4,004017A4:  cmp eax,-1,-,203370 FF,uv 00 01  1 487      
000009A7,004017A7:  jne #004017DC,-,017205 2F000000,v  00 00  1 487      
000009AD,004017AD:  movsx eax,byte [ebp-10],-,017276105 F6,np 01 20  4 488      -- need
000009B1,004017B1:  test eax,eax,-,205300,uv 00 01  1 492      
000009B3,004017B3:  je #004017BE,-,017204 05000000,v  00 00  1 492      
000009B9,004017B9:  jmp #004017C3,-,351 05000000,v  00 00  1 493      
000009BE,004017BE:  jmp #00401910,-,351 4D010000,v  00 00  1 494      
000009C3,004017C3:  mov eax,#0040208F,-,270 8F204000,uv 01 00  1 495      -- "UNFINISHED EXPRESSION"
000009C8,004017C8:  push eax,-,120,uv 00 01  1 496 01   
000009C9,004017C9:  mov eax,9,-,270 09000000,vu 01 00  1 496      
000009CE,004017CE:  push eax,-,120,uv 00 01  1 497      
000009CF,004017CF:  call #00401000,-,350 2CF8FFFF,v  00 00  1 497      -- Error
000009D4,004017D4:  add esp,8,-,203304 08,uv 10 10  1 498      
000009D7,004017D7:  jmp #0040190B,-,351 2F010000,v  00 00  1 498      
000009DC,004017DC:  movsx eax,byte [ebp-9],-,017276105 F7,np 01 20  4 499      -- bit
000009E0,004017E0:  test eax,eax,-,205300,uv 00 01  1 503      
000009E2,004017E2:  je #0040185B,-,017204 73000000,v  00 00  1 503      
000009E8,004017E8:  mov eax,0,-,270 00000000,uv 01 00  1 504      
000009ED,004017ED:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 505 01   -- t
000009F0,004017F0:  mov eax,[ebp+16],-,213105 10,vu 01 20  1 505      -- f
000009F3,004017F3:  push eax,-,120,uv 00 01  1 506      
000009F4,004017F4:  call #0040170C,-,350 13FFFFFF,v  00 00  1 506      -- NeedBit()
000009F9,004017F9:  add esp,4,-,203304 04,uv 10 10  1 507      
000009FC,004017FC:  test eax,eax,-,205300,vu 00 01  1 507      
000009FE,004017FE:  je #0040180F,-,017204 0B000000,v  00 00  1 508      
00000A04,00401804:  mov eax,[ebp-4],-,213105 FC,uv 01 20  1 509      -- t
00000A07,00401807:  add eax,1,-,203300 01,uv 01 01  1 510 01   
00000A0A,0040180A:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 511 01   -- t
00000A0D,0040180D:  jmp #004017F0,-,353 E1,v  00 00  1 511      
00000A0F,0040180F:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 512      -- ecp
00000A15,00401815:  mov ecx,eax,-,211301,uv 02 01  1 513 01   
00000A17,00401817:  add eax,1,-,203300 01,vu 01 01  1 513      
00000A1A,0040181A:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 514      -- ecp
00000A20,00401820:  shl ecx,2,-,301341 02,u  02 02  1 515      
00000A23,00401823:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 515      -- mem
00000A28,00401828:  add eax,ecx,-,001310,uv 01 03  1 516      
00000A2A,0040182A:  mov ecx,1,-,271 01000000,vu 02 00  1 516      
00000A2F,0040182F:  mov [eax],ecx,-,211010,uv 00 03  1 519    *01*      -- mem[ecp++] = VAR
00000A31,00401831:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 519      -- ecp
00000A37,00401837:  mov ecx,eax,-,211301,uv 02 01  1 520      
00000A39,00401839:  add eax,1,-,203300 01,vu 01 01  1 520      
00000A3C,0040183C:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 521      -- ecp
00000A42,00401842:  shl ecx,2,-,301341 02,u  02 02  1 522      
00000A45,00401845:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 522      -- mem
00000A4A,0040184A:  add eax,ecx,-,001310,uv 01 03  1 523      
00000A4C,0040184C:  mov ecx,[ebp-4],-,213115 FC,vu 02 20  1 523          -- t
00000A4F,0040184F:  mov [eax],ecx,-,211010,uv 00 03  1 526    *01*      -- mem[ecp++] = t
00000A51,00401851:  jmp #00401910,-,351 BA000000,v  00 00  1 526      
00000A56,00401856:  jmp #0040190B,-,351 B0000000,v  00 00  1 527      
00000A5B,0040185B:  mov eax,[ebp+16],-,213105 10,uv 01 20  1 528      -- f
00000A5E,0040185E:  push eax,-,120,uv 00 01  1 529 01   
00000A5F,0040185F:  call #0040170C,-,350 A8FEFFFF,v  00 00  1 529      -- NeedBit()
00000A64,00401864:  add esp,4,-,203304 04,uv 10 10  1 530      
00000A67,00401867:  test eax,eax,-,205300,vu 00 01  1 530      
00000A69,00401869:  je #004018E9,-,017204 7A000000,v  00 00  1 531      
00000A6F,0040186F:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 532      -- ecp
00000A75,00401875:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 533 01          -- t
00000A78,00401878:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 533      -- ecp
00000A7E,0040187E:  add eax,2,-,203300 02,uv 01 01  1 534      
00000A81,00401881:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 535 01   -- ecp
00000A87,00401887:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 535      -- t
00000A8A,0040188A:  shl eax,2,-,301340 02,u  01 01  1 536      
00000A8D,0040188D:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1 536      -- mem
00000A92,00401892:  add ecx,eax,-,001301,uv 02 03  1 537      
00000A94,00401894:  mov eax,2,-,270 02000000,vu 01 00  1 537      
00000A99,00401899:  mov [ecx],eax,-,211001,uv 00 03  1 540    *02*      -- mem[t] = APP
00000A9B,0040189B:  mov eax,[ebp+16],-,213105 10,vu 01 20  1 540      -- f
00000A9E,0040189E:  push eax,-,120,uv 00 01  1 541      
00000A9F,0040189F:  mov eax,0,-,270 00000000,vu 01 00  1 541      
00000AA4,004018A4:  push eax,-,120,uv 00 01  1 542      
00000AA5,004018A5:  lea eax,[ebp-28],-,215105 E4,vu 01 20  1 542      -- p
00000AA8,004018A8:  push eax,-,120,uv 00 01  1 543      
00000AA9,004018A9:  call #00401751,-,350 A3FEFFFF,v  00 00  1 543      -- Parse
00000AAE,004018AE:  add esp,12,-,203304 0C,uv 10 10  1 544      
00000AB1,004018B1:  mov eax,8,-,270 08000000,vu 01 00  1 544      
00000AB6,004018B6:  push eax,-,120,uv 00 01  1 545      
00000AB7,004018B7:  lea eax,[ebp-28],-,215105 E4,vu 01 20  1 545      -- p
00000ABA,004018BA:  push eax,-,120,uv 00 01  1 546      
00000ABB,004018BB:  lea eax,[ebp-20],-,215105 EC,vu 01 20  1 546      
00000ABE,004018BE:  push eax,-,120,uv 00 01  1 547      
00000ABF,004018BF:  call #00401B00,-,350 3C020000,v  00 00  1 547      -- memcpy()
00000AC4,004018C4:  add esp,12,-,203304 0C,uv 10 10  1 548      
00000AC7,004018C7:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 548      -- t
00000ACA,004018CA:  add eax,1,-,203300 01,uv 01 01  1 549      
00000ACD,004018CD:  shl eax,2,-,301340 02,u  01 01  1 550      
00000AD0,004018D0:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1 550      -- mem
00000AD5,004018D5:  add ecx,eax,-,001301,uv 02 03  1 551      
00000AD7,004018D7:  mov eax,[ebp-20],-,213105 EC,vu 01 20  1 551      
00000ADA,004018DA:  mov [ecx],eax,-,211001,uv 00 03  1 554    *02*  -- mem[t+1] = p.n
00000ADC,004018DC:  mov eax,1,-,270 01000000,vu 01 00  1 554      
00000AE1,004018E1:  mov [ebp-10],al,-,210105 F6,uv 00 21  1 555      -- need = 1
00000AE4,004018E4:  jmp #0040190B,-,351 22000000,v  00 00  1 555      
00000AE9,004018E9:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 556      -- ecp
00000AEF,004018EF:  mov ecx,eax,-,211301,uv 02 01  1 557 01   
00000AF1,004018F1:  add eax,1,-,203300 01,vu 01 01  1 557      
00000AF4,004018F4:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 558      -- ecp
00000AFA,004018FA:  shl ecx,2,-,301341 02,u  02 02  1 559      
00000AFD,004018FD:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 559      -- mem
00000B02,00401902:  add eax,ecx,-,001310,uv 01 03  1 560      
00000B04,00401904:  mov ecx,3,-,271 03000000,vu 02 00  1 560      
00000B09,00401909:  mov [eax],ecx,-,211010,uv 00 03  1 563    *01*      -- mem[ecp++] = ABS
00000B0B,0040190B:  jmp #0040176C,-,351 5CFEFFFF,v  00 00  1 563      
00000B10,00401910:  lea eax,[ebp-20],-,215105 EC,uv 01 20  1 564      
00000B13,00401913:  add eax,4,-,203300 04,uv 01 01  1 565 01   
00000B16,00401916:  mov ecx,[ebp-8],-,213115 F8,vu 02 20  1 565      -- start
00000B19,00401919:  mov [eax],ecx,-,211010,uv 00 03  1 568    *01*
00000B1B,0040191B:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 568      -- ecp
00000B21,00401921:  mov ecx,[ebp-8],-,213115 F8,uv 02 20  1 569      -- start
00000B24,00401924:  sub eax,ecx,-,051310,uv 01 03  1 570 02   
00000B26,00401926:  mov [ebp-20],eax,-,211105 EC,uv 00 21  1 571 01
00000B29,00401929:  mov eax,[ebp+8],-,213105 08,vu 01 20  1 571      
00000B2C,0040192C:  mov ecx,8,-,271 08000000,uv 02 00  1 572      
00000B31,00401931:  push ecx,-,121,uv 00 02  1 573 02   
00000B32,00401932:  lea ecx,[ebp-20],-,215115 EC,vu 02 20  1 573      
00000B35,00401935:  push ecx,-,121,uv 00 02  1 574      
00000B36,00401936:  push eax,-,120,vu 00 01  1 574      
00000B37,00401937:  mov [ebp-32],eax,-,211105 E0,uv 00 21  1 575      
00000B3A,0040193A:  call #00401B00,-,350 C1010000,v  00 00  1 575      -- memcpy()
00000B3F,0040193F:  add esp,12,-,203304 0C,uv 10 10  1 576      
00000B42,00401942:  jmp #00401947,-,351 00000000,v  00 00  1 576      
00000B47,00401947:  leave,-,311,np 00 00  3 577      
00000B48,00401948:  ret,-,303,np 00 00  2 580      
,-,,,
00000B49,00401949:  push ebp,-,125,uv 00 20  1 582              -- LoadRom()
00000B4A,0040194A:  mov ebp,esp,-,211345,vu 20 10  1 582      
00000B4C,0040194C:  sub esp,4,-,201354 04000000,uv 10 10  1 583      
00000B52,00401952:  nop,-,220,vu 00 00  1 583      
00000B53,00401953:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 584      -- ecp
00000B59,00401959:  cmp eax,23,-,203370 17,uv 00 01  1 585 01   
00000B5C,0040195C:  jge #0040199C,-,017215 3A000000,v  00 00  1 585      
00000B62,00401962:  jmp #00401978,-,351 11000000,v  00 00  1 586      
00000B67,00401967:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 587      -- ecp
00000B6D,0040196D:  add eax,1,-,203300 01,uv 01 01  1 588 01   
00000B70,00401970:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 589 01   -- ecp
00000B76,00401976:  jmp #00401953,-,353 DB,v  00 00  1 589      
00000B78,00401978:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 590      -- ecp
00000B7E,0040197E:  shl eax,2,-,301340 02,u  01 01  1 591      
00000B81,00401981:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1 591      -- mem
00000B86,00401986:  add ecx,eax,-,001301,uv 02 03  1 592      
00000B88,00401988:  mov eax,#00402000,-,270 00204000,vu 01 00  1 592      
00000B8D,0040198D:  mov edx,[#004021C4],-,213025 C4214000,uv 04 00  1 593      -- ecp
00000B93,00401993:  add eax,edx,-,001320,uv 01 05  1 594 04   
00000B95,00401995:  movsx edx,byte [eax],-,017276020,np 04 01  4 597    *01*
00000B98,00401998:  mov [ecx],edx,-,211021,uv 00 06  1 601      
00000B9A,0040199A:  jmp #00401967,-,353 CB,v  00 00  1 601      
00000B9C,0040199C:  mov eax,9,-,270 09000000,uv 01 00  1 602      
00000BA1,004019A1:  mov [#004021D8],eax,-,211005 D8214000,uv 00 01  1 603 01   -- mem[4] = 9
00000BA7,004019A7:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 603      -- ecp
00000BAD,004019AD:  sub eax,2,-,203350 02,uv 01 01  1 604      
00000BB0,004019B0:  mov [#004021CC],eax,-,211005 CC214000,uv 00 01  1 605 01   -- mem[2] = ecp-2
00000BB6,004019B6:  leave,-,311,np 00 00  3 606      
00000BB7,004019B7:  ret,-,303,np 00 00  2 609      
,-,,,
00000BB8,004019B8:  push ebp,-,125,uv 00 20  1 611                  -- Krivine() [line 237]
00000BB9,004019B9:  mov ebp,esp,-,211345,vu 20 10  1 611      
00000BBB,004019BB:  sub esp,20,-,201354 14000000,uv 10 10  1 612      -- <tmp>(4 @ ebp-20), <tmp2>(8@ ebp-16), gotoget(4@ebp-8), main(4@ebp-4)
00000BC1,004019C1:  nop,-,220,vu 00 00  1 612      
00000BC2,004019C2:  call #00401949,-,350 82FFFFFF,v  00 00  1 613           -- LoadRom()
00000BC7,004019C7:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 614      -- ecp
00000BCD,004019CD:  mov ecx,eax,-,211301,uv 02 01  1 615 01   
00000BCF,004019CF:  add eax,1,-,203300 01,vu 01 01  1 615      
00000BD2,004019D2:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 616      -- ecp
00000BD8,004019D8:  shl ecx,2,-,301341 02,u  02 02  1 617      
00000BDB,004019DB:  mov eax,#004021C8,-,270 C8214000,vu 01 00  1 617      -- mem
00000BE0,004019E0:  add eax,ecx,-,001310,uv 01 03  1 618      
00000BE2,004019E2:  mov ecx,2,-,271 02000000,vu 02 00  1 618      
00000BE7,004019E7:  mov [eax],ecx,-,211010,uv 00 03  1 621    *01*          -- mem[ecp++] = APP
00000BE9,004019E9:  mov eax,[#004021C4],-,213005 C4214000,vu 01 00  1 621      -- ecp
00000BEF,004019EF:  mov ecx,eax,-,211301,uv 02 01  1 622      
00000BF1,004019F1:  add eax,1,-,203300 01,vu 01 01  1 622      
00000BF4,004019F4:  mov [#004021C4],eax,-,211005 C4214000,uv 00 01  1 623      -- ecp
00000BFA,004019FA:  mov [ebp-8],ecx,-,211115 F8,vu 00 22  1 623          -- gotoget := ecp++
00000BFD,004019FD:  mov eax,[#004021C4],-,213005 C4214000,uv 01 00  1 624      -- ecp
00000C03,00401A03:  mov [ebp-4],eax,-,211105 FC,uv 00 21  1 625 01   -- main := ecp
00000C06,00401A06:  mov eax,[ebp-8],-,213105 F8,vu 01 20  1 625      -- gotoget
00000C09,00401A09:  shl eax,2,-,301340 02,u  01 01  1 626      
00000C0C,00401A0C:  mov ecx,#004021C8,-,271 C8214000,vu 02 00  1 626      -- mem
00000C11,00401A11:  add ecx,eax,-,001301,uv 02 03  1 627                    -- (lea main[gotoget])
00000C13,00401A13:  mov eax,[#004020F0] (_iob),-,213005 F0204000,vu 01 00  1 627      -- stdin
00000C19,00401A19:  push eax,-,120,uv 00 01  1 628      
00000C1A,00401A1A:  mov eax,1,-,270 01000000,vu 01 00  1 628      
00000C1F,00401A1F:  push eax,-,120,uv 00 01  1 629      
00000C20,00401A20:  lea eax,[ebp-16],-,215105 F0,vu 01 20  1 629        -- lea <tmp2> (a Closure?)
00000C23,00401A23:  push eax,-,120,uv 00 01  1 630      
00000C24,00401A24:  mov [ebp-20],ecx,-,211115 EC,vu 00 22  1 630        -- <tmp> := &mem[gotoget]
00000C27,00401A27:  call #00401751,-,350 25FDFFFF,v  00 00  1 631      -- Parse
00000C2C,00401A2C:  add esp,12,-,203304 0C,uv 10 10  1 632      
00000C2F,00401A2F:  mov eax,[ebp-16],-,213105 F0,vu 01 20  1 632      -- <tmp2>
00000C32,00401A32:  mov ecx,[ebp-20],-,213115 EC,uv 02 20  1 633      -- <tmp>
00000C35,00401A35:  mov [ecx],eax,-,211001,uv 00 03  1 636 02 *02*      -- mem[gotoget] = tmp2.n
00000C37,00401A37:  call #0040163A,-,350 FEFBFFFF,v  00 00  1 636      -- Rex()
00000C3C,00401A3C:  jmp #00401A37,-,353 F9,v  00 00  1 637      
00000C3E,00401A3E:  leave,-,311,np 00 00  3 638      
00000C3F,00401A3F:  ret,-,303,np 00 00  2 641      
,-,,,
00000C40,00401A40:  push ebp,-,125,uv 00 20  1 643      
00000C41,00401A41:  mov ebp,esp,-,211345,vu 20 10  1 643      
00000C43,00401A43:  sub esp,0,-,201354 00000000,uv 10 10  1 644      
00000C49,00401A49:  nop,-,220,vu 00 00  1 644      
00000C4A,00401A4A:  call #004019B8,-,350 69FFFFFF,v  00 00  1 645      Krivine() [line 250]
00000C4F,00401A4F:  leave,-,311,np 00 00  3 646      
00000C50,00401A50:  ret,-,303,np 00 00  2 649      
,-,,,
00000C51,00401A51:  add [eax],al,-,000000,uv 00 01  3 651      
00000C53,00401A53:  add [eax],al,-,000000,vu 00 01  3 653      
00000C55,00401A55:  add [eax],al,-,000000,uv 00 01  3 654      
00000C57,00401A57:  add [eax],al,-,000000,vu 00 01  3 656      
00000C59,00401A59:  add [eax],al,-,000000,uv 00 01  3 657      
00000C5B,00401A5B:  add [eax],al,-,000000,vu 00 01  3 659      
00000C5D,00401A5D:  add [eax],al,-,000000,uv 00 01  3 660      
00000C5F,00401A5F:  nop,-,220,vu 00 00  1 662      
entry point:
00000C60,00401A60:  push ebp,-,125,uv 00 20  1 663      
00000C61,00401A61:  mov ebp,esp,-,211345,vu 20 10  1 663      
00000C63,00401A63:  sub esp,20,-,201354 14000000,uv 10 10  1 664      
00000C69,00401A69:  nop,-,220,vu 00 00  1 664      
00000C6A,00401A6A:  mov eax,0,-,270 00000000,uv 01 00  1 665      
00000C6F,00401A6F:  mov [ebp-20],eax,-,211105 EC,uv 00 21  1 666 01   
00000C72,00401A72:  mov eax,196608,-,270 00000300,vu 01 00  1 666      
00000C77,00401A77:  push eax,-,120,uv 00 01  1 667      
00000C78,00401A78:  mov eax,65536,-,270 00000100,vu 01 00  1 667      
00000C7D,00401A7D:  push eax,-,120,uv 00 01  1 668      
00000C7E,00401A7E:  call #00401B08,-,350 85000000,v  00 00  1 668      -- _controlfp()
00000C83,00401A83:  add esp,8,-,203304 08,uv 10 10  1 669      
00000C86,00401A86:  mov eax,1,-,270 01000000,vu 01 00  1 669      
00000C8B,00401A8B:  push eax,-,120,uv 00 01  1 670      
00000C8C,00401A8C:  call #00401B10,-,350 7F000000,v  00 00  1 670      -- __set_app_type()
00000C91,00401A91:  add esp,4,-,203304 04,uv 10 10  1 671      
00000C94,00401A94:  lea eax,[ebp-20],-,215105 EC,vu 01 20  1 671      
00000C97,00401A97:  push eax,-,120,uv 00 01  1 672      
00000C98,00401A98:  mov eax,0,-,270 00000000,vu 01 00  1 672      
00000C9D,00401A9D:  push eax,-,120,uv 00 01  1 673      
00000C9E,00401A9E:  lea eax,[ebp-12],-,215105 F4,vu 01 20  1 673      
00000CA1,00401AA1:  push eax,-,120,uv 00 01  1 674      
00000CA2,00401AA2:  lea eax,[ebp-8],-,215105 F8,vu 01 20  1 674      
00000CA5,00401AA5:  push eax,-,120,uv 00 01  1 675      
00000CA6,00401AA6:  lea eax,[ebp-4],-,215105 FC,vu 01 20  1 675      
00000CA9,00401AA9:  push eax,-,120,uv 00 01  1 676      
00000CAA,00401AAA:  call #00401B18,-,350 69000000,v  00 00  1 676      -- __getmainargs()
00000CAF,00401AAF:  add esp,20,-,203304 14,uv 10 10  1 677      
00000CB2,00401AB2:  mov eax,[ebp-12],-,213105 F4,vu 01 20  1 677      
00000CB5,00401AB5:  push eax,-,120,uv 00 01  1 678      
00000CB6,00401AB6:  mov eax,[ebp-8],-,213105 F8,vu 01 20  1 678      
00000CB9,00401AB9:  push eax,-,120,uv 00 01  1 679      
00000CBA,00401ABA:  mov eax,[ebp-4],-,213105 FC,vu 01 20  1 679      
00000CBD,00401ABD:  push eax,-,120,uv 00 01  1 680      
00000CBE,00401ABE:  call #00401A40,-,350 7DFFFFFF,v  00 00  1 680      -- main() [line 248]
00000CC3,00401AC3:  add esp,12,-,203304 0C,uv 10 10  1 681      
00000CC6,00401AC6:  mov [ebp-16],eax,-,211105 F0,vu 00 21  1 681      
00000CC9,00401AC9:  mov eax,[ebp-16],-,213105 F0,uv 01 20  1 682      
00000CCC,00401ACC:  push eax,-,120,uv 00 01  1 683 01   
00000CCD,00401ACD:  call #00401AE0,-,350 0E000000,v  00 00  1 683      -- exit()
00000CD2,00401AD2:  add esp,4,-,203304 04,uv 10 10  1 684      
00000CD5,00401AD5:  leave,-,311,np 00 00  3 685      
00000CD6,00401AD6:  ret,-,303,np 00 00  2 688      
,-,,,
00000CD7,00401AD7:  add bh,bh,-,000377,uv 08 08  1 690      
00000CD9,00401AD9:  and eax,#004020E8,-,045 E8204000,vu 01 01  1 690      
00000CDE,00401ADE:  add [eax],al,-,000000,uv 00 01  3 693    *01*
00000CE0,00401AE0:  jmp [#004020EC] (exit),-,377045 EC204000,np 00 00  2 696      --[done]
00000CE6,00401AE6:  add [eax],al,-,000000,uv 00 01  3 698      
00000CE8,00401AE8:  jmp [#004020F4] (fgetc),-,377045 F4204000,np 00 00  2 701      --[done]
00000CEE,00401AEE:  add [eax],al,-,000000,uv 00 01  3 703      
00000CF0,00401AF0:  jmp [#004020F8] (fputc),-,377045 F8204000,np 00 00  2 706      --[done]
00000CF6,00401AF6:  add [eax],al,-,000000,uv 00 01  3 708      
00000CF8,00401AF8:  jmp [#004020FC] (calloc),-,377045 FC204000,np 00 00  2 711      --[done]
00000CFE,00401AFE:  add [eax],al,-,000000,uv 00 01  3 713      
00000D00,00401B00:  jmp [#00402100] (memcpy),-,377045 00214000,np 00 00  2 716      --[done]
00000D06,00401B06:  add [eax],al,-,000000,uv 00 01  3 718      
00000D08,00401B08:  jmp [#00402104] (_controlfp),-,377045 04214000,np 00 00  2 721      --[done]
00000D0E,00401B0E:  add [eax],al,-,000000,uv 00 01  3 723      
00000D10,00401B10:  jmp [#00402108] (__set_app_type),-,377045 08214000,np 00 00  2 726      --[done]
00000D16,00401B16:  add [eax],al,-,000000,uv 00 01  3 728      
00000D18,00401B18:  jmp [#0040210C] (__getmainargs),-,377045 0C214000,np 00 00  2 731      -- [done]
00000D1E,00401B1E:  add [eax],al,-,000000,uv 00 01  3 733      
00000D20,00401B20:  padding,-,00000000 00000000 00000000 00000000 ,................
00000D30,00401B30:  padding,-,00000000 00000000 00000000 00000000 ,................
00000D40,00401B40:  padding,-,00000000 00000000 00000000 00000000 ,................
00000D50,00401B50:  padding,-,00000000 00000000 00000000 00000000 ,................
00000D60,00401B60:  padding,-,00000000 00000000 00000000 00000000 ,................
00000D70,00401B70:  padding,-,00000000 00000000 00000000 00000000 ,................
00000D80,00401B80:  padding,-,00000000 00000000 00000000 00000000 ,................
00000D90,00401B90:  padding,-,00000000 00000000 00000000 00000000 ,................
00000DA0,00401BA0:  padding,-,00000000 00000000 00000000 00000000 ,................
00000DB0,00401BB0:  padding,-,00000000 00000000 00000000 00000000 ,................
00000DC0,00401BC0:  padding,-,00000000 00000000 00000000 00000000 ,................
00000DD0,00401BD0:  padding,-,00000000 00000000 00000000 00000000 ,................
00000DE0,00401BE0:  padding,-,00000000 00000000 00000000 00000000 ,................
00000DF0,00401BF0:  padding,-,00000000 00000000 00000000 00000000 ,................
Import Section
==============
00000EC0,OriginalFirstThunk,h4,00002114h,Hint Name Array, see 0x00000F14
00000EC4,TimeDateStamp,h4,00000000h,(should be 0 if not bound)
00000EC8,ForwarderChain,h4,00000000h,
00000ECC,Name,h4,00002140h,[0x00000F40:msvcrt.dll]
00000ED0,FirstThunk,h4,000020E8h,Hint Name Array, see 0x00000EE8
,-,,,
00000ED4,OriginalFirstThunk,h4,00000000h,
00000ED8,TimeDateStamp,h4,00000000h,(should be 0 if not bound)
00000EDC,ForwarderChain,h4,00000000h,
00000EE0,Name,h4,00000000h,
00000EE4,FirstThunk,h4,00000000h,
,-,,,
00000EE8,Thunk [004020E8],h4,0000214Bh,[0x00000F4B:printf]
00000EEC,Thunk [004020EC],h4,00002154h,[0x00000F54:exit]
00000EF0,Thunk [004020F0],h4,0000215Bh,[0x00000F5B:_iob]
00000EF4,Thunk [004020F4],h4,00002162h,[0x00000F62:fgetc]
00000EF8,Thunk [004020F8],h4,0000216Ah,[0x00000F6A:fputc]
00000EFC,Thunk [004020FC],h4,00002172h,[0x00000F72:calloc]
00000F00,Thunk [00402100],h4,0000217Bh,[0x00000F7B:memcpy]
00000F04,Thunk [00402104],h4,00002184h,[0x00000F84:_controlfp]
00000F08,Thunk [00402108],h4,00002191h,[0x00000F91:__set_app_type]
00000F0C,Thunk [0040210C],h4,000021A2h,[0x00000FA2:__getmainargs]
00000F10,terminator,h4,00000000h,
,-,,,
00000F14,Original Thunk,h4,0000214Bh,see 0x00000F4B
00000F18,Original Thunk,h4,00002154h,see 0x00000F54
00000F1C,Original Thunk,h4,0000215Bh,see 0x00000F5B
00000F20,Original Thunk,h4,00002162h,see 0x00000F62
00000F24,Original Thunk,h4,0000216Ah,see 0x00000F6A
00000F28,Original Thunk,h4,00002172h,see 0x00000F72
00000F2C,Original Thunk,h4,0000217Bh,see 0x00000F7B
00000F30,Original Thunk,h4,00002184h,see 0x00000F84
00000F34,Original Thunk,h4,00002191h,see 0x00000F91
00000F38,Original Thunk,h4,000021A2h,see 0x00000FA2
00000F3C,terminator,h4,00000000h,
,-,,,
00000F40,Name,-,msvcrt.dll,
,-,,,
00000F4B,Hint,h2,0000h,
00000F4D,Name,-,printf,
,-,,,
00000F54,Hint,h2,0000h,
00000F56,Name,-,exit,
,-,,,
00000F5B,Hint,h2,0000h,
00000F5D,Name,-,_iob,
,-,,,
00000F62,Hint,h2,0000h,
00000F64,Name,-,fgetc,
,-,,,
00000F6A,Hint,h2,0000h,
00000F6C,Name,-,fputc,
,-,,,
00000F72,Hint,h2,0000h,
00000F74,Name,-,calloc,
,-,,,
00000F7B,Hint,h2,0000h,
00000F7D,Name,-,memcpy,
,-,,,
00000F84,Hint,h2,0000h,
00000F86,Name,-,_controlfp,
,-,,,
00000F91,Hint,h2,0000h,
00000F93,Name,-,__set_app_type,
,-,,,
00000FA2,Hint,h2,0000h,
00000FA4,Name,-,__getmainargs,
,-,,,
Data Section
============
00000E00,00402000 (raw),-,02000302 00010003 02030202 01000302 ,................
00000E10,00402010 (raw),-,04020101 00000000 00000000 00000000 ,................
00000E20,00402020 (raw),-,01000000 00000000 18204000 554E4445 ,......... @.UNDE
00000E30,00402030 (raw),-,46494E45 44205641 52494142 4C452025 ,FINED VARIABLE %
00000E40,00402040 (raw),-,6400434F 4E54494E 55415449 4F4E5320 ,d.CONTINUATIONS 
00000E50,00402050 (raw),-,45584841 55535445 44004F55 54204F46 ,EXHAUSTED.OUT OF
00000E60,00402060 (raw),-,20484541 5000434F 52525550 54205445 , HEAP.CORRUPT TE
00000E70,00402070 (raw),-,524D0055 4E455850 45435445 4420454F ,RM.UNEXPECTED EO
00000E80,00402080 (raw),-,46004F55 54204F46 20544552 4D530055 ,F.OUT OF TERMS.U
00000E90,00402090 (raw),-,4E46494E 49534845 44204558 50524553 ,NFINISHED EXPRES
00000EA0,004020A0 (raw),-,53494F4E 00000000 00000000 00000000 ,SION............
00000EB0,004020B0 (raw),-,00000000 00000000 00000000 00000000 ,................
00000EC0,004020C0 (raw),-,14210000 00000000 00000000 40210000 ,.!..........@!..
00000ED0,004020D0 (raw),-,E8200000 00000000 00000000 00000000 ,. ..............
00000EE0,004020E0 (raw),-,00000000 00000000 4B210000 54210000 ,........K!..T!..
00000EF0,004020F0 (raw),-,5B210000 62210000 6A210000 72210000 ,[!..b!..j!..r!..
00000F00,00402100 (raw),-,7B210000 84210000 91210000 A2210000 ,{!...!...!...!..
00000F10,00402110 (raw),-,00000000 4B210000 54210000 5B210000 ,....K!..T!..[!..
00000F20,00402120 (raw),-,62210000 6A210000 72210000 7B210000 ,b!..j!..r!..{!..
00000F30,00402130 (raw),-,84210000 91210000 A2210000 00000000 ,.!...!...!......
00000F40,00402140 (raw),-,6D737663 72742E64 6C6C0000 00707269 ,msvcrt.dll...pri
00000F50,00402150 (raw),-,6E746600 00006578 69740000 005F696F ,ntf...exit..._io
00000F60,00402160 (raw),-,62000000 66676574 63000000 66707574 ,b...fgetc...fput
00000F70,00402170 (raw),-,63000000 63616C6C 6F630000 006D656D ,c...calloc...mem
00000F80,00402180 (raw),-,63707900 00005F63 6F6E7472 6F6C6670 ,cpy..._controlfp
00000F90,00402190 (raw),-,0000005F 5F736574 5F617070 5F747970 ,...__set_app_typ
00000FA0,004021A0 (raw),-,65000000 5F5F6765 746D6169 6E617267 ,e...__getmainarg
00000FB0,004021B0 (raw),-,73000000 00000000 00000000 00000000 ,s...............
00000FC0,004021C0 (raw),-,00000000 00000000 00000000 00000000 ,................
                          ^ip      ^ecp     ^mem:actually huge!
00000FD0,004021D0 (raw),-,00000000 00000000 00000000 00000000 ,................
00000FE0,004021E0 (raw),-,00000000 00000000 00000000 00000000 ,................
00000FF0,004021F0 (raw),-,00000000 00000000 00000000 00000000 ,................
Not Phix
========
,-,,,RVA[13] (IAT) not empty
,-,,,data section rawsize<size
