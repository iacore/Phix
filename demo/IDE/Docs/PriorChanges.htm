<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Archie & Judith">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.06 [en] (Win98; U) [Netscape]">
   <TITLE>IDE Historical "What's New"</TITLE>
</HEAD>
<BODY>

&nbsp;
<CENTER>
<H2>
<FONT COLOR="#3366FF"><a name="ChangeLog">IDE Historical "What's New"</a></FONT></H1></CENTER>
<P><B>See <U>What's New</u> in IDE.htm for changes in current release.
</B>
<P><B><U>v1.0.4</B></U>
</B>
<BR>This release requires Win32lib v0.70.4a or later.
<BR><I> Bugs Fixed: </I>
<LI>Caption for RichEdit wasn't being drawn in Design.
<LI>setIndex for RichEdit control was 1 letter too short when specifing a range to select. This is a difference between IDEWin32lib and 
Win32lib and showed up when setting RichEdit caption's font in Design.
<LI>Using &P in both Project and GenerateProgram captions prevented Alt key to work with either. Changed &Project to P&roject.
<LI>When showing the Win32lib version in Help/About needed to add a space between the digits and date.
<LI>Code Editor opened at different screen locations when in Configurations option "Closed" was checked but opened properly when 
not checked.
<LI>Fixed bug in find/replace where "find/replace"  and "find/replace all" changes were lost when project saved immediately after 
using them.
<LI>Launch Pass File will now pass file as .exw or .ew depending what has been set up in Generate Tools/Program Information.
<LI>Corrected error when user changes Timer Name.
<LI>Fixed crash when attempting to change ReBar font.
<LI>When changing HintFontName, Properties was still showing old HintFontName.
<LI>Manage Include Statements always saved even when user clicked Cancel button.
<LI>There is a problem in Menu, Popup and Timer editors where the use of destroy(a window) crashes. The destroy statement has been removed.
<LI>Fixed problem with deleting menu from class modules when Name changed or menu/menuitem deleted
<LI>Fixed problem showing menuitems under TheMenus:window when one of their Name is subset of another. For example if MenuSaveAs is
 before MenuSave then MenuSaveAs would not show.
<LI>Fixed problem where setTimer and killTimer statements were not written for Code Editor events which did not have procedure/end procedure unless in General event.
<LI>Properties showed Position Caption and in +Control Styles showed Caption Position for colored buttons. Only one worked so the other has been removed.
<LI>Fixed bug in MenuRun and MenuTempRun where ex.err might be in wrong folder if user had changed current directory from the 
generated exw.
<LI>Fixed problem with Visual ListViewStyles Explorer caused by using destroy() without validId().
<LI>Fixed problem with Visual ListViewStyles Explorer option "Single Click Activate" not being remembered. 

<P><I>Improvements and Enhancements: </I>
<LI>User may check setCreateFont attribute in Properties for Window class control and enter Font data to create all controls with this 
font. If a non Window class control has Font data in Properties, then that control will use the Font data specified for that control.
<LI>Added a new icon for ColoredButton in ToolKit. This icon sets the internal property to treat as a colored button and when Properties are viewed
the colored button ones are present. When PushButton icon is selected, the internal property is not set and colored button Properties are
not visible. User may change button from a colored button to a normal button and visaversa via "Color Button?" checkbox after "Class" but both Properties
are internally saved so user may change his mind and switch back without loss of data.  If control is a colored button user code is parsed 
and revelent win32lib routine names are changed to coloredbutton.ew ones in the generated exw.
<LI>allow user to indicate less than 4 grid size in configurations. 4 will remain the default.
<LI>When passing IDEPassFile.exw to editor of choice, the file will be placed in the project folder. If there is no project folder then the file
will be placed in IDE's folder.
<LI>Changed the tab order in Find. Removed "Direction" group control but retained the "Up" and "Down" radio controls. 
<LI>Find/Replace may be restricted to the current procedure or function. Check the option "Restrict to current routine" to activate. 
<LI>Win32libScan has been rewritten to parse the Win32lib Include folder and find global routine names for coloration in Code Editor and
editor.exw.
<LI>FontName, FontSize, HintFontName and HintFontSize are all initialized to the win32lib default font or size when a control 
or window is added to Design instead of &lt;Default>
<LI>Removed line length limitation when generating the exw.
<LI>Moved some colored button cells under controlStyles.
<LI>Added location of coloredbutton.htm in Configurations.
<LI>Added ColoredButtons to Help Menu in Code Editor.
<LI>There has been an entry in Project file named "LastEditorEvent" and newly added is "LastEditorNameEvent". 
Most users do not know the correlation between event number and the w32H name.
<LI>Colored Button routine names are now colorized in Code Editor. But clicking the name does not jump to colored button docs. Instead
use new MenuItem under Help to access coloredbuttons.html.
<LI>For most IDE windows: Adjustments to controls placement and size for better language fit.
<LI>ex.err files now go into the project folder. If there is not a project folder, the ex.err goes into the IDE folder.
<LI>If IDE is started more than once and user has specified one instance of IDE, a message box will be provided telling user only one instance is allowed.
<LI>Only one instance of Visual ListView Styles Explorer is allowed.
<LI>List View Properties will show the number of columns specified in Visual ListView Styles Explorer. If an empty caption for a column is desired, in Visual Listview Styles Explorer Column Data enter one or more spaces in Title, enter column width if desired and click Add. 
<LI>ListView Test window will now show columns for all user's Headers, not just two. Thanks to Mark Young for pointing me in the right direction.
<LI>Some projects are so complex that an ex.err file is not easily located so crash_file may be optionally added at the top of the generated exw which puts the ex.err
in the project path. Once your project is error free you might wish to eliminate the crash_file statement expecially if you will be distributing to other people. You choose to use crash_file from Menu Generate Tools\Program Information.

<P><I>New Features: </I>
<LI>Added color Properties for MonthControl.
<LI>In order to keep the IDE folder tidy, I now place backups in a backup folder within the IDE folder. Configurations shows the folder 
name as 'Backups' but user may change to any folder name desired. Do not enter the folder name's path. If the folder does not exist it 
will be created. A new Configuration's Tab, "Backups", now holds configuration items related to backing up the project. User might wish 
to move existing backups to the new folder.
<LI>Code Editor uses a new custom control by Andy Drummond, Formatted List Boxes (FList), to manage the event dropdown. This serves as a demo of using
Flist as well as some IDE eye candy. Events with user code will be colored RED in the events dropdown. Last selected event is centered in the list of events so user has the most possible events in sight to choose from without scrolling.

<P><I>Other: </I>
<LI>Language translation changes: changed Msg 10,120; added Text 1198-1212; changed Text 872, 893, 894, 1016, 1126, 1149, 1162, 1171 removed Text 826, 827,866, 869, 870 
<LI>Changed words continue, replace, trim, entry, loop and store which conflict with Euphoria 4.0 thanks to Roland Stowasser.
<LI>When storing global routine names, IDE now also looks for export keyword.

<P><B><U>v1.0.3b</B></U>
<LI>Changed method to get the Default Font for printing.

<P><B><U>v1.0.3a</B></U>
<LI>Fixed a bug when project had multiple windows. Last window overlayed first window resulting in 2 last windows. 
<P><B><U>v1.0.3</B></U>
<BR><I> Bugs Fixed: </I>
<LI>fixed ex.err when adding files to Manage Include Statements when using the new Win32lib. This could have been a single or
 multiple file selection.
<LI>Table control Table Spec window allows user to specify that all cells be able to use colored buttons, but the feature was not working.
<LI>When a button control was copied, the colored button information, if any, was not copied to the new control.
<LI>Clicking on a control and then pressing CTRL key and moving the cursor creates a new control. If you elect to Index the new control 
to the existing control and later delete one or the other and save the project the next time the project is loaded into IDE a  problem might 
occur in which some of your controls are not present. This has been fixed.
<LI>Separator MenuItem under Generate Program has been removed.
<LI>Code Editor set to open at last position and size in configurations, now opens and positions correctly.
<LI>Popup in Code Editor Controls was not placed at the mouse right click point.

<P><I>Improvements and Enhancements: </I>
<LI>Added w32HKeyboard to Code Editor events and updated params comment following the procedure statements. If I missed an event 
you feel should be included or the params list is not correct please let me know.
<LI>Added Vscroll to Properties for MleText control.
<LI>Font Dialog should open with Font Name, Pts and Attributes from control Properties except when user has elected to use Vars. 
Thanks to Chris Cuvier for lots of help.
<LI>Allow Landscape printing of code in Code Editor and stand alone Editor. Added option to use default printer.
<LI>If user enters font data in Properties but with missing name, pts or attribute, when generating the exw, the missing data will be assigned 
from the default font.

<P><I>New Features: </I>
<LI>IDE no longer supports onXXX in projects
<LI>IDE About box now includes the Win32lib version patch character

<P><I>Other: </I>
<LI>Language translation changes: removed translations for msg 114, 118, 119, 159; added text 1197; changed text 540

<P><B><U>v1.0.2</B></U>
<BR><I> Bugs Fixed: </I>
<LI>After MenuRun, Code Editor MenuItem UnDo was disabled even though there was data in the stack.
The fix for this problem, in v1.0.1, caused latest statements between F5 runs to be absent from the generated exw and the project file.
So 1.0.2 returns to behavior for Code Editor Menu UnDo to be disabled after F5 even when there is data in the UnDo stack. A future release will revisit this issue.
<P><B><U>v1.0.1</B></U>
<BR><I> Bugs Fixed: </I>
<LI>Control in EuGrid may not use Property cell MayuseSetLayer per Jonas Temple.
<LI>When using F1-Esc in IDE Code Editor: Using Esc would not find statement where F1 was pressed 
if in same control-event.
<LI>After MenuRun, Code Editor MenuItem UnDo was disabled even though there was data in the stack.
<LI>Menu, Popup and Timer Editor requires alphabethic characters in first position of Name.
<LI>A freeze that periodically occurs in Code Editor may be fixed.
<LI>When using the Find dialog for an event in Code Editor and switching to another event with the dialog
still open and using the Find dialog again only the first change made from the dialog was kept. 

<P><I>Improvements and Enhancements: </I>
<LI>Editor.exw now positions an opened file at the cursor position when the file was saved. This feature does
not work with read-only files.
If you open the file in another editor, Notepad or Wordpad and then save you might loose the cursor position information.
<LI>Editor.exw and Code Editor will now allow user to set the Printer font. 
<LI>When moving from control-event to control-event in Code Editor, IDE always moved to the last 
cursor position in the control-event. 
But when reading a project the information to know where to position the text in Code Editor did not 
exist. Now the last cursor position is saved for each control-event in the project file.
<LI>Code Editor now allows user the do multiple F1 on routine names and then press multiple Esc to walk back
to where the first F1 was pressed. F1-Esc and multiple F1-Esc may be intermingled.
<LI>When open a module in code editor, "view code base\view" is disabled.
<LI>During MenuRun Controls Menu UnDo is no longer disabled.
<LI>Increased the width of UpDown control when dropped onto Design.
<LI>Provided for Help/Keys translation.
<LI>Roland Stowasser contributed a new program to help in translating English.lng to other languages. You may find it
in the Languages sub folder.

<P><I>New Features: </I>
<LI>For controls other than Window1 Code Editor adds to the dropdown Events list "MainWindow_General" where MainWindow is your 
actual main window name and, if the control has a parent,  "ParentName_General" where ParentName is the actual parent's name.
<LI>Craig Welch has added autoSave that activates when you modify or add statements in Code Editor 
which will save your existing project based on a timer interval you set.
See "Using AutoSave" for more information.
<LI>crash_routine and crash_message have been added.
<LI>Move\Paste controls from one Window to another in the same project.

<P><I>Other: </I>
<LI>Modified Language msg 10, 266, 540; added msg 268; modified text 40, 92, 482, 655; added text 1164-1195


<P><B><U>v1.0.0</B></U>
<BR><I> Bugs Fixed: </I>
<LI>Editor.exw had problems running .ex and .ew programs.
<LI>Editor was not placing in statusbar X,Y when Menu Run ex.err-ed.
<LI>setLayerVisible and setLayerEnable when used with layer number instead of layer name was not functioning properly.
<LI>Tightened up code when generating exw to ensure cbColor is only used for "PushButton","ToggleButton","PictureButton",
	"TogglePicture","DefPushButton","CancelButton" controls.
<LI>When using F1_Esc in IDE Code Editor to bounce back and forth between definition of routine and its use and user has 
	selected Options/Find First Event For Code or Options/Find Last Event For Selected Control, IDE 
	will now return to the event that F1 was performed inside. However if F1 and Esc are in the same control
	event Esc will not work correctly.
<LI>You may use cell setHandler's routine_id in other cells. This method works by Row or Column
		or All cells. In Table Specs if you select Row from the 'Common SetHandlers' then each row's
		column1 control's routine_id will be used for all columns of that row. Select Column and each 
		column's row1 controls's routine_id will be used for all rows of that column. Select All and
		every control will use cell1 routine_id. Selecting None will treat routine_ids as normal.
		If you have multiple controls in cell1 then each control is treated individually but all controls 
		in cell1 will use the same method.
	<P>If you select Row, Column, None or All and OK Table Specs then later open Table Specs and select another option the
		setHandlers that were previously revised are set back to their original value of Control Name_event. 
		If you manually changed the setHandler statment you must manually change again.
<LI>If control Properties Style contains WS_CHILD then the control must have a Parent specified. If user 
does not add a Parent in Properties the exw will not be generated.
<LI>A control's Properties Style transferred to another control when Properties +Control Styles was expanded for other controls. 
To fix this all control Styles and Style Type, including those for Window control, are located under +Control Styles.
<LI>Older project files with Popup and PopupItems encountered a problem adding new popupItem to last popup.

<P><I>Improvements and Enhancements: </I>
<LI> Editor.exw has new user Options to open always maximized, last position and size or default.
<LI> Changed behavior of Design right click popup Copy/Paste so that new control is created in Design after Paste is clicked.

<P><I>New Features: </I>
<LI>Editor.exw now has F1-Esc capability. Place cursor in a routine name and press F1 to jump to where the routine was written. Press Esc to return to statement where you pressed F1.

<P><I>Other: </I>
<LI>ChangeLog.htm has been renamed PriorChanges.htm so if you still have ChangeLog.htm in \Docs subfolder, please delete it.
<LI>Removed the number of lines verification at end of the generated exw.
<LI>Changes to Language Files: modified msg 10, 117

<P><B><U>v0.22.0</B></U> 
<BR><I>Bugs Fixed:</I>

<LI>Don't allow CWindow on Table or ReBarBand control. 
<LI>Fixed a case when copy TabItem that the new TabItem did not become the active tab. This resulted in strange results if a new TabItem was immediately added. 
<LI>Fixed bug when removing cells from Table control and ClassModules for those cells were not removed form Project View 
<LI>Fixed problem when using Table as array and have Code Editor statements referring to invokeHandler that the control name was changed to the array representation. 
<LI>Fixed problem when using Table as array and have Code Editor statements referrng to another event's procedure that the cell name was changed to the array representation. 
<LI>In code editor the amount for page up and down scrolling was larger than the amount of lines on the page. 
<LI>Andy fixed crash when to many Undo were attempted in XPMmer. 
<LI>Fixed problems jumping from where a routine was used to where it was defined in Code Editor. 
<LI>Fixed problem for cases in which a Table cell Name matches a portion of a non Table cell Name and renames the non Table cell control in error. 
<LI>During Copy control, when indexing was selected, and there was only one control copied in this manner, IDE might createEx the control with curly brackets, resulting in ex.err. Fixed a several other problems with Copy with Indexing which results in a new rule: A control created via Copy with indexing may not itself use copy with indexing but may use copy. 
<LI>DirParent in project should only be for Table control cells and is now removed if not. 
<LI>Fixed editors crash if you attempted to save a readonly file. 

<P><I>Improvements and Enhancements:</I> 

<LI>Changed exw canned routines setLayerVisible and setLayerEnable to accept sequence or integer value for layerName so that user may enter digits for layer number instead of the text layerName. Layer digits is the X in "Layer X, the base layer is 0." 
<LI>When user selects CancelButton the caption is now drawn in Italic in Design. 
<LI>Added PushButton to EuGrid allowable controls. 
<LI>Table Control now supports using the setHandler's routine_id from row or column for other rows and columns. See Table Specs for more information 
<LI>You may now right click in Design and from the popup select Copy, Move and Paste which will manipulate the selected control. 
<LI>Andy has revised XPMmer to allow creating icons smaller than 32 X 32. 
<LI>You may remove Property "Indexed To" from control which removes prior copy-indexing flag by checking Property "Remove Indexing." 
<LI>When copy a control, IDE will now construct the new control's caption as Class+incremental number unless the Caption was not the original caption; in that case Caption will be the original Caption+new incremental number as was the case in prior releases. 

<P><I>New Features:</I> 

<LI>Buttons may be colored. See coloredbutton.htm for more information. 

<P><I>Other:</I> 

<LI>Added a new section to the docs - "Non-Win32lib Routines In Generated EXW" which will describe these routines. It is located under "References." 

<P><B><U>v0.21.1</B></U>
<BR><I> Bugs Fixed: </I>
<LI>Fixed IDE crash when changing text of Initial Data for List control.
<LI>Fixed problem with translations. XPMmer translation worked when first changing language but after that when running IDE the translation was missing.
<LI>Last release setWindowBackColor was added after setTextColor so that the text color would actually show. setWindowBackColor was not a
good solution because sometimes back color was not correct. Upon recommendation by Derek Parnell repaintFG(id) is now used instead of setWindowBackColor. 
This works unless the parent is TabItem, in which case you still need to use setWindowBackColor. If your control specifies color use that value otherwise use getSysColor(COLOR_BTNFACE). If you
introduced setTextColor into your projects you might want to manually make the same change or update the project with this release.
<LI>Fixed IDE crash when attempting to move a control added to EuGrid.
<LI>Fixed problem with text color on child controls where the parent is disabled. If the parent's Property 'Enabled' is
unchecked the child control lost text color. If the user codes a setEnable statement to disable the parent the child kept its 
text color. The solution is to add all IDE generated setEnable statements at the end of all the createEx statements.
<LI>If enter Menus, Popups or Timers to a Window and then rename the Window, the entries "The Menus:", "The Popups" and "The Timers" were not renamed.
<LI>Code Editor's ViewCodeBase Search\Find did not work with Windows[tm] XP. Craig Welch islated the problem and provided code to fix this bug.

<P><I>Improvements and Enhancements: </I>
<LI>When copying controls and generating controls in Table control, Checked, Visible, Enable, Other Styles, Font, 
Control Color and Text Color, Caption Positioning will now be copied if present in the original control.
<LI>UpDown control now allows allignment on left of Buddy control. See Properties Align Left of Buddy.
<LI>UpDown control may now be horzontal. See Properties Show Horizontal.
<LI>Tab <i>Control</i> may now show tabs at bottom of the control. See Properties Show Tabs at Bottom.
<LI>Improvements to Xpmmer Icon Editor
<LI>Winlibscan, a utility that updates new Win32lib keywords to IDE's .ini file, has been reworked so that all missing input is
determined and user notified prior to attempting an update.
<LI>Mouse left double click selects word cursor is in and highlights.

<P><I>New Features: </I>
<LI>Added "Xpmmer Disable XPM" Property cell for PictureButton, TogglePicture and Bitmap controls. This property causes a duplicate button be
createEx in the <I>generated exw</I> with the disable icon. This control is named the same as the original button control with "D" added.
For example if your original button is PushButton2 the generated control is PushButton2D. The generated control has no setHandler events.
You can switch between the two icons in Design via F1 and F2 when the control is selected. If there has not been a disabled icon created, you
will see the enabled icon when pressing F2. If you have more than one control with icon and disable icon, using F1 and F2
has the same action for them all. In other words if you press F2 on one of the controls and then select another and it has a disabled icon, that icon will show even thou
you had not pressed either F1 or F2 for this control.
<P>You can copy XPMmer XPM Object to XPMmer Disable XPM Object on the same control from right click in Object under XPMmer XPM and selecting "Copy to XPMmer Disable XPM" and visa versa. 
You can copy an XPMmer icon to another PictureButton, TogglePicture or Bitmap control. The method is to select in Design the control holding the icon you wish to copy. 
In Properties select 'XPMmer XPM' or 'XPMmer Disabled XPM' (the one you want to copy) which will open the icon in XPMmer. Make your changes, if any, to the icon 
showing in the grid. When you are satisfied with the icon, move XPMmer out of the way or Minimize and select the control in Design to which you want the icon copied. 
Restore XPMmer and exit XPMmer which transfers the icon to the copy-to control. If you prefer you can copy the icon as is and reselect the copy-to control and modify 
the icon via XPMmer and exit XPMmer.
<P>The generated disable button will be setVisible to false when the exw opens. You control switching the icons by
setVisible statement pairs in the exw when needed. setVisible(active button, w32False) and setVisible(disable button, w32True) to show the
normal button and visa versa to show the disabled button. Do not use setEnable of false on either control or your icon may be grayed out.
This feature is only available via Properties. Using Menu Editors "Icon Editor" will not create the disable icon. 

<P><I>Other: </I>
<LI>I have removed ToDoList.htm from the Docs subfolder and removed references to it from IDE.htm . I will not be maintaining ToDoList.htm so if you have it in your IDE's Docs subfolder you can remove.
	 
<P><B><U>v0.21.0</B></U>
<LI>Changes to Language Files: add msg 251-264; add text 1054-1134
<LI>Removed prior error message from Code Editor's status bar when MenuRun and there is no error.
<LI>Added 'Tools' Menu to Code Editor with 'Show Color Palette" MenuItem. This allows you to
open a tool window that has 64 colors and the System colors. At the bottom you can double-click and
add your own colors from the getColorDialog. As you left click a color or double-click to add a color
the numerical value of that color shows in the titlebar. This might be useful when writing code in code
editor.
<LI>Added colorization for ProgressBar and it's bar.
<LI>Improved the way emulated Group and ScrollBar controls are drawn.
<LI>Improved the way CWindow is drawn. Sometimes when Style Type is {...} the CWindow disappeared
from Design unless actually clicked. Now it will be drawn with a dotted black outline.  
<LI>Added Left, Center and Right options for caption of PushButton, ToggleButton, DefPushButton and CancelButton.
<LI>When changing Caption, Caption Side, Font Name, Font Points, Font Attibutes or move position of LabelEdit
control and the control is in a parent, the caption will be checked that it is still within bounds of the LabelEdit's parent, if it has one.
<LI>Changing CheckBox to TriCheckBox changes the background of the checkmark to a light gray in Design.
<LI>StatusBar may be added to CWindow. StatusBar may be moved to Window or CWindow as long as they do not
already have a StatusBar.
<LI>Improved ToolBar, FlatToolBar and ReBar on CWindow: drawing in Design correctly when CWindow did
and did not have Titlebar and when moving to and from Window1.
<LI>Change of rule when adding StatusBar to project. StatusBar must be dropped onto Window or CWindow
control and not any other controls.
<LI>When backing up project before save, you can be shown the SaveAs dialog. In the event 
you want to use the default <I>projectname</I>.bak then simply press the Save button. If you want to skip the
backup, simply press the Cancel button in the dialog. If you do not want a backup at all, uncheck this option.
If you want the backup but never want to rename or skip the backup before save then check Configurations
"Re-use backup filename" next to "Backup Before Save." This will suppress showing the SaveAs dialog. The initial default state is checked
when "Backup Before Save" is checked.
<LI>Added a new backup option in Configurations for "Backup project after MenuRun if no errors" which backs up the
project after MenuRun (F5) if (1) it had been previously Saved and (2) did not ex.err or crash file. The new backup is
named <I>projectname</I>.AfterSave.bak unless you override with another filename. If you want to use
the default <I>projectname</I>.AfterSave.bak simply press Save button. If you want to skip the backup, press Cancel button
in the dialog. If you never want to rename or skip the backup then check Configurations
"Re-use backup filename" next to this option which will suppress showing the SaveAs dialog. The initial default state is unchecked.
<LI>Introducing XPMmer internal to IDE. This allows you to design your icons for Picture Button,
Toggle Picture buttons, and Bitmap controls, store them in your project file and have them placed automatically on the control in the exw. 
See documentation within XPMmer.
<LI>Good news for those of you who bind Standalone Editor.exw. No longer does Editor automatically require the latest
IDE.cfg file. If there are no new entries in Configurations for IDE which affect Editor, your previous bound version runs. 
However, if new entries affect Editor, you will get a error message when starting the prevously bound Editor and you will 
need to rebind.
<LI>IDE now correctly minimizes during MenuRun and restores when the generated exw is closed. If user
has indicated in Configurations not to minimize during MenuRun then IDE will stay on the desktop. 
<LI>The generated exw or ew will have a variable TheProgramType which may be tested within 
the program to determine if the program is an 'exw' or 'ew' which would be useful if your project
can generate either or both types of generated programs.
<LI>Properties 'Color' and 'System Color' had minor bugs. If you used the color dialog in Color
and selected Black color, the dialog correctly returned zero. However in IDE zero color means
BTNFACE. Now when selecting Black, -2 will be placed in Color. Selecting a System Color that
is Black had a similar bug and fix. Also System Color was not saved correctly and when reloading 
the project corrupted coloring, often resulting in BTNFACE. Since these bugs happen when writing the
project, I can not automatically correct for you. If you were affected by this bug, change your
Color or System Color, re-save the project and reload.
<LI>Color is no longer an expandable Property. System Color now shows below Color (for Window class)
and a new item, "User Color" has been added. "User Color" is not selectable and only a reference item.
When showing, it means you used "Color" manually or by the color dialog.
<LI>More than 10 digits in Color is ignored. 
<LI>In Design do not allow Window class use arrow keys without Shift or Control because
moving Window is not allowed, only resizing.
<LI>If you entered Property "Text Color" for EditText but did not enter "Color" the generated exw
did not change the text color. It now does.
<LI>CWindow with StatusBar caused problems in keying Property "Color" for Window1. This has been fixed.
<LI>There were reported problems with Code Editor showing the statement of an ex.err. The
routines have been reworked.
<LI>There were reported problems that adding changes or new data to Window1_General event and pressing
F5 does not save the change but closing Code Editor and then pressing F5 does. I've changed the
F5/F6 routines to use a similar method.
<LI>Added variables for Hint Font, Hint Text and Font. You must declare the variable and 
set its value within your project.A couple of points to remember. When using variable in 
FontName and/or FontPts, IDE can not draw your control in Design using the font and can not 
warn you if you LabelEdit control's caption exceeds the LabelEdit parent. To get access to
the variables check Property "Open Vars" under Font and HintFont. All the variables should
be entered in a Code Editor event with integer values except for Font Name, Hint Font Name 
and Hint Text. When using variables in Font and Hint Font attributes, the variable is an 
integer with values Bold, Italic, Underline or Strikeout. Do not combine the attributes in a single variable.
<LI>Reported cases where ToolBar was not full width of parent have been fixed.
<LI>Fixed resizing CWindow with ToolBar and ToolBar controls, where the ToolBar controls moved
to the top of the Window instead of staying in CWindow ToolBar.
<LI>Fixed problems redrawing ReBar/ReBarBand after changes to ReBarBand.
<LI>Fixed problems with Colors in EuGrid that were defaulted to BTNFACE value. 
If all the digits were removed it became zero instead of back to BTNFACE value.
<LI>Hint Font is now working.
<LI>Fixed bug in stand alone editor which sometimes crashed "find" processing. NOTE: If you have
bound editor.exw you should rebind.
<LI>You may now view and edit data you have added to IDE in any external editor which is able to read params.
Under Menu 'Launch' select 'Pass controls and routines to editor of your choice'. Your passed data is saved in IDE's folder under the name IDEPassFile.exw
for the external editor to read. Remember if you edit the file, IDE will not know anything about your changes!
IDEPassFile.exw is deleted when IDE closes. If you want to keep the file once in external editor please SaveAs another file name. 
The external editor is entered in Configurations with the default being Editor.exw if you do not enter anything.
<LI>Andy added Block select for Move, Copy and Rotate to Icon Editor.

<P><B><U>v0.20.1</B></U>
<LI>Changes to Language Files: add msg 251 
<LI>Fixed bug in which drawing CWindow was not always correct for StyleType {...}
<LI>Fixed bug where generated exw with WS_POPUP Style Window1 without WS_CAPTION did not
reduce the window height by the removed titlebar.
<LI>Added warning message when a control is in CWindow's TitleBar or left border when CWindow
has a TitleBar.
<LI>Fixed bug in finding parent of control in the Reorder Controls routine.
<LI>When changing a control's color and clicking a different control, sometimes the first control's color
was applied to the current control in error.
<LI>Control Partner list should not include parent of selected control.

<P><B><U>v0.20.0</B></U>
<LI>Changes to Language Files: chg msg 10, add msg 250 
<LI>Introducing NonTraditional Control Parents. Controls may be manually parented by non traditional IDE controls. This means
Bitmap may be parented by PictureButton, for example. To parent the new control to the control it is inside,
use Properties "parent" dropdown. Properties "Maint by user" will be checked which will prevent the new control
obtaining a different parent, other than The Window, as it is moved around Design. Unchecking "Maint by user" will allow the control
be assigned a different parent or The Window. 
<LI>When a control is added to Design a parent is established if the new control falls in Group, TabItem, Toolbar,
FlatToolBar, ReBar, ReBarBand, EuGrid, Table, StatusBar, CWindow.
The parent may be removed by the user via Properties or changed to another parent except for some controls, for example,
TabItem parent is always TabControl and ReBarBand parent, ReBar. When this happens the parent
is frozen, Properties "Maint by user" is checked and moving the control will not establish a new parent except The Window. 
You may remove the frozen state at any time
by unchecking "Maint by user" causing IDE to revert to resume normal parenting rules for the control at that time.
<LI>Introducing Control Partners. Partners are controls, outside of the selected control, that move along
with the selected control.
<LI>CWindow may now contain more controls such as ReBar, ReBarBand, ToolBar, FlatToolBar, StatusBar, Table and Tabs.
<LI>Menu, Popup and Timer editors will be under new headings under Window in ProjectView TreeView which will keep them
from dropping to the bottom of the TreeView.
<LI>No longer should a control be placed after 'Modules' and 'Class Modules' in Project View's TreeView.
<LI>Menu, Popup and Timer controls have parenting established when their respective editors close.
<LI>Adding ReBar from ToolKit will also add first ReBarBand.
<LI>Increased the response of MenuRun (F5/F6) by splitting the routine into two cases: (1)Temporary Run or
 project has not been saved and (2)project has been saved. Also project data is inspected to see if extra processing
is needed; for example, if user has not used "Change Control Order" then the controls do not need to
be placed in Control Order.
<LI>Added ability to Code Editor to jump to a routine in a module 
added to the project via Manage Include Statements or a routine in a control-event pair and return to the 
original location when finished
viewing or editing. Position cursor in the routine name and press F1 to jump to the
routine and press ESC key to return to the original code.
<LI>You may now colorize Control Name in Code Editor.
<LI>Fixed minor bug when SelectDirectory returned a path containing "..." and "?".
<LI>Fixed minor bug when clicking a control that was child to TabItem in ProjectView's TreeView did not select
the correct control in Design or show the correct control in Properties Control DropDown list but instead selected
the TabItem.
<LI>Fixed bug in which Table GenInExw was not reset properly in Table Specs when reading a project.
<LI>Fixed bug in which GenInExw was used to set Table GenBorder when TableGenBorder should have been used when
writing project.
<LI>Use of default Captions of Table cells c_x_y was not working correctly.
<LI>Table Size To Fit in Table Specs was not sizing correctly.
<LI>Fixed bug in which F1 did not always find keyword in docs.
<LI>Fixed bug in which reading project file with Code Editor open and MenuRun resulted in Code Editor not 
having focus after closing generated exw and restoring IDE's main window.
<LI>Fixed bug in which LabelEdit inside another control resulted in crash when run the project.
<LI>Fixed bug where contents of Properties dropdown 'Parent' cell was not always correct.
<LI>ToolBar was not redrawing when parent width resized.
<LI>When window style included WS_POPUP there was no check if other styles which provide TitleBar were also supplied. This resulted in
a truncated window in the generated exw (because TitleBar height was subtracted from window CY.)
<LI>Improved drawing of CWindow control in Design. The depiction is <B>not exact</B> and some trial
and error must be handled by the user when Properties 'Style' is modified.

<P><B><U>v0.19.3</B></U>
<LI>Fixed bug where OrigTitle was not established properly.

<P><B><U>v0.19.2</B></U>
<LI>German.lng has all translations current thanks to Roland Stowasser
<LI>Changed ReBarBand default CY to 14 pixels
<LI>Reworked drawing ReBar and child controls
<LI>Reworked Table Control createEx in generated exw to correctly handle cells with multiple controls and
improved the creation of their captions and other properties.
<LI>Improved the binding routines; sometimes the message after binding was hidden behind another window.
<LI>Added missing translation texts for Menu and MenuItems in IDE, Property and Code Editor.

<P><b><U>v0.19.1</B></U>
<LI>Fixed a bug where a sequence was used to obtain EuInc files Instead of an object. When user did not have EuInc files, IDE ex.err-ed  
<LI>Removed obsolete tk_trim.e from standalone editor and replaced with w32support.e

<P><B><U>v0.19.0</B></U>
<LI>Properties, ProjectView, ToolBar and Form are all created with a new method which allows much
reduction in internal code and faster processing.
<LI>When expanding Properties or Project View, Form Design now moves out of the way and may become
resized in the process. When contracting Properties or Project View, Form Design width expands.
<LI>Prop.ew, which draws and manages the cells in Properties, now allows PushButton cell to work properly.
<LI>Table Specs for Table Control may now be accessed from a Properties cell which is handy if you have a
lot of controls in your table and no open space to click in Table.
<LI>Added 'Cancel Button' to Properties Class for Button control.
<LI>Removed IDE_Help.ew and IDE_controls.edb from distribution. Help button in ToolKit will access
IDE.htm for description of ToolKit icons. The Help feature database was not being maintained and I am more likely to keep the
htm current
<LI>Added popup right click to Code Editor Control's list. The popup opens a small window of results from the following
selections: (1) Present a list of event names that have coding for the control right clicked,
(2) Sort the controls list,  
(3) Show a list of controls from other windows in the project,
(4) Show sorted list of controls from other windows in the project. 
When using option 1 you can select the event from the sorted list.
When using option 2 you can select the control from the sorted list.
This window closes when a control or event is selected from the normal Code Editor's 
Controls list or Event dropdown or one of the above options.
<LI>Improved Control Move and Resize. Now pointer versus arrow and move cursor gives you a clearer
idea what is about to happen. Tip: when pointer moves into resize hotspots the cursor will change to
respective arrow cursor. Leave a bit of the tip of the arrow outside the control and hesitate a bit
before moving the mouse. This gives IDE time to "catch up."
<LI>If you still have problems with control move vs resize Shift+R in selected Control will signal 
not to move the control while you are trying to find the hotspot to resize.
Tip: move the mouse from the center of the control outwards toward the border. When
the cursor changes from pointer to arrow, press the left mouse and pause a second or two for IDE to
catch up and while mouse is still depressed move the mouse.
<LI>To avoid confusion as to location in code of "General" event, for other than Window control, 
	 (General) is now renamed to (Control General) in Code Editor's Event drop down.
<LI>Keyboard Shift with Arrow keys may now be used to change Window1 CX and CY.
<LI>Introducing new control, LabelEdit, which is an EditText with attached Label. Label may be on left or right.
<LI>StatusBar may now use the Color attribute in Properties.
<LI>Introducing a new feature: Indicate and Store selected Events per Class for Code Editor Events dropdown.
This feature is only valid for users who have setHandler instead of onXXX style events. If I can get some help
from the Eu community I can add defaults to the initial set of selections. Presently all events
are defaulted. This feature is accessed via Menu 'Options' in Code Editor.
Note that this feature is a proof of concept and may need further enhancements.
<LI>Introducing new, optional, method to generate arrays for your exw. In this method, individual
createEx statements are not generated for the exw but instead are generated in for loops within the exw
itself. This method saves many lines of code in your exw and is selected from TableSpecs.
<LI>Introducing Properties Templates which is 'Register Styles' and 'Select From Styles' with a keyword and
data. Data may be multiple values. This is useful when selecting multiple styles for a control. You give the
template entry a meaningful key name and then you can add all the styles at once. Entries are separated by comma.
<LI>Group control, when Property attribute Color is selected, now draws only the caption area in color in Form Design.
This is the Window(tm) behavior for Group.
<LI>In Form Design an icon covering PictureButton, ToggleButton or Icon controls now responds to clicking. Use left
click to select the control behind and right click to invoke Code Editor from popup list.
<LI>ProjectView's TreeView now excludes openfolder and closefolder icons for a simplier appearance.
<LI>When changing Class between PushButton, TogglePicture, PictureButton, ToggleButton, CancelButton and
	DefPushButton, Properties was not refreshing with cells pertanent to the new class.
<LI>setHint statements moved after all createEx statements.
<LI>Property control list combo's dropdown will now show more controls before the scrollbar appears. When
Property is docked the list can expand to the bottom of Main Window. When Property is undocked the list can
expand to the bottom of the Property window.


<P><b><u>IDE v0.18.23</B></u>
<BR>Important Notes about prior releases: 
<BR>If you last used v0.18.8 and are loading a project file that had Layers, you should inspect
each control in Layers to check the attribute 'may use setLayer' in Properties or all your layer 
controls may not appear.
This is because with v0.18.10 only those controls with 'may use setLayer' checked are considered for
use by setLayerVisible and setLayerEnable. Starting with v0.18.10 controls are auto checked only if
they conform to the Menu Item "All controls in active layer may use setLayer."
<P>IDE_ScrollingWindow.ew was modified in a prior release. If you have this module in folders other than IDE's Includes then
please replace with the new version or Table control as an array will crash.
<P>If you selected 'Last Position and Size' for Code Editor in Configuration's "Describe How Major Windows Open" you
may find the first time you open IDE the positioning is wrong. This is due to some recalculations I made
when saving IDE. Position and Size Code Editor and
close IDE. The next time IDE is opened Code Editor will be positioned and sized correctly.
<P>Notes about this release
<BR>Langauge files have been modified. New msg: #77,160-162; 
revised text: #218,770-775; removed text: #776-777,779-780,782-783; new text: #1024,1025,1026,1027
 
<P>
<LI>Fixed problem with Manage Include Statements when using folder browse to select a new path. The new path is now
passed to the project file. You must reuse the folder browse in Manage Include Statements to correct the problem in
existing projects. Fixed problem where some Manage Include Files had an extra "\" written to the project file. You
 will need to edit your project file which have multiple "\" after the path; once the project is saved again the path is corrected
in the project file.
<LI>Fixed problem with project save (saveAs) in which the project path was not removed from EXW include statement file name. 
<LI>Filenames (BitMap, Icon, ListView Icon) have project path removed for project file and generated EXW.
<LI>Control may be resized to edge of Window1 with mouse as long as Design is not maximized to Form. This  
 needs more work to cover the situation where Design is maximized to Form.
<LI>TabItems may have duplicate Titles. Toolbar TabItem combo entries are now TabItem Names.
<LI>Opened up Styles Type in Properties for controls as well as for Window
<LI>Added new button to Menu and Popup editors to delete selected item plus any subs.
<LI>Added Menu Item "Save Without Asking" to Code Editor.
<LI>When Property or Project Tree undocked, IDE uses there last undocked location and size.
<LI>When changing Properties NAME, Code Editor will not change NAME within quotes.
<LI>Name cell in Properties will now always wait for Tab or Enter key. Configurations now has 'Name' checked and disabled.
<LI>When using Table control as an array and the Name of a cell in Table is the same as a literal string in a Code Editor statement,
the string is not translated to an array element of Table.
<LI>If a <i>control</i> is renamed "Form", it is now correctly added to Project View.
<LI>Fixed bug related to changing Name in Menu, Popup and Timer editors. When name was changed, Code Editor did not
show the correct data for Code Editor controls list.
<LI>Fixed some conditions under which Properties freezes.
<LI>Fixed bug in Properties and Project View when moving a cell out of Table Control did not keep Table 
as 'parent' when cell returned to Table.
<LI>When modifying a file in Code Editor without saving and switch to a control-event, IDE was not asking if user wanted to
save the file. If user does not have auto save selected, IDE will now ask if user wants to save or save(as).
<LI>Changed editor when keywords if, for, while are inside quotes not to autocomplete.
<LI>When opening IDE, Code Editor now opens correctly using Configurations selection of 
Last Position and Size, Always Open Maximized and Open Maximized if Left IDE Maximized. 
Code Editor Minimize position is now supported but only at initial opening of Code Editor. 
When showing an ex.err statement, IDE will not show Code Editor minimized. 
If user closes and reopens Code Editor and 'Last Position and Size' had been selected,
Code Editor will use the latest values established when IDE
was last closed or last closed during the current session. 
If 'Open Maximized if Left IDE Maximized' had been selected and position is size is adjusted,
Code Editor closed and reopened, Code Editor will be maximized.
If Code Editor was not maximized when IDE closed and 'Maximize if Left IDE Maximized' was selected
IDE will open Code Editor with system Default position and size.
If Code Editor was 
minimized during the session then default values will be used when closing and reopening Code Editor.
<A HREF="#Config_WindowOpen"> See documentation 'How Major Windows Open'</A> for further information.
<LI>Fixed problems where selecting 'Last position and size" for Project and Property windows did not 
position correctly on next IDE run. If you had these indicated previously you probably will need to fix your values in 2 steps. Load IDE 
and then adjust your Project and Property windows where you want them and then save IDE. When you reopen positons should be
correct. 
<LI>Brought Bind up to 2.5 options
<LI>ESC key may be used in editors to close the 'Find' window.
<LI>Fixed bug in Reorder Controls where changes didn't get saved for the next usage of Reorder Controls.
<LI>When changing class of 'List' to 'DropDownList', the control resizes and draws with button in Design for visual reference.
Selecting 'List' or 'SortedList' will return to last size when 'List' and draw without button.
<LI>Fixed bug when MenuRun and IDE maximized, after MenuRun IDE was not maximized again. This happened only
when there was not a project loaded and saved and MenuRun did a temporary run instead.
<LI>Protected Properties col, row, width and height from large numbers.
<LI>Improved positioning of Hint Window in Code Editor. Remember you may click the black square at the end
of the Hint Window and move to a new position which is remembered for the rest of the IDE session.
<LI>Inhibit using cursor keys in ProjectView's tree view.
<LI>Re-assign parent when change a control to a different layer.
<LI>Binding Option IconFileName was not being placed into binding options when reloading project file.
<LI>If user made HotKeys for Code Editor and IDE_HotKey.dat did not exist, it was wrongly defaulted to
<i>IDE's directory</i>\IDE\<i>filename</i> instead of <i>IDE's directory</i>\Files\<i>filename</i>. This
doesn't much matter except I wanted all IDE files together in the Files subfolder. If you have HotKey
files in other locations that is still permitted.
<LI>Fixed bug happening after MenuRun when user has set Last Position and Size for Controls and Form and has
resized Form prior to MenuRun. When returning after closing the test window Form was positioned at the
prior size instead of the size right before MenuRun.
<LI>Test to ensure ReBar was placed only on Window failed. This is now fixed.
<LI>StatusBar should now be positioned within Design window correctly. 
<LI>ReBar/ReBarBand resizing when adding controls to ReBarBand no longer affects controls outside of it.
<LI>Fixed bug when resize docked Property Sheet to right (which resizes docked Project View), save IDE and restart
followed by MenuRun and close of generated exw. Now Project View was the same width as Property Sheet.

<P><b><u>IDE v0.18.22 </b></u>
<BR>If you last used v0.18.8 and are loading a project file that had Layers, you should inspect
each control in Layers to check the attribute 'may use setLayer' in Properties or all your layer 
controls may not appear.
This is because with v0.18.10 only those controls with 'may use setLayer' checked are considered for
use by setLayerVisible and setLayerEnable. Starting with v0.18.10 controls are auto checked only if
they conform to the Menu Item "All controls in active layer may use setLayer."
<P>IDE_ScrollingWindow.ew has been modified. If you have this module in folders other than IDE's Includes then
please replace with the new version or Table control as an array will crash.</B>
<BR>
<LI>Now requires Win32lib v0.60.4 or later
<LI>Added WS_TABSTOP to all createEx controls in Prop.ew which contain WS_CHILD per Derek Parnell instructions. This 
addition will stop Properties window from freezing.
<LI>Fixed: If user modifies a file in Code Editor, minimizes Code Editor without saving the file and then MenuRuns then the
message box asking to save the file or not was not shown.
<LI>EuGrid control: Added Picture and DropDown. For Picture select the "Bitmap" ToolBox icon. 
For DropDown pick the "List" ToolBox icon and it is converted to DropDownList Class and EGW_DROPDOWN.
<LI>Code Editor, when open, now allows use of Design.
<LI>User may now paste text into Code Editor/stand alone editor Search Find and Replace text boxes.
<LI>Hints and Win32lib keywords (in firstTimeOtherC.ini) have been upgraded to the new Win32lib version. You can upgrade
OtherC.ini with program winlibscan.exw included in the distribution.
<LI>Fixed bug case where checked "Use Local Color" in Code Editor was not working.
<LI>Thanks to a new include module by Elliott S. de Andrade, Property, Project View and Tool Box keep title bar highlighted
 when undocked.
<LI>When resize Properties and undock then redock, the undock button for ProjectView is no longer hidden.
<LI>When selecting "New" project and Yes to save data and in the SaveAs dialog press
Cancel button, IDE will now return to Design and not continue with "New" project.
<LI>Fixed bug where controls in container controls was losing parent.
<LI>Added new option "Name change in &Properties is ignored for Code Editor Statements" due to problems when user has variables
with same name or when not using 'Wait For Enter key' on Name and Name is reduced to the same values as a variable.
<LI>Added w32HMouseTrap event to Code Editor events combo.
<LI>When moving or resizing TabItem, the TabItem was moved first in the TabItem list in ProjectView. Now it stays in
original order.
<LI>Fixed bug when place some cell controls from Table control in different layers, 
check the controls to use setLayerVisible/Enable and in the EXW generate the Table as an array. 
<LI>Improved response when building a Table control with a large number of cells.
<LI>Table cells will no longer expand beyond Window size.
<LI>When user has a Table control and the Table is an array, IDE will
supply scroll bars only if requested in Table Specs.
<LI>When changing Properties data in Name, Col and Row, Design will not take focus between keystrokes.
<LI>Added Property "Use In WinMain". When checked this window will be used in the generated EXW's WinMain statement. Default
is the first window in the project.
<LI>Allow Text Color for EditText, List, LText, CText and RText controls
<LI>Allow back color for HScrollbar and RScrollbar and Pixmap controls. Removed back color for Bitmap control.
<LI>Fixed bug when IDE opened and there were tabitems in the project, the tabitem shown in TabItem combo in toolbar was is not the same as the one drawn in Design. 
<LI>Fixed bug when delete a control in a tabitem using right click delete, the tabitem was also deleted. 
<LI>Fixed problem in Multiple File Editor showing Editor Options window selected colors. 
<LI>Fixed bug changing Name in Properties when first letter matches any other controls' first letter.
<LI>Fixed bug using arrow keys to move controls when multiple controls have been selected with Shift+S and the controls had child controls. 
<LI>Col and Row in Property may use Shift+S/Shift+A now. 
<LI>Fixed bug when configurations is set to open IDE at last position and size and IDE is minimized, then when opened again and IDE is minimized could not click in taskbar's restore selection. 
<LI>Ctrl+Shift+Arrow keys now working to resize controls.  
<LI>Properties for Eugrid EditText did not have Numeric and Format entry together.
<LI>Introducing varable caption and hint text data. Preceed varable with var: and define the varable contents
in previous code. This may only be incorporated in Caption from Properties.
<LI>When adding EuGrid control, IDE will automatically add to Manage Include Statements, if not already added by user.
<LI>When using Static control in EuGrid control, the Static control may use Multiline.
<LI>Resizing Design now resizes the overlay grid.
<LI>Revised "What is requested for future releases" to include my ToDo List. This mill ensure this information is
kept current.

<P><b><u>IDE v0.18.21 (final) </b></U>
<LI>Now requires Win32lib v0.60.1
<LI>Hints and Win32lib keywords (in firstTimeOtherC.ini) have been upgraded to the new Win32lib version. You can upgrade
OtherC.ini with program winlibscan.exw included in the distribution.
<LI>Added w32HMouseTrap event to Code Editor events combo.
<LI>When moving or resizing TabItem, the TabItem was moved first in the TabItem list in ProjectView. Now it stays in
original order.
<LI>Fixed bug when place some cell controls from Table control in different layers, 
check the controls to use setLayerVisible/Enable and in the EXW generate the Table as an array. 
<LI>Improved response when building a Table control with a large number of cells. Also added Progress Bar to monitor.
<LI>When changing Properties data in Name, Col and Row, Design will not take focus between keystrokes.
<LI>Editor's Hints and Syntax highlighting updated to Win32lib v0.60.1 contents.
<LI>Added Property "Use In WinMain". When checked this window will be used in the generated EXW's WinMain statement. Default
is the first window in the project.
<LI>Allow Text Color for EditText, List, LText, CText and RText controls
<LI>Allow back color for HScrollbar and RScrollbar and Pixmap controls. Removed back color for Bitmap control.
<LI>Fixed bug when IDE opened and there were tabitems in the project, the tabitem shown in TabItem combo in toolbar was is not the same as the one drawn in Design. 
<LI>Fixed bug when delete a control in a tabitem using right click delete, the tabitem was also deleted. 
<LI>Fixed problem in Multiple File Editor showing Editor Options window selected colors. 
<LI>Fixed bug changing Name in Properties when first letter matches any other controls' first letter.
<LI>Fixed bug using arrow keys to move controls when multiple controls have been selected with Shift+S and the controls had child controls. 
<LI>Col and Row in Property may use Shift+S/Shift+A now. 
<LI>Fixed bug when configurations is set to open IDE at last position and size and IDE is minimized, then when opened again and IDE is minimized could not click in taskbar's restore selection. 
<LI>Ctrl+Shift+Arrow keys now working to resize controls.  
<LI>Properties for Eugrid EditText did not have Numeric and Format entry together.
<LI>Introducing varable caption and hint text data. Preceed varable with var: and define the varable contents
in previous code. This may only be incorporated in Caption from Properties.
<LI>When adding EuGrid control, IDE will automatically add to Manage Include Statements, if not already added by user.
<LI>When using Static control in EuGrid control, the Static control may use Multiline.
<LI>Resizing Design now resizes the overlay grid.
