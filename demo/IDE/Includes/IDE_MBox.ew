--IDE_MBox.ew by Roland Stowasser
--  code generated by Win32Lib IDE v0.14.0

constant

NoIcon_xpm = xpmToPixmap({
"44 44 1 1",
"         c None",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            "}),

Stop_xpm = xpmToPixmap({
"44 44 5 1",
".        c #800000",
"@        c #808080",
"+        c #FF0000",
"         c None",
"#        c #FFFFFF",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                  ........                  ",
"               ...++++++++...               ",
"              .++++++++++++++.              ",
"            ..++++++++++++++++..            ",
"           .++++++++++++++++++++.           ",
"          .++++++++++++++++++++++.          ",
"          .++++++++++++++++++++++.@         ",
"         .++++++#++++++++++#++++++.@        ",
"        .++++++###++++++++###++++++.        ",
"        .+++++#####++++++#####+++++.@       ",
"        .++++++#####++++#####++++++.@@      ",
"       .++++++++#####++#####++++++++.@      ",
"       .+++++++++##########+++++++++.@      ",
"       .++++++++++########++++++++++.@@     ",
"       .+++++++++++######+++++++++++.@@     ",
"       .+++++++++++######+++++++++++.@@     ",
"       .++++++++++########++++++++++.@@     ",
"       .+++++++++##########+++++++++.@@     ",
"       .++++++++#####++#####++++++++.@@     ",
"        .++++++#####++++#####++++++.@@@     ",
"        .+++++#####++++++#####+++++.@@@     ",
"        .++++++###++++++++###++++++.@@      ",
"         .++++++#++++++++++#++++++.@@@      ",
"          .++++++++++++++++++++++.@@@@      ",
"          .++++++++++++++++++++++.@@@       ",
"           .++++++++++++++++++++.@@@        ",
"            ..++++++++++++++++..@@@@        ",
"             @.++++++++++++++.@@@@@         ",
"              @...++++++++...@@@@@          ",
"                @@........@@@@@@            ",
"                 @@@@@@@@@@@@@@             ",
"                    @@@@@@@@                ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            "}),

Question_xpm = xpmToPixmap({
"44 44 6 1",
"#        c #000000",
"+        c #C0C0C0",
".        c #808080",
"         c None",
"$        c #0000FF",
"@        c #FFFFFF",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                  ........                  ",
"               ...+@@@@@@+...               ",
"             ..+@@@@@@@@@@@@+..             ",
"            .+@@@@@@@@@@@@@@@@+.            ",
"           .@@@@@@@@@@@@@@@@@@@@#           ",
"          .@@@@@@@+$$$$$$+@@@@@@@#          ",
"         .@@@@@@@+$+@@$$$$+@@@@@@@#         ",
"        .+@@@@@@@$$@@@@$$$$@@@@@@@+#        ",
"        .@@@@@@@@$$$$@@$$$$@@@@@@@@#.       ",
"       .+@@@@@@@@$$$$@+$$$$@@@@@@@@+#.      ",
"       .@@@@@@@@@+$$+@$$$$@@@@@@@@@@#.      ",
"       .@@@@@@@@@@@@@+$$$@@@@@@@@@@@#..     ",
"       .@@@@@@@@@@@@@$$$@@@@@@@@@@@@#..     ",
"       .@@@@@@@@@@@@@$$+@@@@@@@@@@@@#..     ",
"       .@@@@@@@@@@@@@$$@@@@@@@@@@@@@#..     ",
"       .+@@@@@@@@@@@@@@@@@@@@@@@@@@+#..     ",
"        .@@@@@@@@@@@+$$+@@@@@@@@@@@#...     ",
"        .+@@@@@@@@@@$$$$@@@@@@@@@@+#...     ",
"         .@@@@@@@@@@$$$$@@@@@@@@@@#...      ",
"          #@@@@@@@@@+$$+@@@@@@@@@#....      ",
"           #@@@@@@@@@@@@@@@@@@@@#....       ",
"            #+@@@@@@@@@@@@@@@@+#....        ",
"             ##+@@@@@@@@@@@@+##....         ",
"              .###+@@@@@@+###.....          ",
"               ...###+@@@#.......           ",
"                 ....#@@@#.....             ",
"                    .#@@@#..                ",
"                      #@@#..                ",
"                       #@#..                ",
"                        ##..                ",
"                         ...                ",
"                          ..                ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            "}),

Warning_xpm = xpmToPixmap({
"44 44 6 1",
"#        c #000000",
".        c #808000",
"@        c #C0C0C0",
"$        c #808080",
"         c None",
"+        c #FFFF00",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                    ...                     ",
"                   .++@#                    ",
"                  .++++@#$                  ",
"                  .+++++#$$                 ",
"                 .++++++@#$$                ",
"                 .+++++++#$$                ",
"                .++++++++@#$$               ",
"                .+++++++++#$$               ",
"               .++++++++++@#$$              ",
"               .+++@###@+++#$$              ",
"              .++++#####+++@#$$             ",
"              .++++#####++++#$$             ",
"             .+++++#####++++@#$$            ",
"             .+++++#####+++++#$$            ",
"            .++++++#####+++++@#$$           ",
"            .++++++.###.++++++#$$           ",
"           .+++++++@###@++++++@#$$          ",
"           .++++++++###++++++++#$$          ",
"          .+++++++++.#.++++++++@#$$         ",
"          .+++++++++@#@+++++++++#$$         ",
"         .+++++++++++#++++++++++@#$$        ",
"         .+++++++++++++++++++++++#$$        ",
"        .+++++++++++@##@+++++++++@#$$       ",
"        .+++++++++++####++++++++++#$$       ",
"       .++++++++++++####++++++++++@#$$      ",
"       .++++++++++++@##@+++++++++++#$$      ",
"       .+++++++++++++++++++++++++++#$$$     ",
"       .++++++++++++++++++++++++++@#$$$     ",
"        .++++++++++++++++++++++++@#$$$$     ",
"         .########################$$$$$     ",
"           $$$$$$$$$$$$$$$$$$$$$$$$$$$      ",
"            $$$$$$$$$$$$$$$$$$$$$$$$$       ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            "}),

Info_xpm = xpmToPixmap({
"44 44 6 1",
"$        c #000000",
"+        c #C0C0C0",
".        c #808080",
"         c None",
"#        c #0000FF",
"@        c #FFFFFF",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                 ........                   ",
"              ...+@@@@@@+...                ",
"            ..+@@@@@@@@@@@@+..              ",
"           .+@@@@@@@@@@@@@@@@+.             ",
"          .@@@@@@@+####+@@@@@@@$            ",
"         .@@@@@@@@######@@@@@@@@$           ",
"        .@@@@@@@@@######@@@@@@@@@$          ",
"       .+@@@@@@@@@+####+@@@@@@@@@+$         ",
"       .@@@@@@@@@@@@@@@@@@@@@@@@@@$.        ",
"      .+@@@@@@@@@@@@@@@@@@@@@@@@@@+$.       ",
"      .@@@@@@@@@@#######@@@@@@@@@@@$.       ",
"      .@@@@@@@@@@@@#####@@@@@@@@@@@$..      ",
"      .@@@@@@@@@@@@#####@@@@@@@@@@@$..      ",
"      .@@@@@@@@@@@@#####@@@@@@@@@@@$..      ",
"      .@@@@@@@@@@@@#####@@@@@@@@@@@$..      ",
"      .+@@@@@@@@@@@#####@@@@@@@@@@+$..      ",
"       .@@@@@@@@@@@#####@@@@@@@@@@$...      ",
"       .+@@@@@@@@@@#####@@@@@@@@@+$...      ",
"        .@@@@@@@@#########@@@@@@@$...       ",
"         $@@@@@@@@@@@@@@@@@@@@@@$....       ",
"          $@@@@@@@@@@@@@@@@@@@@$....        ",
"           $+@@@@@@@@@@@@@@@@+$....         ",
"            $$+@@@@@@@@@@@@+$$....          ",
"             .$$$+@@@@@@+$$$.....           ",
"              ...$$$+@@@$.......            ",
"                ....$@@@$.....              ",
"                   .$@@@$..                 ",
"                     $@@$..                 ",
"                      $@$..                 ",
"                       $$..                 ",
"                        ...                 ",
"                         ..                 ",
"                                            ",
"                                            ",
"                                            ",
"                                            ",
"                                            "})

sequence PicsList
PicsList = {NoIcon_xpm,Stop_xpm,Question_xpm,Warning_xpm,Info_xpm}
sequence  IconsValues,ModValues,ButtonsValues,DefButtValues,MiscValues
IconsValues = {0,16,32,48,64}
ModValues = {0,4096,8192}
ButtonsValues = {0,1,2,3,4,5}
DefButtValues = {0,256,512,768}
MiscValues = {0,16384,65536,131072,262144,524288,1048576}
--------------------------------------------------------------------------------
--  Window MBoxWin
global integer MBoxWin MBoxWin = -1
integer MBInfo,MBHelpMenu,MBabout,MBViewButton,MBCreateButton,MBClearButton
integer MBCloseButton,TextTitle,TitleEdit,EditLines,TextLines,CheckValues,TextMod
integer TextButtons,TextIcon,TextDefButt,TextMisc,ModList,IconsList,ButtonsList
integer DefButtList,MiscList,UpDownLines,TextVar,VarNameEdit,RtnTable,TextMsgbox
integer MBMle,MBCopyButton
sequence RtnTableArray
constant ES_NUMERIC = #2000
--------------------------------------------------------------------------------
procedure clearLists()
    setIndex(ModList, 1)
    setIndex(IconsList, 1)
    setIndex(ButtonsList, 1)
    setIndex(DefButtList, 1)
    setIndex(MiscList, 1)
    setText(TitleEdit, IDEText[581][1]) --"Title"
    setText(EditLines, "1")
    setCheck(CheckValues, w32True)
    setText(VarNameEdit, "MsgBox")
    setText(MBMle,"")
end procedure
--------------------------------------------------------------------------------
procedure MBoxWin_onOpen(integer self, integer event, sequence params)
    clearLists()
end procedure
--------------------------------------------------------------------------------
procedure MBoxWin_onPaint(integer self, integer event, sequence params)
--params is ( integer x1, integer y1, integer x2, integer y2 )
integer PicNum
    PicNum = getIndex(IconsList)
    transBlt(MBoxWin, 540,110, PicsList[PicNum])
end procedure
--------------------------------------------------------------------------------
procedure MBoxWin_onActivate(integer self, integer event, sequence params)
    setFocus(MBViewButton)
end procedure
--------------------------------------------------------------------------------
procedure MBInfo_onClick(integer self, integer event, sequence params)
integer result
    result = displayErrorMessage(198,{})
end procedure
--------------------------------------------------------------------------------
procedure MBabout_onClick(integer self, integer event, sequence params)
integer result
    result =  displayErrorMessage(199,{})
end procedure
--------------------------------------------------------------------------------
procedure MBViewButton_onClick(integer self, integer event, sequence params)
integer varname, attrib
sequence message
object num
    attrib =
        ModValues[getIndex(ModList)]+
        ButtonsValues[getIndex(ButtonsList)]+
        IconsValues[getIndex(IconsList)]+
        DefButtValues[getIndex(DefButtList)]+
        MiscValues[getIndex(MiscList)]
    if isChecked(CheckValues) then
        message =  IDEText[595][1] & sprintf("%x",attrib) --"Value = #"
    else
        message = IDEText[596][1] & "1" --"Line 1"
    end if
    num = value(getText(EditLines))
    if num[2]>1 then
        for line=2 to num[2] do
            message &= 13 & 10 & IDEText[596][1] & sprint(line) --"Line "
        end for
    end if
    varname = message_box(message,getText(TitleEdit), attrib)
end procedure
--------------------------------------------------------------------------------
procedure MBViewButton_onKeyPress(integer self, integer event, sequence params)
--params is ( integer keyCode, integer shift )
integer ok
    if params[1]=VK_RETURN then
        ok = invokeHandler(MBViewButton, w32HClick, {})
    end if
end procedure
--------------------------------------------------------------------------------
procedure MBCreateButton_onClick(integer self, integer event, sequence params)
integer attrib
sequence message, attribs
object num
    attribs = ""

    message = "--integer " & getText(VarNameEdit) & "\r\n"
    message &= getText(VarNameEdit) & " = message_box(\" \""
    num = value(getText(EditLines))
    if num[2]>1 then
        for line=2 to num[2] do
            message &= "\r\n"
            message &= "         & 13 & 10 & \" \""
        end for
        message &= "\r\n         "
    end if

    if isChecked(CheckValues) then
        attrib =
                ModValues[getIndex(ModList)]+
                ButtonsValues[getIndex(ButtonsList)]+
                IconsValues[getIndex(IconsList)]+
                DefButtValues[getIndex(DefButtList)]+
                MiscValues[getIndex(MiscList)]
        message &= ", \"" & getText(TitleEdit) & "\", #" & sprintf("%x", attrib) & ") "
    else
        attribs &=
                getItem(ModList,getIndex(ModList)) & "+" &
                getItem(ButtonsList,getIndex(ButtonsList))
        if getIndex(DefButtList)>1 then
            attribs &= "+" & getItem(DefButtList,getIndex(DefButtList))
        end if
        if getIndex(IconsList)>1 then
            attribs &= "\r\n      +" & getItem(IconsList,getIndex(IconsList))
        end if
        if getIndex(MiscList)>1 then
            attribs &= "\r\n      +" & getItem(MiscList,getIndex(MiscList))
        end if
        message &= ", \"" & getText(TitleEdit) & "\", \r\n       "
                   & sprintf("%s", {attribs}) & ") "
    end if
    setText(MBMle, message)
end procedure
--------------------------------------------------------------------------------
procedure MBCreateButton_onKeyPress(integer self, integer event, sequence params)
--params is ( integer keyCode, integer shift )
integer ok
    if params[1]=VK_RETURN then
        ok = invokeHandler(MBCreateButton, w32HClick, {})
    end if
end procedure
--------------------------------------------------------------------------------
procedure MBClearButton_onClick(integer self, integer event, sequence params)
    clearLists()
    repaintRect(MBoxWin,540,110,584,154)
end procedure
--------------------------------------------------------------------------------
procedure MBClearButton_onKeyPress(integer self, integer event, sequence params)
--params is ( integer keyCode, integer shift )
integer ok
    if params[1]=VK_RETURN then
        ok = invokeHandler(MBClearButton, w32HClick, {})
    end if
end procedure
--------------------------------------------------------------------------------
procedure MBCloseButton_onClick(integer self, integer event, sequence params)
--params is ()
    if validId(MBoxWin) then
        destroy(MBoxWin)
    end if
    MBoxWin = -1
end procedure
--------------------------------------------------------------------------------
procedure MBCloseButton_onKeyPress(integer self, integer event, sequence params)
--params is ( integer keyCode, integer shift )
integer ok
    if params[1]=VK_RETURN then
        ok = invokeHandler(MBCloseButton, w32HClick, {})
    end if
end procedure
--------------------------------------------------------------------------------
procedure IconsList_onChange(integer self, integer event, sequence params)
    repaintRect(MBoxWin,540,110,584,154)
end procedure
--------------------------------------------------------------------------------
procedure MBCopyButton_onClick(integer self, integer event, sequence params)
integer ok
    if length(getText(MBMle)) then
        setIndex(MBMle,{1,length(getText(MBMle))})
        copy(MBMle)
        ok = displayErrorMessage(200,{})
    end if
end procedure
--------------------------------------------------------------------------------
procedure MBCopyButton_onKeyPress(integer self, integer event, sequence params)
--params is ( integer keyCode, integer shift )
integer ok
    if params[1]=VK_RETURN then
        ok = invokeHandler(MBCopyButton, w32HClick, {})
    end if
end procedure
---------------------------------------------------------------------------------
global procedure createMBoxWin()
    if MBoxWin= -1 then
                              --"Message Box Helper"
        MBoxWin = createEx(Window, IDEText[573][1], Form, Default, Default, 600, 442, {WS_THICKFRAME}, {WS_EX_DLGMODALFRAME})
                              --"&Help"
        MBHelpMenu = createEx(Menu, IDEText[574][1], MBoxWin, 0, 1, 0, 0, 0, 0)
                                --"&Info"
        MBInfo = createEx(MenuItem, IDEText[575][1], MBHelpMenu, 0, 2, 0, 0, 0, 0)
                                --"&About"
        MBabout = createEx(MenuItem, IDEText[576][1], MBHelpMenu, 0, 3, 0, 0, 0, 0)
                                        --"View Sample"
        MBViewButton = createEx(PushButton, IDEText[577][1], MBoxWin, 380, 20, 88, 28, 0, 0)
                                         --"Create"
        MBCreateButton = createEx(PushButton, IDEText[578][1], MBoxWin, 476, 20, 88, 28, 0, 0)
                                         --"Clear"
        MBClearButton = createEx(PushButton, IDEText[579][1], MBoxWin, 380, 52, 88, 28, 0, 0)
                                         --"Close"
        MBCloseButton = createEx(PushButton, IDEText[580][1], MBoxWin, 476, 52, 88, 28, 0, 0)
                                --"Title"
        TextTitle = createEx(LText, IDEText[581][1], MBoxWin, 24, 24, 44, 20, 0, 0)
                                  --"Title"
        TitleEdit = createEx(EditText, IDEText[581][1], MBoxWin, 68, 20, 300, 24, 0, 0)
        EditLines = createEx(EditText, "1", MBoxWin, 68, 48, 48, 24, w32or_all({ES_NUMERIC}), 0)
        limitText(EditLines,2)
                               --"Line(s) of text in Message Box"
        TextLines = createEx(LText, IDEText[582][1], MBoxWin, 128, 48, 250, 32, 0, 0)
                                    --"  Use values for statement"
        CheckValues = createEx(CheckBox, IDEText[583][1], MBoxWin, 68, 84, 240, 20, 0, 0)
                              --"Modality"
        TextMod = createEx(LText, IDEText[584][1], MBoxWin, 24, 124, 64, 20, 0, 0)
                                  --"Buttons"
        TextButtons = createEx(LText, IDEText[585][1], MBoxWin, 24, 164, 64, 20, 0, 0)
                               --"Icons"
        TextIcon = createEx(LText, IDEText[586][1], MBoxWin, 316, 124, 48, 20, 0, 0)
                                 --"Default Button"
        TextDefButt = createEx(LText, IDEText[587][1], MBoxWin, 316, 164, 112, 20, 0, 0)
                              --"Misc"
        TextMisc = createEx(LText, IDEText[588][1], MBoxWin, 24, 204, 64, 20, 0, 0)
        ModList = createEx(DropDownList, "", MBoxWin, 88, 120, 156, 120, 0, 0)
        addItem(ModList, "MB_APPLMODAL")
        addItem(ModList, "MB_SYSTEMMODAL")
        addItem(ModList, "MB_TASKMODAL")
        IconsList = createEx(DropDownList, "", MBoxWin, 364, 120, 176, 120, 0, 0)
                      --"No Icon"
        addItem(IconsList, IDEText[589][1])
        addItem(IconsList, "MB_ICONSTOP")
        addItem(IconsList, "MB_ICONQUESTION")
        addItem(IconsList, "MB_ICONWARNING")
        addItem(IconsList, "MB_ICONINFORMATION")
        ButtonsList = createEx(DropDownList, "", MBoxWin, 88, 160, 196, 144, 0, 0)
        addItem(ButtonsList, "MB_OK")
        addItem(ButtonsList, "MB_OKCANCEL")
        addItem(ButtonsList, "MB_ABORTRETRYIGNORE")
        addItem(ButtonsList, "MB_YESNOCANCEL")
        addItem(ButtonsList, "MB_YESNO")
        addItem(ButtonsList, "MB_RETRYCANCEL")
        DefButtList = createEx(DropDownList, "", MBoxWin, 428, 160, 148, 120, 0, 0)
        addItem(DefButtList, "MB_DEFBUTTON1")
        addItem(DefButtList, "MB_DEFBUTTON2")
        addItem(DefButtList, "MB_DEFBUTTON3")
        addItem(DefButtList, "MB_DEFBUTTON4")
        MiscList = createEx(DropDownList, "", MBoxWin, 88, 200, 228, 144, 0, 0)
                    --"None"
        addItem(MiscList, IDEText[590][1])
        addItem(MiscList, "MB_HELP")
        addItem(MiscList, "MB_SETFOREGROUND")
        addItem(MiscList, "MB_DEFAULT_DESKTOP_ONLY")
        addItem(MiscList, "MB_SERVICE_NOTIFICATION")
        addItem(MiscList, "MB_RIGHT")
        addItem(MiscList, "MB_RTLREADING")
        UpDownLines = createEx(UpDown, "", MBoxWin, 112, 48, 0, 0, w32or_all({UDS_ALIGNRIGHT,UDS_SETBUDDYINT,UDS_ARROWKEYS}), 0)
        setScrollRange(UpDownLines, 1, 15)
                              --"Name of Variable"
        TextVar = createEx(LText, IDEText[591][1], MBoxWin, 24, 244, 132, 20, 0, 0)
        VarNameEdit = createEx(EditText, "MsgBox", MBoxWin, 156, 240, 168, 24, 0, 0)
        RtnTable = createEx(LText, "", MBoxWin, 420, 192, 164, 140, 0, 0)
                                --"  ( Value 0 is error)"
        TextMsgbox = createEx(LText, IDEText[592][1], MBoxWin, 420, 332, 148, 20, 0, 0)
        MBMle = createEx(MleText, "", MBoxWin, 8, 276, 320, 88, w32or_all({WS_HSCROLL}), 0)
                                       --"Copy"
        MBCopyButton = createEx(PushButton, IDEText[593][1], MBoxWin, 336, 296, 60, 28, 0, 0)
        RtnTableArray = {
                        --"Possible return values"
                         createEx(LText, IDEText[594][1], RtnTable, 8, 4, 148, 20, 0, 0)
        ,
                         createEx(LText, "IDOK = 1", RtnTable, 8, 24, 148, 20, 0, 0)
        ,
                         createEx(LText, "IDCANCEL = 2", RtnTable, 8, 40, 148, 20, 0, 0)
        ,
                         createEx(LText, "IDABORT = 3", RtnTable, 8, 56, 148, 20, 0, 0)
        ,
                         createEx(LText, "IDRETRY = 4", RtnTable, 8, 72, 148, 20, 0, 0)
        ,
                         createEx(LText, "IDIGNORE = 5", RtnTable, 8, 88, 148, 20, 0, 0)
        ,
                         createEx(LText, "IDYES = 6", RtnTable, 8, 104, 148, 20, 0, 0)
        ,
                         createEx(LText, "IDNO = 7", RtnTable, 8, 120, 148, 20, 0, 0)}

        setHandler(MBoxWin, w32HOpen, routine_id("MBoxWin_onOpen"))
        setHandler(MBoxWin, w32HPaint, routine_id("MBoxWin_onPaint"))
        setHandler(MBoxWin, w32HActivate, routine_id("MBoxWin_onActivate"))
        setHandler(MBInfo, w32HClick, routine_id("MBInfo_onClick"))
        setHandler(MBabout, w32HClick, routine_id("MBabout_onClick"))
        setHandler(MBViewButton, w32HClick, routine_id("MBViewButton_onClick"))
        setHandler(MBViewButton, w32HKeyPress, routine_id("MBViewButton_onKeyPress"))
        setHandler(MBCreateButton, w32HClick, routine_id("MBCreateButton_onClick"))
        setHandler(MBCreateButton, w32HKeyPress, routine_id("MBCreateButton_onKeyPress"))
        setHandler(MBClearButton, w32HClick, routine_id("MBClearButton_onClick"))
        setHandler(MBClearButton, w32HKeyPress, routine_id("MBClearButton_onKeyPress"))
        setHandler(MBCloseButton, w32HClick, routine_id("MBCloseButton_onClick"))
        setHandler(MBCloseButton, w32HKeyPress, routine_id("MBCloseButton_onKeyPress"))
        setHandler(IconsList, w32HChange, routine_id("IconsList_onChange"))
        setHandler(MBCopyButton, w32HClick, routine_id("MBCopyButton_onClick"))
        setHandler(MBCopyButton, w32HKeyPress, routine_id("MBCopyButton_onKeyPress"))

        setBuddy(UpDownLines, EditLines)
    end if
end procedure

