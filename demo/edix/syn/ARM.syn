ARM syntax file
BlockComment /* */
LineComment ; @ //
; ARM Assembly syntax file.
; See Euphoria.syn for more details about .syn files.

TokenStart abcedfghijklmnopqrstuvwxyz_.
TokenStart ABCDEFGHIJKLMNOPQRSTUVWXYZ
TokenChar 0123456789#

;  String and Character parsing is currently hard-coded (to ' and ").
;  You should not specify ' or " as delimiters or operators.
; 
;Escapes \\"'ntre
Escapes \n30tr

Delimiters $:?^%\!
Operators , ~ = < > + - * / & |

Braces 5 ()[]{}

; 
;  FileExtensions should be specified next. This is not optional.
; 
;FileExtensions s inc arm asm 
FileExtensions s inc arm

; The optional Indents section. If present, this section lists words and
;       characters which affect autoindentation. The first word must be "+" or "-",
;       any following words or characters increase or decrease the indent level,
;       until the next "+" or "-". Please fit everything on one line.
;
;Indents + { - }

; The optional AutoComplete section. If present, this section must
; end with a "##end AutoComplete" line. For more details, please
; see eauto.e
;
;AutoComplete
;##end AutoComplete

; 
;  The remaining sections are listed in the Options/Colours window. 
;  The names used should not contain spaces; these are automatically 
;  inserted after any lower-case character which is followed by an 
;  upper-case one. Otherwise these names are entirely descriptive and 
;  are not defined or used anywhere else (except in the Scheme section
;  and .clr file). Remember that all words
;  beginning in column 1 are interpreted as section names.
;  Note that edita/edix assumes the language is case-sensitive, so for
;  example, eax is /not/ the same as EAX.

ReservedWords
        .align
        .ascii
        .asciz
        .bss
        .byte
        .data
        .double
        .equ
        .fill
        .float
        .global
        .include
        .int
        .skip
        .space
        .struct
        .text
        .word
        FPSCR

Opcodes
        adc[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        add[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        and[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        b[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        clz[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        cmn[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        cmp[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        fabsd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        faddd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fcmpd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fcmpzd
        fcpyd
        fdivd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fldd
        fmdrr[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fmrrd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fmrs
        fmrx[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fmsr
        fmstat
        fmuld[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fnegd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fmxr[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fpop
        fpush
        fsitod
        fsqrtd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fstd
        fsubd[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        ftosid
        ftosizd
        [j][a|ae|b|be|c|e|g|ge|l|le|nae|na|nb|nbe|nc|ne|ng|nge|nl|nle|no|np|ns|nz|o|p|pe|po|z]
        lsr[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        mov[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        neg[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
        pop
        push
        rsb[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al][s]
;x86 (some of these are aliased for ARM)
        ah
        al
        byte
        call
        cl
        dword
        eax
        ebp
        ebx
        ecx
        edi
        edx
        esi
        esp
        fcomp
        fcompp
        fild
        fist
        fistp
        fld
        fldz
        fnstsw
        fxch
        h4
        idiv
        imul
        int3
        jmp
        lea
        qword
        ret
        sahf
        [set][a|ae|b|be|c|e|g|ge|l|le|nae|na|nb|nbe|nc|ne|ng|nge|nl|nle|no|np|ns|nz|o|p|pe|po|z]
        shl
        shr
        st0
        st1
        st2
        st3
        st4
        st5
        st6
        st7
        test
        word
        xor
; <index/Eu/Phix.txt done to here>
        asr
        bic
        bl
        bx
        eor
        ldr
        ldrb
        ldreq
        ldreqb
        lsl
        lsls
        mul
        muleq
        mvn
        mvnlt
        nop
        orr
        orrcs
        ror
        rrx
        rsc
        sbc
        sbcs
        smlal
        smull
        str
        strb
        streq
        sub
        subcs
        subgt
        subhs
        suble
        sublt
        subne
        subs
        svc
        swi
        teq
        tst
        umlal
        umull

Registers
        fp
        ip
        lr
        pc
        r0
        r1
        r2
        r3
        r4
        r5
        r6
        r7
        r8
        r9
        r10
        r11
        sp

        d0
        d1
        d2
        d3
        d4
        d5
        d6
        d7
        d8
        d9
        d10
        d11
        d12
        d13
        d14
        d15

        s0
        s1
        s2
        s3
        s4
        s5
        s6
        s7
        s8
        s9
        s10
        s11
        s12
        s13
        s14
        s15
        s16
        s17
        s18
        s19
        s20
        s21
        s22
        s23
        s24
        s25
        s26
        s27
        s28
        s29
        s30
        s31

Constants
;       CREATE_ALWAYS
;       CREATE_NEW
;       FALSE
;       FILE_ACCESS_EXECUTE
;       FILE_ACCESS_READ
;       FILE_ACCESS_WRITE
;       FILE_ATTRIBUTE_NORMAL
;       FILE_BEGIN
;       FILE_CREATE_ALWAYS
;       FILE_END
;       FILE_FLAG_RANDOM_ACCESS
;       FILE_OPEN_ALWAYS
;       FILE_OPEN_EXISTING
;       FILE_SHARE_READ
;       FILE_SHARE_WRITE
;       GENERIC_EXECUTE GENERIC_READ GENERIC_WRITE
;       GMEM_MOVEABLE GMEM_ZEROINIT
;       HEAP_GENERATE_EXCEPTIONS
;       HEAP_REALLOC_IN_PLACE_ONLY
;       HEAP_ZERO_MEMORY
;       INVALID_HANDLE_VALUE
;       Linux
;       Menuet
;       NULL
;       OPEN_ALWAYS
;       OPEN_EXISTING
;       STD_INPUT_HANDLE
;       STD_OUTPUT_HANDLE
;       STD_ERROR_HANDLE
;       TRUE
;       TRUNCATE_EXISTING
;       Windows

;
; Phix routines/constants.
; In truth, these should never be released with Edita since no-one else
; will ever have any use for them. However, it does no harm and besides
; is too fiddly to automatically remove for each release.
; UPDATE: The back-end is now fully open source so the "no-one else will"
; part no longer applies. However the backend is no longer in .asm files
; and some/many of these may now be completely outdated.
;
;Phix
;       AllocSeq
;       AllocStr
;       AllocFlt
;       bytes_count
;       CatWrk
;       character
;       dealloc
;       FltWrk
;       FltWrk64
;       freeConsole
;       HeapFail
;       hHeap
;       initConsole
;       LoadFlt
;       puthex32
;       puthex32a
;       puts1
;       putsint
;       stdin
;       stdout
;       stderr
;       StoreFlt
;       totalloc
;       totfreed
;       wait_key
;
;       clear_debug
;       clrdbg
;       crashrtn
;       ebp0
;       ebpreal
;       ebpsave
;       freeStrings
;       h4
;       HiCh
;       loadedia
;       LowCh
;       lpBuffer
;       lpEventsRead
;       makeFrame
;       MakeString
;       mslist
;       newVSB
;       profileon
;       ptab
;       realline
;       traceon
;       tracertn
;
;       b_addr
;       b_addr_STPtr
;       b_bind
;       b_file_align
;       b_image
;       b_image_size
;       b_infn
;       b_insize
;       b_nSections
;       b_optable
;       b_pad
;       b_pe_image_size
;       b_Rptr
;       b_save4
;       b_sect1
;       b_section_align
;       b_section_size
;       b_size
;       b_STptr
;       b_Tptr
;       b_virtual_size
;       c_addr
;       calcsize
;       clist
;       dend
;       dlist
;       dump
;       hwsb
;       hwsl
;       hwst
;       lenst
;       ofile
;       old_st_len
;       opskipraw
;       rlist
;       straw
;       vmap
;       vmap2

Illegal
        adr
        APSR_nzcv
        f32
        f64
        fabss[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fadds[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fcmps[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fcmpzs
        fcpys
        fdivs[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fldmfdd
        fldmiad
        flds
        fmuls[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fnegs[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fsitos
        fsqrts[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        fsts
        fstmfdd
        fstmdbd
        fsubs[cc|cs|eq|ge|gt|hi|hs|le|lo|ls|lt|mi|ne|pl|vc|vs|al]
        ftosis
        ftosizs
        ftouid
        ftouis
        ftouizs
        ftouizd
        fuitos
        fuitod
        s32
        vabs
        vabs.f64
        vadd
        vadd.f64
        vcmp
        vcmp.f64
        vcvt
        vcvt.f32.s32
        vcvt.f64.s32
        vcvt.s32.f32
        vcvt.s32.f64
        vdiv
        vdiv.f64
        vldr
        vldr.32
        vldr.64
        vldr.f32
        vldr.f64
        vmov
        vmov.f64
        vmrs
        vmul
        vmul.f64
        vneg.f64
        vpop
        vpush
        vsub
        vsub.f64

; 
;  The Scheme section defines the /default/ colours.
;  If a .clr file exists (eg Euphoria.clr) then it overrides these defaults.
;  The Options/Colours window creates/overwrites .clr files on exit.
; 
Scheme
 Background Silver
 Comments Blue Italic
 Highlight Gray
 CurrentLine #C8C8C8
 Strings Green
 Illegals Red
 Operators Blue
 URLs Fuchsia Bold
 Other Black
 Brace1 Navy
 Brace2 Green
 Brace3 Blue
 Brace4 Red
 Brace5 Lime
 ReservedWords Teal
 Opcodes Teal
 Registers Green
 Constants Purple
 Illegal Red

