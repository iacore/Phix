--
-- tabs.exw
-- ========
--
--   Creates an IupTabs control.
--

include pGUI.e

function esc_close(Ihandle /*ih*/, atom c)
-- (I like all my demos to close when escape is keyed)
    return iff(c=K_ESC?IUP_CLOSE:IUP_CONTINUE)
end function

Ihandle  dlg,  vbox1,  vbox2,  tabs1,  tabs2,  box

    IupOpen()

    vbox1 = IupVbox({IupLabel("Inside Tab A"), IupButton("Button A")})
    vbox2 = IupVbox({IupLabel("Inside Tab B"), IupButton("Button B")})

    IupSetAttribute(vbox1, "TABTITLE", "Tab A")
    IupSetAttribute(vbox2, "TABTITLE", "Tab B")

    tabs1 = IupTabs({vbox1, vbox2})
    IupSetAttribute(tabs1, "SIZE", "80x80")

    vbox1 = IupVbox({IupLabel("Inside Tab C"), IupButton("Button C")})
    vbox2 = IupVbox({IupLabel("Inside Tab D"), IupButton("Button D")})

    IupSetAttribute(vbox1, "TABTITLE", "Tab C")
    IupSetAttribute(vbox2, "TABTITLE", "Tab D")

    tabs2 = IupTabs({vbox1, vbox2})
    IupSetAttribute(tabs2, "TABTYPE", "LEFT")

    box = IupHbox({tabs1, tabs2})
    IupSetAttribute(box, "MARGIN", "10x10")
    IupSetAttribute(box, "GAP", "10")

    dlg = IupDialog(box)
    IupSetAttribute(dlg, "TITLE", "IupTabs")
    IupSetAttribute(dlg, "SIZE", "200x120")
    IupSetCallback(dlg, "K_ANY", Icallback("esc_close"));

    IupShowXY(dlg, IUP_CENTER, IUP_CENTER)
    IupMainLoop()
    IupClose()


