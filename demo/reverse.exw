--/*
include std/console.e 
include std/sequence.e 
--*/ 

integer steps = 0
sequence gboard = {1,2,3,4,5,6,7,8,9},
         board = shuffle(gboard),
         original=board

    while not equal(gboard, board) do
        print(1,board)
        board = reverse(board, 1, prompt_number(" Reverse how many? ", {1,9})) 
        steps += 1 
    end while 
 
    puts(1, sprintf("Done! That took you %d steps.\n", steps)) 

-- 1) write something to solve it:
    board = original
    steps = 0
    while not equal(gboard, board) do
        ?board
        for i=length(board) to 1 by -1 do
            if board[i]!=i then
                if board[1]=i then
                    board = reverse(board,1,i)
                    printf(1,"%d =>",i)
                else
                    for j=2 to i do
                        if board[j]=i then
                            board = reverse(board,1,j)
                            printf(1,"%d =>",j)
                            exit
                        end if
                    end for
                end if
                exit
            end if
        end for
        steps += 1
    end while
    ?board
    puts(1, sprintf("That took me %d steps.\n", steps)) 

--DEV 2) now try a brute-force search for a better solution:
sequence try = repeat(2,steps), best_try
integer step = 0
    board = original
    while 0 do
        step += 1
        if step<=steps then
            if equal(gboard,board) then
                best_try = try
                steps = step
            end if
        end if
    end while

    if steps<length(try) then
        puts(1,"found a better solution!\n")
        ?best_try
    else
        puts(1,"could not find a better solution.\n")
    end if
    if getc(0) then end if

