--
-- demo\rosetta\A363659.exw
-- ========================
--
--  https://rosettacode.org/w/index.php?title=Numbers_k_such_that_the_last_letter_of_k_is_the_same_as_the_first_letter_of_k%2B1#Phix
--
--  I suspect there is a "ludicrous" version of this struggling to get out, along the lines of Palindromic_gapful_numbers.exw
--  (This is already a bucketload faster than the Wren version, btw...)
-- Oh, of course: after 4 digits, just insert 0..10^k-1 in the middle... (oh, not quite, multiples of 3 and all that jazz, but close.
-- Ah, do the analysis not by nth by by n, see what that says...
-- I'm thinking: 1 digit: 1 entry, 2 digits: 8 entries, then
--               3 digits: 1st and last 2,
--               4 digits: 10*[3],
--               5 digits: first2 and last 2,
--               6 digits: 1e3*[3],
--               7 digits: 1e4*[3],
--               8 digits: 1e4*[5],
--               9 digits: 1e6*[3],
--              10 digits: 1e7*[3],
--              11 digits: 1e8*[5]...
-- (do[ing] the breakdown slightly differently, so that we don't actually have to count them individually)
--
with javascript_semantics
string s99 = repeat('?',100), // starting char of 0..99
       e99 = repeat('?',100)  // ending char of 0..99
for n=0 to 99 do
    string s = ordinal(n,true)
    s99[n+1] = s[1]
    e99[n+1] = s[$]
end for
--?s99
--?e99

sequence d_count = repeat(0,10) -- nb 0s in [1] .. 9s in [10]
integer this_end = 'o', // zero 
    next_to_show = 1e3,
    count = 0, n = 0;
printf(1,"The first 50 numbers:\n")
while count<1e6 do
    integer next = n+1
    while next>=1000 do next = floor(next/1000) end while
       if next>=100 then next = floor(next/100) end if
    integer next_start = s99[next+1] // (wrong for 0, but no e*illion anyway)
    if next_start=this_end then
        d_count[remainder(n,10)+1] += 1
        count += 1
        if count <= 50 then
            printf(1," %4d%n",{n,remainder(count,10)=0})
        end if
        if count = next_to_show then
            printf(1,"\nThe %,dth number is: %,d\n",{count,n})
            printf(1,"Breakdown by final digit of the numbers:\n")
            integer mv = max(d_count)
            for i,d in d_count do
                printf(1,"%2d: %s (%d)\n",{i-1,repeat('*',round(d*60/mv)),d})
            end for
            next_to_show *= 10
        end if
    end if
    n += 1
    integer n99 = remainder(n,100)
    // from table or hundred,thousand -> 'd', million (etc) -> 'n':
    this_end = iff(n99>0?e99[n99+1]:iff(remainder(n,1e6)=0?'n':'d'))
end while
?"done"
wait_key()

--/*
"zottffssentettffssenttttttttttttttttttttffffffffffffffffffffsssssssssssssssssssseeeeeeeeeennnnnnnnnn"
"oeoerexntennennnnnnnyeoerexnteyeoerexnteyeoerexnteyeoerexnteyeoerexnteyeoerexnteyeoerexnteyeoerexnte"
The first 100 numbers:
    0   18   28   38   79   81   83   85   97  102
  122  132  142  152  162  172  182  192  208  228
  238  248  258  268  278  288  298  308  328  338
  348  358  368  378  388  398  799  801  803  805
  809  812  821  823  825  829  831  833  835  839
  841  843  845  849  851  853  855  859  861  863
  865  869  871  873  875  879  881  883  885  889
  891  893  895  907  910  911  913  914  915  916
  917  918  919  927  937  947  957  967  977  987
  997 1002 1022 1032 1042 1052 1062 1072 1082 1092

The 100th number is: 1,092
Breakdown by final digit of the numbers:
 0: *****                                                        (2)
 1: ******************************                               (11)
 2: ****************************************************         (19)
 3: ******************************                               (11)
 4: ***                                                          (1)
 5: ******************************                               (11)
 6: ***                                                          (1)
 7: ******************************                               (11)
 8: ************************************************************ (22)
 9: ******************************                               (11)

The 1,000th number is: 10,988
Breakdown by final digit of the numbers:
 0: **                                                           (12)
 1: **********************                                       (111)
 2: **********************                                       (110)
 3: **********************                                       (111)
 4: **                                                           (11)
 5: **********************                                       (111)
 6: **                                                           (11)
 7: **********************                                       (111)
 8: ************************************************************ (301)
 9: **********************                                       (111)

The 10,000th number is: 106,652
Breakdown by final digit of the numbers:
 0: ***                                                          (122)
 1: *********************************                            (1301)
 2: *********************                                        (829)
 3: *********************************                            (1301)
 4: ***                                                          (121)
 5: *********************************                            (1301)
 6: ***                                                          (121)
 7: ******************************                               (1211)
 8: ************************************************************ (2392)
 9: *********************************                            (1301)

The 100,000th number is: 1,095,542
Breakdown by final digit of the numbers:
 0: ***                                                          (1122)
 1: ********************************                             (11301)
 2: *****************************************************        (18829)
 3: ********************************                             (11301)
 4: ***                                                          (1121)
 5: ********************************                             (11301)
 6: ***                                                          (1121)
 7: *******************************                              (11211)
 8: ************************************************************ (21392)
 9: ********************************                             (11301)

The 1,000,000th number is: 10,984,428
Breakdown by final digit of the numbers:
 0: **                                                           (11123)
 1: **********************                                       (111301)
 2: **********************                                       (110230)
 3: **********************                                       (111301)
 4: **                                                           (11121)
 5: **********************                                       (111301)
 6: **                                                           (11121)
 7: **********************                                       (111211)
 8: ************************************************************ (299990)
 9: **********************                                       (111301)
"done"


E:\downloads\misc\wren\wren-cli-windows-0.4.0>wren_cli.exe flk.wren
First 100 numbers:
  0   18   28   38   79   81   83   85   97  102
122  132  142  152  162  172  182  192  208  228
238  248  258  268  278  288  298  308  328  338
348  358  368  378  388  398  799  801  803  805
809  812  821  823  825  829  831  833  835  839
841  843  845  849  851  853  855  859  861  863
865  869  871  873  875  879  881  883  885  889
891  893  895  907  910  911  913  914  915  916
917  918  919  927  937  947  957  967  977  987
997  1002  1022  1032  1042  1052  1062  1072  1082  1092

The 100th number is 1,092.

Breakdown by last digit of first 100 numbers
--------------------------------------------------------------------------------
0 ****** 2
1 ************************************* 11
2 **************************************************************** 19
3 ************************************* 11
4 *** 1
5 ************************************* 11
6 *** 1
7 ************************************* 11
8 *************************************************************************** 22
9 ************************************* 11
--------------------------------------------------------------------------------

The 1,000th number is 10,988.

Breakdown by last digit of first 1,000 numbers
--------------------------------------------------------------------------------
0 ** 12
1 *************************** 111
2 *************************** 110
3 *************************** 111
4 ** 11
5 *************************** 111
6 ** 11
7 *************************** 111
8 ************************************************************************** 301
9 *************************** 111
--------------------------------------------------------------------------------

The 10,000th number is 106,652.

Breakdown by last digit of first 10,000 numbers
--------------------------------------------------------------------------------
0 *** 122
1 *************************************** 1301
2 ************************* 829
3 *************************************** 1301
4 *** 121
5 *************************************** 1301
6 *** 121
7 ************************************ 1211
8 ************************************************************************* 2392
9 *************************************** 1301
--------------------------------------------------------------------------------

The 100,000th number is 1,095,542.

Breakdown by last digit of first 100,000 numbers
--------------------------------------------------------------------------------
0 *** 1122
1 ************************************** 11301
2 *************************************************************** 18829
3 ************************************** 11301
4 *** 1121
5 ************************************** 11301
6 *** 1121
7 ************************************* 11211
8 ************************************************************************ 21392
9 ************************************** 11301
--------------------------------------------------------------------------------

The 1,000,000th number is 10,984,428.

Breakdown by last digit of first 1,000,000 numbers
--------------------------------------------------------------------------------
0 ** 11123
1 ************************** 111301
2 ************************** 110230
3 ************************** 111301
4 ** 11121
5 ************************** 111301
6 ** 11121
7 ************************** 111211
8 *********************************************************************** 299990
9 ************************** 111301
--------------------------------------------------------------------------------
E:\downloads\misc\wren\wren-cli-windows-0.4.0>


The first 50 numbers:                                           
    0   18   28   38   79   81   83   85   97  102
  122  132  142  152  162  172  182  192  208  228
  238  248  258  268  278  288  298  308  328  338
  348  358  368  378  388  398  799  801  803  805
  809  812  821  823  825  829  831  833  835  839

 First 2000(?) numbers:
0
18 28 38 79 81 83 85 97  
102 122 132 142 152 162 172 182 192     -- 1x2 (new / replaces 1x8)
208 228 238 248 258 268 278 288 298     -- 2x8
308 328 338 348 358 368 378 388 398     -- 3x8  
799                                     -- 7y9
-- 8x1, 8z2, 8x3, 8x5, 9x7:
801 803 805 809 812 -- 8TT (new)
821 823 825 829 
831 833 835 839
841 843 845 849 
851 853 855 859 
861 863 865 869 
871 873 875 879 
881 883 885 889
891 893 895 
907 910 911 913 914 915 916 917 918 919     -- 9tt (new)
927 937 947 957 967 977 987 997 
-- 1Xx2: 
1002 1022 1032 1042 1052 1062 1072 1082 1092
1102 1122 1132 1142 1152 1162 1172 1182 1192
1202 1222 1232 1242 1252 1262 1272 1282 1292
1302 1322 1332 1342 1352 1362 1372 1382 1392
1402 1422 1432 1442 1452 1462 1472 1482 1492
1502 1522 1532 1542 1552 1562 1572 1582 1592
1602 1622 1632 1642 1652 1662 1672 1682 1692
1702 1722 1732 1742 1752 1762 1772 1782 1792
1802 1822 1832 1842 1852 1862 1872 1882 1892
1902 1922 1932 1942 1952 1962 1972 1982 1992
-- 2Xx8:
2008 2028 2038 2048 2058 2068 2078 2088 2098
2108 2128 2138 2148 2158 2168 2178 2188 2198
2208 2228 2238 2248 2258 2268 2278 2288 2298
2308 2328 2338 2348 2358 2368 2378 2388 2398
2408 2428 2438 2448 2458 2468 2478 2488 2498
2508 2528 2538 2548 2558 2568 2578 2588 2598
2608 2628 2638 2648 2658 2668 2678 2688 2698
2708 2728 2738 2748 2758 2768 2778 2788 2798
2808 2828 2838 2848 2858 2868 2878 2888 2898
2908 2928 2938 2948 2958 2968 2978 2988 2998
-- 3Xx8:
3008 3028 3038 3048 3058 3068 3078 3088 3098
3108 3128 3138 3148 3158 3168 3178 3188 3198
3208 3228 3238 3248 3258 3268 3278 3288 3298
3308 3328 3338 3348 3358 3368 3378 3388 3398
3408 3428 3438 3448 3458 3468 3478 3488 3498
3508 3528 3538 3548 3558 3568 3578 3588 3598
3608 3628 3638 3648 3658 3668 3678 3688 3698
3708 3728 3738 3748 3758 3768 3778 3788 3798
3808 3828 3838 3848 3858 3868 3878 3888 3898
3908 3928 3938 3948 3958 3968 3978 3988 3998 7999  -- 7yy9
-- 8Xx1:
8001 8003 8005 8009 8012 -- 8xTT
8021 8023 8025 8029 
8031 8033 8035 8039 
8041 8043 8045 8049 
8051 8053 8055 8059 
8061 8063 8065 8069 
8071 8073 8075 8079 
8081 8083 8085 8089 
8091 8093 8095 8099 
8101 8103 8105 8109 8112 
8121 8123 8125 8129 
8131 8133 8135 8139 
8141 8143 8145 8149 
8151 8153 8155 8159
8161 8163 8165 8169 
8171 8173 8175 8179 
8181 8183 8185 8189 
8191 8193 8195 8199 
8201 8203 8205 8209 8212 
8221 8223 8225 8229 
8231 8233 8235 8239 
8241 8243 8245 8249 
8251 8253 8255 8259 
8261 8263 8265 8269 
8271 8273 8275 8279 
8281 8283 8285 8289 
8291 8293 8295 8299 
8301 8303 8305 8309 8312 
8321 8323 8325 8329 
8331 8333 8335 8339 
8341 8343 8345 8349
8351 8353 8355 8359 
8361 8363 8365 8369 
8371 8373 8375 8379 
8381 8383 8385 8389 
8391 8393 8395 8399
8401 8403 8405 8409 8412 
8421 8423 8425 8429 
8431 8433 8435 8439 
8441 8443 8445 8449 
8451 8453 8455 8459 
8461 8463 8465 8469 
8471 8473 8475 8479 
8481 8483 8485 8489 
8491 8493 8495 8499 
8501 8503 8505 8509 8512 
8521 8523 8525 8529 
8531 8533 8535 8539
8541 8543 8545 8549 
8551 8553 8555 8559 
8561 8563 8565 8569 
8571 8573 8575 8579 
8581 8583 8585 8589
8591 8593 8595 8599 
8601 8603 8605 8609 8612 
8621 8623 8625 8629 
8631 8633 8635 8639 
8641 8643 8645 8649 
8651 8653 8655 8659 
8661 8663 8665 8669 
8671 8673 8675 8679 
8681 8683 8685 8689 
8691 8693 8695 8699 
8701 8703 8705 8709 8712 
8721 8723 8725 8729
8731 8733 8735 8739 
8741 8743 8745 8749 
8751 8753 8755 8759 
8761 8763 8765 8769 
8771 8773 8775 8779
8781 8783 8785 8789 
8791 8793 8795 8799 
8801 8803 8805 8809 8812 
8821 8823 8825 8829 
8831 8833 8835 8839 
8841 8843 8845 8849 
8851 8853 8855 8859 
8861 8863 8865 8869 
8871 8873 8875 8879 
8881 8883 8885 8889 
8891 8893 8895 8899 
8901 8903 8905 8909 8912
8921 8923 8925 8929 
8931 8933 8935 8939 
8941 8943 8945 8949 
8951 8953 8955 8959 
8961 8963 8965 8969
8971 8973 8975 8979 
8981 8983 8985 8989 
8991 8993 8995      -- nb not 8999...
9007 9010 9011 9013 9014 9015 9016 9017 9018 9019 
9027 9037 9047 9057 9067 9077 9087 9097 
9107 9110 9111 9113 9114 9115 9116 9117 9118 9119 
9127 9137 9147 9157 9167 9177 9187 9197 
9207 9210 9211 9213 9214 9215 9216 9217 9218 9219 
9227 9237 9247 9257 9267 9277 9287 9297 
9307 9310 9311 9313 9314 9315 9316 9317 9318 9319 
9327 9337 9347 9357 9367 9377 9387 9397 
9407 9410 9411 9413 9414 9415 9416 9417 9418 9419 
9427 9437 9447 9457 9467 9477 9487 9497 
9507 9510 9511 9513 9514 9515 9516 9517 9518 9519 
9527 9537 9547 9557 9567 9577 9587 9597 
9607 9610 9611 9613 9614 9615 9616 9617 9618 9619 
9627 9637 9647 9657 9667 9677 9687 9697 
9707 9710 9711 9713 9714 9715 9716 9717 9718 9719 
9727 9737 9747 9757 9767 9777 9787 9797 
9807 9810 9811 9813 9814 9815 9816 9817 9818 9819 
9827 9837 9847 9857 9867 9877 9887 9897 
9907 9910 9911 9913 9914 9915 9916 9917 9918 9919 
9927 9937 9947 9957 9967 9977 9987 9997 
10008 10028 10038 10048 10058 10068 10078 10088 10098
10108 10128 10138 10148 10158 10168 10178 10188 10198 
10208 10228 10238 10248 10258 10268 10278 10288 10298 
10308 10328 10338 10348 10358 10368 10378 10388 10398 
10408 10428 10438 10448 10458 10468 10478 10488 10498 
10508 10528 10538 10548 10558 10568 10578 10588 10598 
10608 10628 10638 10648 10658 10668 10678 10688 10698 
10708 10728 10738 10748 10758 10768 10778 10788 10798 
10808 10828 10838 10848 10858 10868 10878 10888 10898 
10908 10928 10938 10948 10958 10968 10978 10988 10998 10999 
11001 11003 11005 11009 11012 
11021 11023 11025 11029 
11031 11033 11035 11039 
11041 11043 11045 11049 
11051 11053 11055 11059 
11061 11063 11065 11069 
11071 11073 11075 11079 
11081 11083 11085 11089 
11091 11093 11095 11099 
11101 11103 11105 11109 
11112 11121 11123 11125 11129 
11131 11133 11135 11139 
11141 11143 11145 11149 
11151 11153 11155 11159
11161 11163 11165 11169 
11171 11173 11175 11179 
11181 11183 11185 11189 
11191 11193 11195 11199 
11201 11203 11205 11209 11212 
11221 11223 11225 11229 
11231 11233 11235 11239 
11241 11243 11245 11249 
11251 11253 11255 11259 
11261 11263 11265 11269 
11271 11273 11275 11279 
11281 11283 11285 11289 
11291 11293 11295 11299 
11301 11303 11305 11309 11312 
11321 11323 11325 11329 
11331 11333 11335 11339 
11341 11343 11345 11349
11351 11353 11355 11359 
11361 11363 11365 11369 
11371 11373 11375 11379 
11381 11383 11385 11389 
11391 11393 11395 11399
11401 11403 11405 11409 11412 
11421 11423 11425 11429 
11431 11433 11435 11439 
11441 11443 11445 11449 
11451 11453 11455 11459 
11461 11463 11465 11469 
11471 11473 11475 11479 
11481 11483 11485 11489 
11491 11493 11495 11499 
11501 11503 11505 11509 11512 
11521 11523 11525 11529 
11531 11533 11535 11539
11541 11543 11545 11549 
11551 11553 11555 11559 
11561 11563 11565 11569 
11571 11573 11575 11579 
11581 11583 11585 11589
11591 11593 11595 11599 
11601 11603 11605 11609 11612 
11621 11623 11625 11629 
11631 11633 11635 11639 
11641 11643 11645 11649 
11651 11653 11655 11659 
11661 11663 11665 11669 
11671 11673 11675 11679 
11681 11683 11685 11689 
11691 11693 11695 11699 
11701 11703 11705 11709 11712 
11721 11723 11725 11729 
11731 11733 11735 11739 
11741 11743 11745 11749 
11751 11753 11755 11759 
11761 11763 11765 11769 
11771 11773 11775 11779
11781 11783 11785 11789 
11791 11793 11795 11799 
11801 11803 11805 11809 11812 
11821 11823 11825 11829 
11831 11833 11835 11839 
11841 11843 11845 11849 
11851 11853 11855 11859 
11861 11863 11865 11869 
11871 11873 11875 11879 
11881 11883 11885 11889 
11891 11893 11895 11899 
11901 11903 11905 11909 11912
11921 11923 11925 11929 
11931 11933 11935 11939 
11941 11943 11945 11949 
11951 11953 11955 11959 
11961 11963 11965 11969
11971 11973 11975 11979 
11981 11983 11985 11989 
11991 11993 11995 
12008 12028 12038 12048 12058 12068 12078 12088 12098   -- 12Xx8
12108 12128 12138 12148 12158 12168 12178 12188 12198 
12208 12228 12238 12248 12258 12268 12278 12288 12298 
12308 12328 12338 12348 12358 12368 12378 12388 12398 
12408 12428 12438 12448 12458 12468 12478 12488 12498 
12508 12528 12538 12548 12558 12568 12578 12588 12598 
12608 12628 12638 12648 12658 12668 12678 12688 12698 
12708 12728 12738 12748 12758 12768 12778 12788 12798 
12808 12828 12838 12848 12858 12868 12878 12888 12898 
12908 12928 12938 12948 12958 12968 12978 12988 12998 
13008 13028 13038 13048 13058 13068 13078 13088 13098
13108 13128 13138 13148 13158 13168 13178 13188 13198 
13208 13228 13238 13248 13258 13268 13278 13288 13298 
13308 13328 13338 13348 13358 13368 13378 13388 13398 
13408 13428 13438 13448 13458 13468 13478 13488 13498 
13508 13528 13538 13548 13558 13568 13578 13588 13598 
13608 13628 13638 13648 13658 13668 13678 13688 13698 
13708 13728 13738 13748 13758 13768 13778 13788 13798 
13808 13828 13838 13848 13858 13868 13878 13888 13898 
13908 13928 13938 13948 13958 13968 13978 13988 13998 17999 
18001 18003 18005 18009 18012 
18021 18023 18025 18029 
18031 18033 18035 18039 
18041 18043 18045 18049 
18051 18053 18055 18059 
18061 18063 18065 18069 
18071 18073 18075 18079 
18081 18083 18085 18089 
18091 18093 18095 18099 
18101 18103 18105 18109 18112 
18121 18123 18125 18129 
18131 18133 18135 18139 
18141 18143 18145 18149 
18151 18153 18155 18159
18161 18163 18165 18169 
18171 18173 18175 18179 
18181 18183 18185 18189 
18191 18193 18195 18199 
18201 18203 18205 18209 18212 
18221 18223 18225 18229 
18231 18233 18235 18239 
18241 18243 18245 18249 
18251 18253 18255 18259 
18261 18263 18265 18269 
18271 18273 18275 18279 
18281 18283 18285 18289 
18291 18293 18295 18299 
18301 18303 18305 18309 18312 
18321 18323 18325 18329 
18331 18333 18335 18339 
18341 18343 18345 18349
18351 18353 18355 18359 
18361 18363 18365 18369 
18371 18373 18375 18379 
18381 18383 18385 18389 
18391 18393 18395 18399
18401 18403 18405 18409 18412 
18421 18423 18425 18429 
18431 18433 18435 18439 
18441 18443 18445 18449 
18451 18453 18455 18459 
18461 18463 18465 18469 
18471 18473 18475 18479 
18481 18483 18485 18489 
18491 18493 18495 18499 
18501 18503 18505 18509 18512 
18521 18523 18525 18529 
18531 18533 18535 18539
18541 18543 18545 18549 
18551 18553 18555 18559 
18561 18563 18565 18569 
18571 18573 18575 18579 
18581 18583 18585 18589
18591 18593 18595 18599 
18601 18603 18605 18609 18612 
18621 18623 18625 18629 
18631 18633 18635 18639 
18641 18643 18645 18649 
18651 18653 18655 18659 
18661 18663 18665 18669 
18671 18673 18675 18679 
18681 18683 18685 18689 
18691 18693 18695 18699 
18701 18703 18705 18709 18712 
18721 18723 18725 18729 
18731 18733 18735 18739 
18741 18743 18745 18749 
18751 18753 18755 18759 
18761 18763 18765 18769 
18771 18773 18775 18779
18781 18783 18785 18789 
18791 18793 18795 18799 
18801 18803 18805 18809 18812 
18821 18823 18825 18829 
18831 18833 18835 18839 
18841 18843 18845 18849 
18851 18853 18855 18859 
18861 18863 18865 18869 
18871 18873 18875 18879 
18881 18883 18885 18889 
18891 18893 18895 18899 
18901 18903 18905 18909 18912
18921 18923 18925 18929 
18931 18933 18935 18939 
18941 18943 18945 18949 
18951 18953 18955 18959 
18961 18963 18965 18969
18971 18973 18975 18979 
18981 18983 18985 18989 
18991 18993 18995 
19007 19010 19011 19013 19014 19015 19016 19017 19018 19019 
19027 19037 19047 19057 19067 19077 19087 19097 
19107 19110 19111 19113 19114 19115 19116 19117 19118 19119 
19127 19137 19147 19157 19167 19177 19187 19197 
19207 19210 19211 19213 19214 19215 19216 19217 19218 19219 
19227 19237 19247 19257 19267 19277 19287 19297 
19307 19310 19311 19313 19314 19315 19316 19317 19318 19319 
19327 19337 19347 19357 19367 19377 19387 19397 
19407 19410 19411 19413 19414 19415 19416...
--*/

--Super stretch: 
--What is the centillionth number? Provide both the short scale centillionth (10<sup><small>303</small></sup>)
--and the long scale (10<sup><small>600</small></sup>), first and last two digits only.
--sequence generators = {{0,0}}
--function A363659(integer nth)
--  if nth=0 then return 0 end if
--  sequence generators = {{2,1,2},
--                         {2,1,8},
--                         {2,2,8},
--                         {2,3,8},
--                         {2,7,9},
--                         {2,8,1},
--                         {2,8,3},
--                         {2,8,5},
--                         {2,9,7}}
--  while true do
--      -- pop first generator
--      -- calculate n
----        if n<=nth return something
----        nth -= n
--      -- push derived generators
--  end while
--end function

--I suspect...
--.. there's a possible [[ludicrously fast]] version/solution to this... 
--Obviously palindromic numbers are not quite the same, but every n>0 here seems to be one of 
--[8]12 18 28 38 79 81 83 85 89 97 9[teen] with some "gap" filled with either 023456789 or 
--any of 0..10k. --Petelomax (talk) 02:42, 1 July 2023 (UTC)

--/*
with javascript_semantics
atom t0 = time()
string s99 = repeat('?',100), // starting char of 0..99
       e99 = repeat('?',100)  // ending char of 0..99
for n=0 to 99 do
    string s = ordinal(n,true)
    s99[n+1] = s[1]
    e99[n+1] = s[$]
end for

sequence d_count = repeat(0,10), -- nb 0s in [1] .. 9s in [10]
         p_count = repeat(0,10),
         h_count = repeat(0,10)
integer this_end = 'o' // zero 
atom next_to_show = 1e2,
    count = 0, pcount = 0, len = 2, n = 0;
printf(1,"The first 50 numbers:\n")
while count<1e8 do
    atom next = n+1
    while next>=1000 do next = floor(next/1000) end while
       if next>=100 then next = floor(next/100) end if
    integer next_start = s99[next+1] // (wrong for 0, but no e*illion anyway)
    if next_start=this_end then
        if n>=next_to_show then
            printf(1,"\nThere are %,d %d-digit numbers.\n",{count-pcount,len})
            printf(1,"Breakdown by final digit of the numbers:\n")
            integer mv = max(d_count)
            for i,d in d_count do
                printf(1,"%2d: %s (%d) [%d]\n",{i-1,repeat('*',round(d*60/mv)),d, d-p_count[i]})
            end for
--          p_count = sq_sub(deep_copy(d_count),h_count)
            p_count = deep_copy(d_count)
            if next_to_show=100 then
                h_count = p_count
--?h_count -- {1,1,0,1,0,1,0,1,3,1}
            end if
            next_to_show *= 10
            pcount = count
            len += 1
        end if
        d_count[remainder(n,10)+1] += 1
        count += 1
        if count <= 50 then
            printf(1," %4d%n",{n,remainder(count,10)=0})
        end if
    end if
    n += 1
    integer n99 = remainder(n,100)
    // from table or hundred,thousand -> 'd', million (etc) -> 'n':
    this_end = iff(n99>0?e99[n99+1]:iff(remainder(n,1e6)=0?'n':'d'))
end while
?elapsed(time()-t0)

The first 50 numbers:
    0   18   28   38   79   81   83   85   97
There are 9 2-digit numbers. (bit of a lie that)
Breakdown by final digit of the numbers:
 0: ******************** (1) [1]
 1: ******************** (1) [1]
 2:  (0) [0]
 3: ******************** (1) [1]
 4:  (0) [0]
 5: ******************** (1) [1]
 6:  (0) [0]
 7: ******************** (1) [1]
 8: ************************************************************ (3) [3]
 9: ******************** (1) [1]
  102
  122  132  142  152  162  172  182  192  208  228
  238  248  258  268  278  288  298  308  328  338
  348  358  368  378  388  398  799  801  803  805
  809  812  821  823  825  829  831  833  835  839

There are 82 3-digit numbers.
Breakdown by final digit of the numbers:
 0: ***** (2) [1]
 1: ****************************** (11) [10]
 2: *************************** (10) [10]
 3: ****************************** (11) [10]
 4: *** (1) [1]
 5: ****************************** (11) [10]
 6: *** (1) [1]
 7: ****************************** (11) [10]
 8: ************************************************************ (22) [19]
 9: ****************************** (11) [10]

There are 820 4-digit numbers.
Breakdown by final digit of the numbers:
 0: *** (12) [10]
 1: ******************************* (111) [100]
 2: ******************************* (110) [100]
 3: ******************************* (111) [100]
 4: *** (11) [10]
 5: ******************************* (111) [100]
 6: *** (11) [10]
 7: ******************************* (111) [100]
 8: ************************************************************ (212) [190]
 9: ******************************* (111) [100]

There are 8,490 5-digit numbers.
Breakdown by final digit of the numbers:
 0: *** (122) [110]
 1: ********************************* (1301) [1190]
 2: ****** (230) [120]
 3: ********************************* (1301) [1190]
 4: *** (121) [110]
 5: ********************************* (1301) [1190]
 6: *** (121) [110]
 7: ****************************** (1211) [1100]
 8: ************************************************************ (2392) [2180]
 9: ********************************* (1301) [1190]

There are 82,000 6-digit numbers.
Breakdown by final digit of the numbers:
 0: *** (1122) [1000]
 1: ******************************** (11301) [10000]
 2: ***************************** (10230) [10000]
 3: ******************************** (11301) [10000]
 4: *** (1121) [1000]
 5: ******************************** (11301) [10000]
 6: *** (1121) [1000]
 7: ******************************* (11211) [10000]
 8: ************************************************************ (21392) [19000]
 9: ******************************** (11301) [10000]

There are 820,001 7-digit numbers.
Breakdown by final digit of the numbers:
 0: *** (11123) [10001]
 1: ******************************** (111301) [100000]
 2: ******************************* (110230) [100000]
 3: ******************************** (111301) [100000]
 4: *** (11121) [10000]
 5: ******************************** (111301) [100000]
 6: *** (11121) [10000]
 7: ******************************** (111211) [100000]
 8: ************************************************************ (211392) [190000]
 9: ******************************** (111301) [100000]

There are 8,490,011 8-digit numbers.
Breakdown by final digit of the numbers:
 0: *** (121134) [110011]
 1: ********************************* (1301301) [1190000]
 2: ****** (230230) [120000]
 3: ********************************* (1301301) [1190000]
 4: *** (121121) [110000]
 5: ********************************* (1301301) [1190000]
 6: *** (121121) [110000]
 7: ****************************** (1211211) [1100000]
 8: ************************************************************ (2391392) [2180000]
 9: ********************************* (1301301) [1190000]

There are 82,000,100 9-digit numbers.
Breakdown by final digit of the numbers:
 0: *** (1121234) [1000100]
 1: ******************************** (11301301) [10000000]
 2: ***************************** (10230230) [10000000]
 3: ******************************** (11301301) [10000000]
 4: *** (1121121) [1000000]
 5: ******************************** (11301301) [10000000]
 6: *** (1121121) [1000000]
 7: ******************************* (11211211) [10000000]
 8: ************************************************************ (21391392) [19000000]
 9: ******************************** (11301301) [10000000]
"1 minute and 14s"
"done"

--*/
