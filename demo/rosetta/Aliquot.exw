--
-- demo\rosetta\Aliquot.exw
-- ========================
--
--  An aliquot sequence of a positive integer K is defined recursively as the first member being K 
--  and subsequent members being the sum of the Proper divisors of the previous term.
--  If the terms eventually reach 0 then the series for K is said to terminate. 
--
--  There are several classifications for non termination:
--  If the second term is K then all future terms are also K and so the sequence repeats from the first term with period 1 and K is called perfect. 
--  If the third term would be repeating K then the sequence repeats with period 2 and K is called amicable. 
--  If the N'th term would be repeating K for the first time, with N > 3 then the sequence repeats with period N - 1 and K is called sociable. 
--
--  Perfect, amicable and sociable numbers eventually repeat the original number K; there are other repetitions...
--  Some K have a sequence that eventually forms a periodic repetition of period 1 but of a number other than K, 
--  for example 95 which forms the sequence 95, 25, 6, 6, 6, ... such K are called aspiring. 
--  K that have a sequence that eventually forms a periodic repetition of period >= 2 but of a number other than K, 
--  for example 562 which forms the sequence 562, 284, 220, 284, 220, ... such K are called cyclic. 
--
--  And finally:
--  Some K form aliquot sequences that are not known to be either terminating or periodic. these K are to be called non-terminating. 
--  For the purposes of this task, K is to be classed as non-terminating if it has not been otherwise classed after generating 16 terms 
--  or if any term of the sequence is greater than 2**47 = 140737488355328. 
--
--  Task
--  Create routine(s) to generate the aliquot sequence of a positive integer enough to classify it according to the classifications given above. 
--  Use it to display the classification and sequences of the numbers one to ten inclusive. 
--  Use it to show the classification and sequences of the following integers, in order: 
--  11, 12, 28, 496, 220, 1184, 12496, 1264460, 790, 909, 562, 1064, 1488, and optionally 15355717786080.
--
--  Show all output on this page.
--

function aliquot(atom n)
sequence s = {n}
integer k
    if n=0 then                             return {"terminating",{0}} end if
    while length(s)<16 
      and n<140737488355328 do
        n = sum(factors(n,-1))
        k = find(n,s)
        if k then
            if k=1 then
                if length(s)=1 then         return {"perfect",s}
                elsif length(s)=2 then      return {"amicable",s}
                end if                      return {"sociable",s}
            elsif k=length(s) then          return {"aspiring",s}
            end if                          return {"cyclic",append(s,{n})}
        elsif n=0 then                      return {"terminating",s}
        end if
        s = append(s,n)
    end while
                                            return {"non-terminating",s}
end function

for i=1 to 10 do
    printf(1,"%14d ",i)
    ? aliquot(i)
end for

constant n = {11, 12, 28, 496, 220, 1184, 12496, 1264460, 790, 909, 562, 1064, 1488, 15355717786080}
for i=1 to length(n) do
    printf(1,"%14d ",n[i])
    ? aliquot(n[i])
end for
{} = wait_key()


