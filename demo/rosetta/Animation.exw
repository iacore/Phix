--
-- demo\rosetta\Animation.exw
-- ==========================
--
-- Author Pete Lomax, August 2015
--
--DEV no label click, colours iffy, margins on wrong thing??
--/!*
with javascript_semantics
requires("1.0.3")
--requires(64,true)
include xpGUI.e
--gUseGTK()

string hw = "Hello World!     "
bool direction = true
gdx label

--function button_cb(gdx /*ih*/, integer /*button*/, pressed, /*x*/, /*y*/, atom /*pStatus*/)
procedure label_click(gdx /*label*/, sequence status)
--DEV compiler hang:
--  bool bPressed!='R'
    bool bPressed = (status[2]!='R')
?{"label_click",status,bPressed,direction}
    if bPressed then
        direction = not direction
    end if
end procedure

procedure timer_action(gdx /*ih*/)
    hw = iff(direction ? hw[$] & hw[1..-2]
                       : hw[2..$] & hw[1])
    gSetAttribute(label,"TITLE",hw)
end procedure

procedure main()
    
    label = gLabel(hw,`FONT="Verdana, 18"`)
--  label = gLabel(hw,`FONT="Verdana, 18",MARGIN=70x40`)
--DEV (I actually prefer the one below, but this should work too, as should the gHbox)
--  gSetHandler(label, `CLICK`, label_click)
--  gdx dlg = gDialog(label,"TITLE=Animation, DIALOGFRAME=YES, CHILDOFFSET=70x40, SIZE[*charsize]=200x80")
--  gdx dlg = gDialog(label,"TITLE=Animation,SIZE=200x80")
--  gdx dlg = gDialog(label,"TITLE=Animation,SIZE=300x150")
--  gdx dlg = gDialog(gHbox({label}),"TITLE=Animation,SIZE=300x150")
    gdx dlg = gDialog(gHbox({label},"MARGIN=70x40"),"TITLE=Animation,SIZE=300x150")
gSetHandler(dlg, `CLICK`, label_click)

--gHbox({gLabel("This is a label")},"MARGIN=14x14"),
    gShow(dlg)
    gdx hTimer = gTimer(timer_action, 160)
    gMainLoop()
end procedure

main()
--*!/

--/*
with javascript_semantics
include pGUI.e

string hw = "Hello World!     "
bool direction = true
Ihandle label

function button_cb(Ihandle /*ih*/, integer /*button*/, pressed, /*x*/, /*y*/, atom /*pStatus*/)
    if pressed then
        direction = not direction
    end if
    return IUP_CONTINUE
end function

function timer_cb(Ihandle /*ih*/)
    hw = iff(direction ? hw[$] & hw[1..-2]
                       : hw[2..$] & hw[1])
    IupSetAttribute(label,"TITLE",hw)
    return IUP_IGNORE
end function

procedure main()
    IupOpen()
    label = IupLabel(hw,`FONT="Verdana, 18"`)
    IupSetCallback(label, "BUTTON_CB", Icallback("button_cb"))
    Ihandle dlg = IupDialog(label,"TITLE=Animation, DIALOGFRAME=YES, CHILDOFFSET=70x40, SIZE=200x80")
    IupShow(dlg)
--?IupGetAttribute(dlg,"RASTERSIZE")
    Ihandle hTimer = IupTimer(Icallback("timer_cb"), 160)
    if platform()!=JS then
        IupMainLoop()
        IupClose()
    end if
end procedure

main()
--*/
--arwen version (windows 32-bit-only )
--/*
include ..\arwen\arwen.ew

string hw = "Hello World! "
integer direction = 1

constant main = create(Window, "Animation", 0, 0, 20, 20, 300, 150, 0),
         label = create(Label,hw,0,main,65,40,200,40,0),
         MainTimer = createTimer()
    setFont(label, "Verdana", 18, Normal)
    removeStyle(main,WS_THICKFRAME+WS_MINIMIZEBOX+WS_MAXIMIZEBOX)

function mainHandler(integer id, integer msg, atom wParam, object lParam)
    if msg=WM_SHOWWINDOW then
        startTimer(MainTimer,main,160)
    elsif msg=WM_TIMER then
        if direction then
            hw = hw[$]&hw[1..-2]
        else
            hw = hw[2..$]&hw[1]
        end if
        setText(label,hw)
    elsif msg=WM_LBUTTONUP then
        direction = 1-direction
    elsif msg=WM_CHAR
      and wParam=VK_ESCAPE then
        closeWindow(main)
        if id or object(lParam) then end if -- suppress warnings
    end if
    return 0
end function
setHandler({main},routine_id("mainHandler"))

WinMain(main, SW_NORMAL)
--*/
