--
-- demo\rosetta\Bitmap_FloodFill.exw
-- =================================
--
-- Author Pete Lomax, October 2015
--
--  {{Trans|Go}}, requires read_ppm() from [[Bitmap/Read_a_PPM_file#Phix|Read_a_PPM_file]], write_ppm() from [[Bitmap/Write_a_PPM_file#Phix|Write_a_PPM_file]]. 
--  Uses the output of Bitmap_Circle.exw (Circle.ppm)
--  Working program is demo\rosetta\Bitmap_FloodFill.exw, results may be verified with demo\rosetta\viewppm.exw

-- Some colour constants:
constant --black = #000000,
         blue  = #0000FF,
         green = #00FF00
--       red   = #FF0000,
--       red = 0xff2020,
--       yellow = 0xffdf20 --,
--       white = #FFFFFF

include ppm.e

function ff(sequence img, integer x, integer y, integer colour, integer target)
    if x>=1 and x<=length(img)
    and y>=1 and y<=length(img[x])
    and img[x][y]=target then
        img[x][y] = colour
        img = ff(img,x-1,y,colour,target)
        img = ff(img,x+1,y,colour,target)
        img = ff(img,x,y-1,colour,target)
        img = ff(img,x,y+1,colour,target)
    end if
    return img
end function

function FloodFill(sequence img, integer x, integer y, integer colour)
integer target = img[x][y]
    return ff(img,x,y,colour,target)
end function

sequence img = read_ppm("Circle.ppm")
    img = FloodFill(img, 200, 100, blue)
    write_ppm("FloodIn.ppm",img)
    img = FloodFill(img, 10, 10, green)
    write_ppm("FloodOut.ppm",img)

--{} = wait_key()



