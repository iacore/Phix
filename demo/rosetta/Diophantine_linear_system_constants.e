--
-- demo\rosetta\Diophantine_linear_system_constants.e
-- ==================================================
--
-- Initially this lot was all being loaded with the following:
--intext = get_text("Diophantine_linear_system_problems.txt",GT_LF_STRIPPED),
--outtxt = get_text("Diophantine_linear_system_solution.txt",GT_LF_STRIPPED)
-- however o/c that is not p2js compatible, hence this.
--
global constant DLS_PROBS = """
'five base cases
'1/5: solve 2a=1, 2a+b=2 (obviously a=0.5)
'no integral solution
2
2
 2 0| 1
 2 1| 2
'indeterminate
'2/5: solve a+3b+5c=0, 4a+6b+8c=0
2
3
 1  3  5
 4  6  8
'singular square
'3/5: solve a+7b+4c=0, 2a+8b+5c=0, 3a+9b+6c=0 ==> a=-1, b=-1, c=-2
3
3
 1  7  4
 2  8  5
 3  9  6
'overdetermined
'4/5: solve 2a+b=2, 6a+5b=2, 7a+6b=2 ==> a=2, b=-2 from any two
3
2
 2  1| 2
 6  5| 2
 7  6| 2
'square
'5/5: solve 2a-3b+4c=9, 5a+6b+7c=3, 8a+9b+10c=3 ==> a=-1, b=-1, c=2
3
3
 2 -3  4| 9
 5  6  7| 3
 8  9 10| 3
'modular inverse
'solve 42a-2017b=1 ==> a=-48, b=-1
'(the smallest solution is negative
' add the modulus to make positive)
1
2
 42 -2017| 1
'a classic Indian kuttaka problem
'solve 195a-221b=65 ==> a=6, b=5
1
2
 195 -221| 65
'Bachet de Méziriac "personnes en un banquet"
'solve a+b+c=41, 12a+9b+c=120 ==> a=-3, b=14, c=30
'(add null space vector to make positive men)
2
3
  1 1 1| 41
 12 9 1|120
'Malm
'solve a+b+c+d=80, 165a+235b+85c+389d=16324 ==> a=17, b=22, c=25, d=16
2
4
   1   1   1   1|    80
 165 235  85 389| 16324
'from the Sunzi Suanjing
'solve a+3b=2, a+5c=3, a+7d=2 ==> a=23, b=-7, c=-4, d=-3
3
4
 1 3 0 0| 2
 1 0 5 0| 3
 1 0 0 7| 2
'solve 17a+7b=-1, 11a+15c=-2 ==> a=23, b=-56, c=-17
2
3
 17 7  0|-1
 11 0 15|-2
'from the Shushu jiuzhang
'solve a+130b=-60, a+110c=-30, a+120d=-10, a+50e=-10, a+25f=10, a+100g=10, a+50h=10, a+20i=10
'  ==> a=3710, b=-29, c=-34,     d=-31,      e=-62,     f=-148,   g=-37,     h=-74     i=-185
8
9
 1 130   0   0   0   0   0   0   0|-60
 1   0 110   0   0   0   0   0   0|-30
 1   0   0 120   0   0   0   0   0|-10
 1   0   0   0  60   0   0   0   0|-10
 1   0   0   0   0  25   0   0   0| 10
 1   0   0   0   0   0 100   0   0| 10
 1   0   0   0   0   0   0  50   0| 10
 1   0   0   0   0   0   0   0  20| 10
'5 sailor coconut puzzle
'solve a-5b=1, 4b-5c=1, 4c-5d=1, 4d-5e=1, 4e-5f=1, 4f-5g=0
'  ==> a=3121, b=624, c=499, d=399, e=319, f=255, g=204
6
7
 1 -5  0  0  0  0  0| 1
 0  4 -5  0  0  0  0| 1
 0  0  4 -5  0  0  0| 1
 0  0  0  4 -5  0  0| 1
 0  0  0  0  4 -5  0| 1
 0  0  0  0  0  4 -5| 0
'unbounded knapsack with slack
'solve 3000a+1800b+2500c+d=54500, 3a+2b+20c+e=250, 25a+15b+2c+f=250
'  ==> a=6, b=5, c=11, d=0, e=2, f=3
3
6
 3000 1800 2500 1 0 0|54500
    3    2   20 0 1 0|  250
   25   15    2 0 0 1|  250
'subset sum problem
'solve 575a+436b+1586c+1030d+1921e+569f+721g+1183h+1570i=6665
'  ==> a=1, b=0, c=1, d=1, e=0, f=0, g=1, h=1, i=1
1
9
 575 436 1586 1030 1921 569 721 1183 1570| 6665
'HMM extended gcd (example 7.2)
'solve 763836a+1066557b+113192c+1785102d+1470060e+3077752f+114793g+3126753h+1997137i+2603018j=1
'  ==> a=-1, b=0, c=1, d=-3, f=1, g=3, h=3, i=-2, j=-2, k=2
 1
10
 763836 1066557 113192 1785102 1470060 3077752 114793 3126753 1997137 2603018| 1
'Fibonacci segment F7...F14 (example 7.3)
'solve 13a+21b+34c+55d+89e+144f+233g+377h=1
'  ==> a=-7, b=4, c=-3, d=1, e=-1, f=1, g=0, h=0
1
8
 13 21 34 55 89 144 233 377| 1
'compute the inverse of transpose(P)
'(Fibonacci morphs into Lucas)
8
8
 1  0  0  0  0  0  18 -7
 1  1  0  0  0  0 -11  4
-1  1  1  0  0  0   7 -3
 0 -1  1  1  0  0  -4  1
 0  0 -1  1  1  0   3 -1
 0  0  0 -1  1  1  -1  1
 0  0  0  0 -1  1   1  0
 0  0  0  0  0 -1  -1  0
'Hnf(A) with Aij = i^3 * j^2 + i + j (example 7.4)
10
10
  3  11   31   69   131   223   351   521   739   1011
  7  36  113  262   507   872  1381  2058  2927   4012
 13  77  249  583  1133  1953  3097  4619  6573   9013
 21 134  439 1032  2009  3466  5499  8204 11677  16014
 31 207  683 1609  3135  5411  8587 12813 18239  25015
 43 296  981 2314  4511  7788 12361 18446 26259  36016
 57 401 1333 3147  6137 10597 16821 25103 35737  49017
 73 522 1739 4108  8013 13838 21967 32784 46673  64018
 91 659 2199 5197 10139 17511 27799 41489 59067  81019
111 812 2713 6414 12515 21616 34317 51218 72919 100020
'Gauss x*atan(1/239) + y*atan(1/57) + z*atan(1/18) = pi/4
'(fudge factor -1 to absorb round-off error
' ignore the corresponding vector entry x1)
1
4
 -1 0041841 0175421 0554985| 7853982
'search for polynomial coefficients
'const sqrt(2) + i
'set precision and max. degree
4
4
 1.41421356 + 1
'const 3^(1/3) + sqrt(2)
11
 6
 2.8564631326805
'some constant
12
 9
-1.4172098692728
0
0
""",
                DLS_SOLNS = """
'five base cases
'1/5: solve 2a=1, 2a+b=2 (obviously a=0.5)
'no integral solution
P | Hnf
  0 -2 1 | 1 0 1
  0  1 0 | 0 1 0
 -1 -2 2 | 0 0 2   inconsistent
loop 8


'indeterminate
'2/5: solve a+3b+5c=0, 4a+6b+8c=0
P | Hnf
 1  0  0 0 | 1 4 0
 2  1 -1 0 | 0 6 0
 0  0  0 1 | 0 0 1
 1 -2  1 0 | 0 0 0   (6)
loop 11


'singular square
'3/5: solve a+7b+4c=0, 2a+8b+5c=0, 3a+9b+6c=0 ==> a=-1, b=-1, c=-2
P | Hnf
 1  0  0 0 | 1 2 3 0
 3 -1  1 0 | 0 3 6 0
 0  0  0 1 | 0 0 0 1
 1  1 -2 0 | 0 0 0 0   (6)
loop 12


'overdetermined
'4/5: solve 2a+b=2, 6a+5b=2, 7a+6b=2 ==> a=2, b=-2 from any two
P | Hnf
  1 -1 0 | 1 1 1 0
 -1  2 0 | 0 4 5 0
 -2  2 1 | 0 0 0 1  -solution
loop 7


'square
'5/5: solve 2a-3b+4c=9, 5a+6b+7c=3, 8a+9b+10c=3 ==> a=-1, b=-1, c=2
P | Hnf
  7 -1 -4 0 | 1 1  7 0
  2  0 -1 0 | 0 3  6 0
 15 -2 -9 0 | 0 0 12 0
  1  1 -2 1 | 0 0  0 1  -solution
loop 15


'modular inverse
'solve 42a-2017b=1 ==> a=-48, b=-1
'(the smallest solution is negative
' add the modulus to make positive)
P | Hnf
  -48 -1 0 | 1 0
   48  1 1 | 0 1  -solution
 2017 42 0 | 0 0   (4070053)
loop 7


'a classic Indian kuttaka problem
'solve 195a-221b=65 ==> a=6, b=5
P | Hnf
   8   7 0 | 13 0
  -6  -5 1 |  0 1  -solution
 -17 -15 0 |  0 0   (514)
loop 8


'Bachet de Méziriac "personnes en un banquet"
'solve a+b+c=41, 12a+9b+c=120 ==> a=-3, b=14, c=30
'(add null space vector to make positive men)
P | Hnf
 -3   4   0 0 | 1 0 0
  3  -4   1 0 | 0 1 0
  3 -14 -30 1 | 0 0 1  -solution
 -8  11  -3 0 | 0 0 0   (194)
loop 12


'Malm
'solve a+b+c+d=80, 165a+235b+85c+389d=16324 ==> a=17, b=22, c=25, d=16
P | Hnf
  -1   2   1  -1 0 | 1 1 0
   2   3  -3  -2 0 | 0 2 0
 -17 -22 -25 -16 1 | 0 0 1  -solution
  -4  -8   7   5 0 | 0 0 0   (154)
 -15   8   7   0 0 | 0 0 0   (338)
loop 23


'from the Sunzi Suanjing
'solve a+3b=2, a+5c=3, a+7d=2 ==> a=23, b=-7, c=-4, d=-3
P | Hnf
  -35 12  7  5 0 | 1 0 0 0
   21 -7 -4 -3 0 | 0 1 0 0
   15 -5 -3 -2 0 | 0 0 1 0
  -23  7  4  3 1 | 0 0 0 1  -solution
 -105 35 21 15 0 | 0 0 0 0   (12916)
loop 23


'solve 17a+7b=-1, 11a+15c=-2 ==> a=23, b=-56, c=-17
P | Hnf
 -30   73  22 0 | 1 0 0
 -49  119  36 0 | 0 1 0
 -23   56  17 1 | 0 0 1  -solution
 105 -255 -77 0 | 0 0 0   (81979)
loop 17


'from the Shushu jiuzhang
'solve a+130b=-60, a+110c=-30, a+120d=-10, a+50e=-10, a+25f=10, a+100g=10, a+50h=10, a+20i=10
'  ==> a=3710, b=-29, c=-34,     d=-31,      e=-62,     f=-148,   g=-37,     h=-74     i=-185
P | Hnf
      1    0    0    0     0     0    0     0     0 0 | 1  1  1  1 1   1  1  1 0
  -7800   60   71   65   130   312   78   156   390 0 | 0 10  0  0 0   0  0  0 0
 -35750  275  325  298   596  1430  358   715  1788 0 | 0  0 10 10 0  50  0 10 0
      0    0    0    0     1     0    0     0     0 0 | 0  0  0 60 0   0  0  0 0
 -34320  264  312  286   572  1373  344   687  1716 0 | 0  0  0  0 5  80 30  0 0
      0    0    0    0     0     0    1     0     0 0 | 0  0  0  0 0 100  0  0 0
      0    0    0    0     0     0    0     1     0 0 | 0  0  0  0 0   0 50  0 0
      0    0    0    0     0     0    0     0     1 0 | 0  0  0  0 0   0  0 20 0
  -3710   29   34   31    62   148   37    74   185 1 | 0  0  0  0 0   0  0  0 1  -solution
  85800 -660 -780 -715 -1430 -3432 -858 -1716 -4290 0 | 0  0  0  0 0   0  0  0 0   (7399103669)
loop 102


'5 sailor coconut puzzle
'solve a-5b=1, 4b-5c=1, 4c-5d=1, 4d-5e=1, 4e-5f=1, 4f-5g=0
'  ==> a=3121, b=624, c=499, d=399, e=319, f=255, g=204
P | Hnf
     1     0    0    0    0    0    0 0 | 1 0 0 0 0 0 0
 -3905  -781 -625 -500 -400 -320 -256 0 | 0 1 0 0 0 0 0
  -975  -195 -156 -125 -100  -80  -64 0 | 0 0 1 0 0 0 0
 -5125 -1025 -820 -656 -525 -420 -336 0 | 0 0 0 1 0 0 0
 -2500  -500 -400 -320 -256 -205 -164 0 | 0 0 0 0 1 0 0
 -3125  -625 -500 -400 -320 -256 -205 0 | 0 0 0 0 0 1 0
 -3121  -624 -499 -399 -319 -255 -204 1 | 0 0 0 0 0 0 1  -solution
 15625  3125 2500 2000 1600 1280 1024 0 | 0 0 0 0 0 0 0   (269403226)
loop 71


'unbounded knapsack with slack
'solve 3000a+1800b+2500c+d=54500, 3a+2b+20c+e=250, 25a+15b+2c+f=250
'  ==> a=6, b=5, c=11, d=0, e=2, f=3
P | Hnf
  0  0   0   1   0    0 0 | 1 0 0 0
  0  0   0   0   1    0 0 | 0 1 0 0
  0  0   0   0   0    1 0 | 0 0 1 0
 -6 -5 -11   0  -2   -3 1 | 0 0 0 1  -solution
  3 -5   0   0   1    0 0 | 0 0 0 0   (35)
 -1  3  -1 100  17  -18 0 | 0 0 0 0   (10624)
 -4 15  -6   0 102 -113 0 | 0 0 0 0   (23450)
loop 55


'subset sum problem
'solve 575a+436b+1586c+1030d+1921e+569f+721g+1183h+1570i=6665
'  ==> a=1, b=0, c=1, d=1, e=0, f=0, g=1, h=1, i=1
P | Hnf
  0  0  0 -1  0  1 -1  1  0 0 | 1 0
 -1  0 -1 -1  0  0 -1 -1 -1 1 | 0 1  -solution
 -2 -1  1  0  0  0  0  0  0 0 | 0 0   (6)
  1 -1  0 -2  1  0  0  0  0 0 | 0 0   (7)
  0 -1  1  1 -1  0 -2  1  0 0 | 0 0   (9)
 -1  1  1 -1  0 -2  1  0  0 0 | 0 0   (9)
  0  0 -1  1  1 -1  0 -2  1 0 | 0 0   (9)
  0 -1  2  0  1  0 -1 -2 -1 0 | 0 0   (12)
  1  1  0 -1 -2  0  1  0  2 0 | 0 0   (12)
  2 -1  0  0 -1 -1  3  1 -1 0 | 0 0   (18)
loop 66


'HMM extended gcd (example 7.2)
'solve 763836a+1066557b+113192c+1785102d+1470060e+3077752f+114793g+3126753h+1997137i+2603018j=1
'  ==> a=-1, b=0, c=1, d=-3, f=1, g=3, h=3, i=-2, j=-2, k=2
P | Hnf
 -1  0  1 -3  1  3  3 -2 -2  2 0 | 1 0
  1  0 -1  3 -1 -3 -3  2  2 -2 1 | 0 1  -solution
 -2  0 -3  1  0  0  0 -1 -1  2 0 | 0 0   (20)
  0 -1  2  2 -1 -1  3 -1  1  1 0 | 0 0   (23)
 -2  0  0 -1  3 -3 -1  2  1  0 0 | 0 0   (29)
  0 -3 -2 -3 -2  3 -1  0  0  1 0 | 0 0   (37)
 -2  2  2  0 -1  3 -3 -2 -1  0 0 | 0 0   (36)
  2  2 -2 -5 -2  1  2  1  1  0 0 | 0 0   (48)
  0  2  0 -2 -4 -1 -1  4 -1  0 0 | 0 0   (43)
 -3  3 -1  2 -2  1  0  1  4 -6 0 | 0 0   (81)
  0 -2  1 -2  3  5  4  1 -5 -3 0 | 0 0   (94)
loop 187


'Fibonacci segment F7...F14 (example 7.3)
'solve 13a+21b+34c+55d+89e+144f+233g+377h=1
'  ==> a=-7, b=4, c=-3, d=1, e=-1, f=1, g=0, h=0
P | Hnf
 -7   4 -3  1 -1  1  0  0 0 | 1 0
  7  -4  3 -1  1 -1  0  0 1 | 0 1  -solution
 -1  -1  1  0  0  0  0  0 0 | 0 0   (3)
  0   0 -1 -1  1  0  0  0 0 | 0 0   (3)
  0   0  0  0 -1 -1  1  0 0 | 0 0   (3)
  0  -1 -1  1  0  0  0  0 0 | 0 0   (3)
  0   0  0 -1 -1  1  0  0 0 | 0 0   (3)
  0   0  0  0  0 -1 -1  1 0 | 0 0   (3)
 18 -11  7 -4  3 -1  1 -1 0 | 0 0   (522)
loop 45


'compute the inverse of transpose(P)
'(Fibonacci morphs into Lucas)
P | Hnf
  2  1   5  3  0   -5   5  13 0 | 1 0 0 0 0 0 0 0 0
  3  2   8  5  0   -8   8  21 0 | 0 1 0 0 0 0 0 0 0
  4  3  13  8  0  -13  13  34 0 | 0 0 1 0 0 0 0 0 0
  7  4  21 13  0  -21  21  55 0 | 0 0 0 1 0 0 0 0 0
 11  7  33 21  0  -34  34  89 0 | 0 0 0 0 1 0 0 0 0
 18 11  54 33  0  -55  55 144 0 | 0 0 0 0 0 1 0 0 0
 29 18  87 54 -1  -89  89 233 0 | 0 0 0 0 0 0 1 0 0
 47 29 141 87 -1 -145 144 377 0 | 0 0 0 0 0 0 0 1 0
  0  0   0  0  0    0   0   0 1 | 0 0 0 0 0 0 0 0 1
loop 84


'Hnf(A) with Aij = i^3 * j^2 + i + j (example 7.4)
P | Hnf
 -10  -8 -5  1  2  3  5  3  0 -4 0 | 1 0  7 22 45  76 115 162 217 280 0
  -2  -1  0  1 -1  0  1  0  1 -1 0 | 0 1  4  9 16  25  36  49  64  81 0
 -15 -11 -4  0  4  5  4  3  1 -5 0 | 0 0 12 36 72 120 180 252 336 432 0
   0   0  0  0  0  0  0  0  0  0 1 | 0 0  0  0  0   0   0   0   0   0 1
  -1   1  1  0 -2  1  0  0  0  0 0 | 0 0  0  0  0   0   0   0   0   0 0   (8)
   0  -1  1  1 -1  1 -2  1  0  0 0 | 0 0  0  0  0   0   0   0   0   0 0   (10)
  -1   0  1  1  1 -2  0 -1  1  0 0 | 0 0  0  0  0   0   0   0   0   0 0   (10)
  -1   0  2 -1  1 -1  1 -1 -1  1 0 | 0 0  0  0  0   0   0   0   0   0 0   (12)
   1   0 -1  0 -1 -1  1  2  0 -1 0 | 0 0  0  0  0   0   0   0   0   0 0   (10)
  -1   1  0  1 -1  0  0  1 -2  1 0 | 0 0  0  0  0   0   0   0   0   0 0   (10)
  -1   2 -1 -1  2  0 -2  1  0  0 0 | 0 0  0  0  0   0   0   0   0   0 0   (16)
loop 99


'Gauss x*atan(1/239) + y*atan(1/57) + z*atan(1/18) = pi/4
'(fudge factor -1 to absorb round-off error
' ignore the corresponding vector entry x1)
P | Hnf
  -1   0   0   0 0 | 1 0
  -1   5  -8 -12 1 | 0 1  -solution
  23  42 -29   6 0 | 0 0   (3170)
 -71  33 -49  13 0 | 0 0   (8700)
  18 -94 -63  27 0 | 0 0   (13858)
loop 20


'search for polynomial coefficients
'const sqrt(2) + i
'set precision and max. degree
 1.41421356 + 1*i
P | Hnf
   1   0   0   0   0   0 0 | 1 0 0
   0   9   0  -2   0   1 0 | 0 1 0
   0   0   0   0   0   0 1 | 0 0 1
 -32  17 -10   0   2   0 0 | 0 0 0   (1417)
   6  33   6 -48  35  -8 0 | 0 0 0   (4754)
  18 -22 -56   5  31 -20 0 | 0 0 0   (5330)
 102 151 -71  91 -78  36 0 | 0 0 0   (53907)
loop 53


'const 3^(1/3) + sqrt(2)
 2.8564631326805
P | Hnf
   1   0   0   0   0   0   0  0 0 | 1 0 0
   0   0   0   0   0   0   0  0 1 | 0 0 1
   5   1 -36  12  -6  -6   0  1 0 | 0 0 0   (1539)
 -27  14   0  15 -31 -23 -26 13 0 | 0 0 0   (3485)
  33  20  21  22 -13 -43   1  5 0 | 0 0 0   (4458)
 -18  10 -29 -49 -12 -25 -13  9 0 | 0 0 0   (4685)
  53 -14  15  13 -23  35 -13  1 0 | 0 0 0   (5323)
  35  78 -17 -17   8   7   0 -1 0 | 0 0 0   (8001)
  10  -5 -28  33 110  11 -84 23 0 | 0 0 0   (21804)
loop 125


'some constant
 -1.4172098692728
P | Hnf
   1  0   0   0   0  0   0   0   0   0  0 0 | 1 0 0
   0  0   0   0   0  0   0   0   0   0  0 1 | 0 0 1
   0  9   0   0  -7  0  -5   0   3   0  1 0 | 0 0 0   (165)
  -2  9  -2  -9   4  8   2  -2 -12  -2  4 0 | 0 0 0   (422)
  -4 -1   9   2  -5 -6  -2   6   6 -11 -9 0 | 0 0 0   (441)
  -5 11   6   3   4 -3   5 -12  -6   3 -1 0 | 0 0 0   (431)
  -9  1   9   5   4  1 -12  -8  11   1 -5 0 | 0 0 0   (560)
  -6 -2   2  17 -11 -4   3   1  -4  -5  0 0 | 0 0 0   (521)
  -1  1   0   5   3  8  12   6   4   9  5 0 | 0 0 0   (402)
  -7  3   0 -13  -3 -1   4   9  -4   8  9 0 | 0 0 0   (495)
  -9 11   7   2  11 -7  -7   3  -8  -2  3 0 | 0 0 0   (560)
 -16 11 -13  -4   8 -4  -4   3   4   1  0 0 | 0 0 0   (684)
loop 360


"""

