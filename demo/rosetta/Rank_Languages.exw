--
-- demo\rosetta\Rank_Languages.exw
-- ===============================
--?"begins"
include rosettacode_cache.e -- see [[Rosetta_Code/Count_examples#Phix]]
--include rosettacode_cache.e -- see [Count_examples#Phix]

constant {dont,need} = columnize({{"\xE2\x80\x8E",""}, -- utf8 left-to-right marks
            {`<div class="CategoryTreeChildren" style="display:none"></div>`,``},
            {`<ul><li>`,`<li>`},
            {`<span class="CategoryTreeBullet">`,``},
            {`<span class="CategoryTreeEmptyBullet">`,``},
            {`<div class="CategoryTreeSection">`,``},
            {`<div class="CategoryTreeItem">`,``},
            {`<div class="mw-category-group">`,``},
            {`class="CategoryTreeToggle" `,``},
            {` data-ct-state="collapsed"`,``},
            {`</span>`,``},
            {`</div>`,``},
            {`<ul>`,``},
            {`</ul>`,``}})

function clean_block(string block)
    block = substitute_all(block,dont,need)
    return block
end function

sequence pltext = split(get_rc_stitched("Programming_Languages",clean_block),'\n'),
         res = {}
for line in pltext from 2 do
    line = substitute(line,",","")
    sequence r = scanf(line,`%s title="Category:%s">%s</a> <span title="Contains %d subcategor%s %d page%s and %d files"%s`)
    assert(length(r)=1)
    res = append(res,{r[1][6],file_clean(r[1][2])}) -- ie {pages,lang}
end for
res = sort_columns(res,{-1,2})
for i,ri in res to 20 do
    printf(1,"%3d: %,d - %s\n",{i,ri[1],ri[2]})
end for

?"done"
{} = wait_key()
--/*
--output (as of 28/12/22)
  1: 1,592 - Phix
  2: 1,592 - Wren
  3: 1,554 - Julia
  4: 1,541 - Raku
  5: 1,502 - Go
  6: 1,496 - Perl
  7: 1,425 - Python
  8: 1,402 - Nim
  9: 1,306 - J
 10: 1,218 - C
 11: 1,182 - Mathematica
 12: 1,149 - Haskell
 13: 1,149 - REXX
 14: 1,144 - Java
 15: 1,141 - C++
 16: 1,134 - Kotlin
 17: 1,109 - Ruby
 18: 1,089 - Racket
 19: 1,080 - FreeBASIC
 20: 1,011 - Zkl

--older:
  1: 1,137 - Go
  2: 1,075 - Perl 6
  3: 1,054 - Python
  4: 1,042 - Kotlin
  5: 1,006 - Perl
  6: 998 - Julia
  7: 997 - Phix
  8: 989 - Racket
  9: 949 - C
 10: 934 - J
 11: 931 - Zkl
 12: 930 - Tcl
 13: 906 - Java
 14: 902 - REXX
 15: 875 - D
 16: 873 - Ruby
 17: 869 - Haskell
 18: 804 - Sidef
 19: 793 - Scala
 20: 775 - PicoLisp
--*/
