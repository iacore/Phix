--
-- demo\rosetta\Remote_Agent_Simulator.exw
-- =======================================
--
include Remote_Agent_Interface.exw

integer level = 9 -- see create_world (mainly to stage/test development)
sequence board, -- eg {"+-+-+","|R G|","+-+-+"}, up to 8(h)x11(w)
         balls, -- eg {".....",".g...","....."}, same size as board 
         drop = {} -- the allowed set of balls (sum(g)<=sum(G) etc)
integer x, y, w, h, ball = '.', d = North

procedure amaze(integer x, integer y)
    integer c = "RGYB"[rand(4)]
    board[y][x] = c  -- give cell a colour / mark visited
    drop &= lower(c)
    sequence p = shuffle({{x-2,y},{x,y+2},{x+2,y},{x,y-2}})
    for i=1 to length(p) do
        integer {nx,ny} = p[i]
        if nx>1 and nx<=2*w
        and ny>1 and ny<=2*h
        and board[ny][nx]='?' then
            integer mx = (x+nx)/2
            board[(y+ny)/2][mx] = ' ' -- knock down wall
            amaze(nx,ny)
            drop = shuffle(drop)
            balls[ny][nx] = drop[$] -- (all bar start cell)
            drop = drop[1..$-1]
        end if
    end for
end procedure

procedure create_world()
    -- (The distro version has several other tests/examples)
    if level=1 then
        -- start simple, must pick up and drop one ball in next/only cell:
        board = {"+-+-+",
                 "|R G|",
                 "+-+-+"}
        balls = {".....",
                 ".g...",
                 "....."} 
        x = 2
        y = 2

    elsif level=2 then
        -- start simple, must pick up and drop one ball in next/only cell:
        board = {"+-+",
                 "|R|",
                 "+ +",
                 "|G|",
                 "+-+"}
        balls = {"...",
                 ".g.",
                 "...",
                 "...",
                 "..."} 
        x = 2
        y = 2

    elsif level=3 then
        -- requires a dummy move:
        board = {"+-+-+-+",
                 "|R G Y|",
                 "+-+-+-+"}
        balls = {".......",
                 ".y...r.",
                 "......."} 
        x = 2
        y = 2

    elsif level=4 then
        -- from Go:
        board = {"+-+-+-+-+",
                 "|R| |R B|",
                 "+ +-+ + +",
                 "|G G B G|",
                 "+ + +-+ |",
                 "|B G| |R|",
                 "+-+-+-+-+"}
        balls = {".........",
                 ".b...g...",
                 ".........",
                 ".........",
                 ".........",
                 ".r.....*.",
                 "........."} 
        x = 8
        y = 6
        if balls[y][x]!='*' then ?9/0 end if
        balls[y][x] = '.'

    elsif level=5 then
        -- from PicoLisp(Simulation/Server):
        board = {"+-+-+-+-+-+-+-+-+",
                 "|R Y|B|R R B|R B|",
                 "+ + + + + +-+-+ |",
                 "|Y G G G|Y G R|Y|",
                 "+-+ + + +-+ +-+ +",
                 "|R Y B R G Y|Y B|",
                 "+-+-+ + +-+-+ +-+",
                 "|B R G R|Y Y Y|B|",
                 "+ +-+-+ +-+ +-+ +",
                 "|R|R R G B G B Y|",
                 "+ +-+-+ +-+-+ + +",
                 "|R R|Y B G|Y B|R|",
                 "+ + +-+-+-+ + +-+",
                 "|Y|B|B B G B B Y|",
                 "+ + + + +-+ +-+ +",
                 "|R|R G G R G R|G|",
                 "+-+-+-+-+-+-+-+-+"}
        balls = {"+-+-+-+-+-+-+-+-+",
                 "|. .|.|. . r|b r|",
                 "+ + + + + +-+-+ |",
                 "|y . . b|. g r|.|",
                 "+-+ + + +-+ +-+ +",
                 "|. . . r @ .|. r|",
                 "+-+-+ + +-+-+ +-+",
                 "|. y . .|y y .|.|",
                 "+ +-+-+ +-+ +-+ +",
                 "|.|. . g . . . .|",
                 "+ +-+-+ +-+-+ + +",
                 "|. .|. . .|r .|.|",
                 "+ + +-+-+-+ + +-+",
                 "|.|.|. b r . . y|",
                 "+ + + + +-+ +-+ +",
                 "|r|. . r . . .|.|",
                 "+-+-+-+-+-+-+-+-+"} 
        x = 10
        y = 6
        if balls[y][x] != '@' then ?9/0 end if
        balls[y][x] = '.'

    elsif level=6 then
        -- from PicoLisp(Agent Logic):
        -- (initial position not specified...) [probably better off generating...]
        board = {"+-+-+-+-+-+-+-+-+",
                 "|G G Y Y|Y Y G R|",
                 "+ +-+-+ + +-+-+ +",
                 "|Y|Y|B G B Y B|G|",
                 "+-+ + +-+ + + + +",
                 "|G|G G R B Y|B B|",
                 "+ +-+ + +-+-+-+ +",
                 "|R|B G|B|R|B R Y|",
                 "+ +-+ + + + + + +",
                 "|B B|G|Y B B|B R|",
                 "+-+ + +-+ + + + +",
                 "|G|Y G R|B B B B|",
                 "+ + +-+-+-+ + +-+",
                 "|G R B|G Y|B|B B|",
                 "+-+ +-+ + + + + +",
                 "|R R G|B|G G R|Y|",
                 "+-+-+-+-+-+-+-+-+"}
        balls = {"+-+-+-+-+-+-+-+-+",
                 "|. . . r . b . .|",
                 "+ +-+-+ + +-+-+ +",
                 "|.|.|. y g . .|g|",
                 "+-+ + +-+ + + + +",
                 "|b|y . . . .|. g|",
                 "+ +-+ + +-+-+-+ +",
                 "|.|. .|.|.|. . g|",
                 "+ +-+ + + + + + +",
                 "|. .|.|. . g|g .|",
                 "+-+ + +-+ + + + +",
                 "|.|. r .|. . r .|",
                 "+ + +-+-+-+ + +-+",
                 "|. r .|y .|g|b .|",
                 "+-+ +-+ + + + + +",
                 "|. . b|g|. . .|g|",
                 "+-+-+-+-+-+-+-+-+"} 
        x = 2
        y = 2
--      balls[y][x] = '.'

    elsif level=7 then
        board = {"+-+-+-+-+-+-+-+-+-+-+-+",
                 "|Y B B R G Y G R R Y B|",
                 "+ +-+-+-+ +-+-+-+-+-+ +",
                 "|G B R|B|Y|B G Y|G B R|",
                 "+ +-+ + + + +-+ + +-+-+",
                 "|Y R|Y|R Y|B|R G|R|G B|",
                 "+-+-+ + +-+ + +-+ +-+ +",
                 "|R Y G|G|G Y|Y|R|Y R G|",
                 "+ +-+-+-+ +-+ + +-+-+ +",
                 "|R|G G Y G|G|R|Y Y R|G|",
                 "+ + +-+-+-+ +-+ +-+-+ +",
                 "|Y|B|R B Y B|B Y|G Y|B|",
                 "+ + + +-+ +-+ + + + + +",
                 "|Y Y|B B|B R B|G|R|Y|R|",
                 "+-+-+-+ +-+-+-+ + + + +",
                 "|Y G B R G B B|G B|R B|",
                 "+-+-+-+-+-+-+-+-+-+-+-+"}
        balls = {".......................",
                 ".g.y.g...b.y.b.b.r.b.r.",
                 ".......................",
                 ".g.y.r.g.y.b.r.b.y.b.b.",
                 ".......................",
                 "...g.r.y.r.y.y.b.b.g.g.",
                 ".......................",
                 ".y.b.y.r.r.r...y.y.r.r.",
                 ".......................",
                 ".g.r.g.b.r.r...y.y.g.g.",
                 ".......................",
                 ".b.g.b.r.y.r.y.y.g.g.g.",
                 ".......................",
                 ".g.g.r.r.b.g.b.g.r.b.r.",
                 ".......................",
                 ".y.b.b.g.y.b.y.y.y.b.r.",
                 "......................."}
        x = 14
        y = 10
--      balls[y][x] = '.'
    elsif level=8 then
        board = {"+-+-+-+-+-+",
                 "|G|G G|Y B|",
                 "+ + + +-+ +",
                 "|Y|B|B|R G|",
                 "+ +-+ + + +",
                 "|Y R G B|G|",
                 "+-+-+-+-+-+"}
        balls = {"...........",
                 ".g.r.g.r.b.",
                 "...........",
                 ".g...b.g.g.",
                 "...........",
                 ".y.y.b...b.",
                 "..........."}
        x = 4
--      x = 2
        y = 4
    elsif level=9 then

        w = rand(11)
        h = rand(8)+(w==1)  -- (prohibit 1x1 formations, simply because
                            --  the gameover check won't trigger right.)
        x = rand(w)*2
        y = rand(h)*2 

        sequence wall = join(repeat("+",w+1),"-")&"\n",
                 cell = join(repeat("|",w+1),"?")&"\n"
        board = split(join(repeat(wall,h+1),cell),'\n')
        balls = repeat(repeat('.',w*2+1),h*2+1)
        amaze(x,y)

    else
        ?9/0
    end if
end procedure

function gameover()
    for y=2 to length(balls) by 2 do
        for x=2 to length(balls[y]) by 2 do
            integer byx = balls[y][x]
            if byx!='.' then
                if byx!=lower(board[y][x]) then return false end if
            end if
        end for
    end for
    return true
end function

string event_queue = "A" -- (the initial handshake) [this is a private field]

procedure accept_command(integer command)
    switch command do
        case '^':   -- forward
                    integer {dx,dy} = dxy[d],
                            {nx,ny} = {x+dx,y+dy}
                    if board[ny][nx]!=' ' then
                        event_queue &= '!'  -- bump
                    else
                        {x,y} = {nx+dx,ny+dy}
                        event_queue &= board[y][x]  -- colour
                        integer bxy = balls[y][x]
                        if bxy!='.' then
                            event_queue &= bxy  -- ball
                        end if
                    end if

        case '<':   -- turn left    -- NESW(ie 1..4) ==> first four for '<', 
        case '>':   -- turn right                         last four for '>':
                    d = {4,1,2,3,4,1}[d+command-'<']

        case '@':   -- get
                    integer bxy = balls[y][x]
                    if bxy='.' then
                        event_queue &= 's'  -- no ball
                    elsif ball!='.' then
                        event_queue &= 'A'  -- agent full
                    else
                        balls[y][x] = '.'
                        ball = bxy
                    end if

        case '!':   -- drop
                    integer bxy = balls[y][x]
                    if ball='.' then
                        event_queue &= 'a'  -- no ball in agent
                    elsif bxy!='.' then
                        event_queue &= 'S'  -- sector full
                    else
                        balls[y][x] = ball
                        ball = '.'
                        if gameover() then
                            event_queue &= '+'  -- game over
                        end if
                    end if

        default:    crash("uh?") -- unknown command
    end switch
    event_queue &= '.'  -- stop
end procedure

function get_event()
    if not length(event_queue) then ?9/0 end if
    {integer event, event_queue} = {event_queue[1],event_queue[2..$]}
    return event
end function

function get_world()
    -- (for display only)
    return {{board,balls},{x,y,d,ball}}
end function

create_world()
register_world(accept_command, get_event, get_world)

