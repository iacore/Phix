--
-- demo\rosetta\Speech.exw
-- =======================
--
with javascript_semantics
requires(6) -- WINDOWS or JS, not LINUX
requires(32) -- Windows 32 bit only, for now... 
-- (^ runs fine on a 64-bit OS, but needs a 32-bit p.exe)
requires("1.0.2")
include builtins\speak.e -- (new in 1.0.2)

include pGUI.e
Ihandle t3, left, red, right, btn, hbc, dlg

-- not sure why, but a leading space really helps...
constant text = ` Highlight words as they are spoken.`

procedure speech_cb(integer pos, len)
    if pos<0 then pos += length(text)+1 end if
    IupSetStrAttribute(left,"TITLE",text[1..pos])
    IupSetStrAttribute(red,"TITLE",text[pos+1..pos+len])
    IupSetStrAttribute(right,"TITLE",text[pos+len+1..$])
    IupSetAttributes({left,red,right}, "RASTERSIZE=x0")
    IupRefresh(t3)
    IupRedraw(t3)
end procedure

function button_cb(Ihandle /*ih*/)
    atom rate = iff(platform()=WINDOWS?-5: -- -10..+10, voice dependent
                iff(platform()=JS?0.3:      -- 0.1..10, 0.5 = half speed
                                  9/0))      -- linux, anyone?...
    speak(text,rate,speech_cb)
    return IUP_CONTINUE
end function

procedure main()
    IupOpen()
    left = IupLabel()
    red = IupLabel("",`FGCOLOR="255 0 0"`)
    right = IupLabel(text)
    t3 = IupHbox({IupFill(),left,red,right,IupFill()},
                 `FONT="Verdana, 18", MARGIN=0x20`)
    btn = IupButton("Speak",Icallback("button_cb"))
    hbc = IupHbox({IupFill(),btn,IupFill()},"MARGIN=0x10")
    dlg = IupDialog(IupVbox({t3,hbc}),"TITLE=Speak")
    IupShow(dlg)
    if platform()!=JS then
        IupMainLoop()
        IupClose()
    end if
end procedure

main()

