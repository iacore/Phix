--
-- demo\rosetta\VisualiseTree.exw
--
with javascript_semantics
                        
-- To the theme tune of the Milk Tray Ad iyrt,
-- All because the Windows console hates utf8:
constant TL = '\#DA', -- aka '┌'
         VT = '\#B3', -- aka '│'
         BL = '\#C0', -- aka '└'
         HZ = '\#C4', -- aka '─'
         HS = "\#C4"  -- (string version of HZ)

function w1252_to_utf8(string s)
    if platform()!=WINDOWS then
        s = substitute_all(s,{ TL, VT, BL, HZ},
                             {"┌","│","└","─"})
    end if
    return s
end function
--</hates utf8>

procedure visualise_tree(object tree, string root=HS)
    if atom(tree) then
        puts(1,"<empty>\n")
    else
        object {v,l,r} = tree
        integer g = root[$]
        if sequence(l) then
            root[$] = iff(g=TL or g=HZ?' ':VT)
            visualise_tree(l,root&TL)
        end if
        root[$] = g
        printf(1,"%s%d\n",{w1252_to_utf8(root),v})
        if sequence(r) then
            root[$] = iff(g=TL?VT:' ')
            visualise_tree(r,root&BL)
        end if
    end if
end procedure

function rand_tree(integer low, integer high)
    for i=1 to 2 do
        integer v = rand(high-low+1)-1+low
        if v!=low
        and v!=high then
            return {v,rand_tree(low,v),rand_tree(v,high)}
        end if
    end for
    return 0
end function

object tree = rand_tree(0,20)   -- (can be 0, <1% chance)

visualise_tree(tree)
--pp(tree,{pp_Nest,10})

--/*
with javascript_semantics
constant schemes = {`ftp`,`gopher`,`http`,`https`,`mailto`,`news`,`nntp`,
                    `telnet`,`wais`,`file`,`prospero`,`edit`,`tel`,`urn`}

function scan_for_urls(sequence text)
    -- such as http::\\wikipedia.org
    integer chidx = 1, chidx2 = 1, lt = length(text), ch2
    sequence res = {}
    while chidx2<=lt do
        ch2 = text[chidx2]
        if ch2>='a' and ch2<='z' then
            if chidx2-1>chidx or text[chidx]<=' ' then
                chidx = chidx2
            end if
            while chidx2<=lt do
                ch2 = text[chidx2]
                if ch2<'a' or ch2>'z' then exit end if
                chidx2 += 1
            end while                   
            string oneword = text[chidx..chidx2-1]
            if chidx2>lt then exit end if
            ch2 = text[chidx2]
            if (ch2=':' and find(oneword,schemes))
            or (ch2='.' and equal(oneword,"www")) then
                chidx2 += 1
                integer chidx0 = chidx2
                bool isUrl = false
                string bstack = ""
                while chidx2<=lt do
                    ch2 = text[chidx2]
                    if ch2='\"' and chidx2=chidx0 then
                        while chidx2<lt do
                            chidx2 += 1
                            ch2 = text[chidx2]
                            if ch2='\"' then
                                chidx2 += 1
                                isUrl = true
                                exit
                            end if
                        end while
                        exit
                    elsif find(ch2,"(<[{") then
                        bstack &= ch2+iff(ch2='('?1:2)
                    elsif find(ch2,")>]}") then
                        if length(bstack)=0 or bstack[$]!=ch2 then exit end if
                        bstack = bstack[1..$-1]
                    end if
                    if ch2>255 or ch2<=' ' then exit end if
                    isUrl = true
                    chidx2 += 1
                end while
                if isUrl then
                    string oneurl = text[chidx..chidx2-1]
                    if oneurl[$]='.' then oneurl = oneurl[1..$-1] end if
                    res = append(res,oneurl)
                end if
                chidx = chidx2
                if chidx2>lt then exit end if
            else
                chidx2 -= 1
            end if
        end if
        chidx2 += 1
    end while
    return res
end function

constant txt = """
this URI contains an illegal character, parentheses and a misplaced full stop:
http://en.wikipedia.org/wiki/Erich_Kästner_(camera_designer). (which is handled by http://mediawiki.org/).
and another one just to confuse the parser: http://en.wikipedia.org/wiki/-)
")" is handled the wrong way by the mediawiki parser.
ftp://domain.name/path(balanced_brackets)/foo.html
ftp://domain.name/path(balanced_brackets)/ending.in.dot.
ftp://domain.name/path(unbalanced_brackets/ending.in.dot.
leading junk ftp://domain.name/path/embedded?punct/uation.
leading junk ftp://domain.name/dangling_close_paren)
if you have other interesting URIs for testing, please add them here:   
http://www.example.org/foo.html#includes_fragment
http://www.example.org/foo.html#enthält_Unicode-Fragment
 http://192.168.0.1/admin/?hackme=%%%%%%%%%true
blah (foo://domain.hld/))))
https://haxor.ur:4592/~mama/####&?foo
  ftp://ftp.is.co.za/rfc/rfc1808.txt
  http://www.ietf.org/rfc/rfc2396.txt
  mailto:John.Doe@example.com
  news:comp.infosystems.www.servers.unix
  tel:+1-816-555-1212
  telnet://192.0.2.16:80/
  urn:oasis:names:specification:docbook:dtd:xml:4.1.2
"""
printf(1,"%s\n",{join(scan_for_urls(txt),"\n")})
--*/

{} = wait_key()
