-- Win32Dib demo: demonstrates some of the manipulation possibilities of Win32Dib

--without warning
include w32dgeom.ew
include w32dcolr.ew
include w32dfltr.ew

object orig_dib, manip_dib, brightness_dib
orig_dib = loadDib("demo.bmp") -- orig_dib is the original bitmap
if not sequence(orig_dib) then
    VOID = message_box("Can't load bitmap 'demo.bmp'.", "Error", MB_ICONERROR)
    abort(0)
end if
manip_dib = copyDib(orig_dib)  -- manip_dib is the manipulated bitmap
if not sequence(manip_dib) then
    VOID = message_box("Can't make copy of bitmap.", "Error", MB_ICONERROR)
    abort(0)
end if
brightness_dib = newDib(orig_dib[DibWidth], orig_dib[DibHeight])
if not sequence(brightness_dib) then
    VOID = message_box("Can't create a brightness-bitmap.", "Error", MB_ICONERROR)
    abort(0)
end if
integer bytes, c
sequence c1, c2
bytes = brightness_dib[DibBytesPerLine]
c1 = repeat(100, bytes)
c2 = repeat(200, bytes)
c = 0
atom addr
--  for addr = brightness_dib[DibMemory] to brightness_dib[DibMemory] + brightness_dib[DibBytesTotal] - bytes by bytes do
    addr = brightness_dib[DibMemory]
    for zzz = 0 to brightness_dib[DibBytesTotal] - bytes by bytes do
	if c then c = 0  poke(addr, c1)
	else c = 1  poke(addr, c2)
	end if
	addr += bytes
    end for
c1 = {}  c2 = c1

constant 
    win = create(Window, "Win32Dib bitmap manipulation demo", 0, Default, Default, 600, 400, 0),
    mnuManipulate = create(Menu, "&Manipulate", win, 0, 0, 0, 0, 0),
    mnuInvert = create(MenuItem, "&Invert", mnuManipulate, 0, 0, 0, 0, 0),
    mnuFlipHor = create(MenuItem, "Flip &horizontally", mnuManipulate, 0, 0, 0, 0, 0),
    mnuFlipVert = create(MenuItem, "Flip &vertically", mnuManipulate, 0, 0, 0, 0, 0),
    mnuScale = create(Menu, "&Scale", mnuManipulate, 0, 0, 0, 0, 0),
    mnuScale25 = create(MenuItem, "25%", mnuScale, 0, 0, 0, 0, 0),
    mnuScale50 = create(MenuItem, "50%", mnuScale, 0, 0, 0, 0, 0),
    mnuScale150 = create(MenuItem, "150%", mnuScale, 0, 0, 0, 0, 0),
    mnuScale200 = create(MenuItem, "200%", mnuScale, 0, 0, 0, 0, 0),
    mnuRotate = create(Menu, "&Rotate", mnuManipulate, 0, 0, 0, 0, 0),
    mnuRotate90 = create(MenuItem, "90°", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate180 = create(MenuItem, "180°", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate270 = create(MenuItem, "270°", mnuRotate, 0, 0, 0, 0, 0),
    mnuSep1 = create(MenuItem, "-", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate15red = create(MenuItem, "15° (red fill color)", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate15wrap = create(MenuItem, "15° (wrapping)", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate45green = create(MenuItem, "45° (green fill color)", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate45wrap = create(MenuItem, "45° (wrapping)", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate200blue = create(MenuItem, "200° (blue fill color)", mnuRotate, 0, 0, 0, 0, 0),
    mnuRotate200wrap = create(MenuItem, "200° (wrapping)", mnuRotate, 0, 0, 0, 0, 0),
    mnuMakeGray = create(MenuItem, "Make &gray", mnuManipulate, 0, 0, 0, 0, 0),
    mnuSep2 = create(MenuItem, "-", mnuManipulate, 0, 0, 0, 0, 0),
    mnuColorize = create(Menu, "&Colorize", mnuManipulate, 0, 0, 0, 0, 0),
    mnuColorizeRed = create(MenuItem, "&Red", mnuColorize, 0, 0, 0, 0, 0),
    mnuColorizeGreen = create(MenuItem, "&Green", mnuColorize, 0, 0, 0, 0, 0),
    mnuColorizeBlue = create(MenuItem, "&Blue", mnuColorize, 0, 0, 0, 0, 0),
    mnuAdjustBrightness = create(Menu, "Adjust &brightness", mnuManipulate, 0, 0, 0, 0, 0),
    mnuAdjustBrightnessMinus200 = create(MenuItem, "-200", mnuAdjustBrightness, 0, 0, 0, 0, 0),
    mnuAdjustBrightnessMinus100 = create(MenuItem, "-100", mnuAdjustBrightness, 0, 0, 0, 0, 0),
    mnuAdjustBrightnessPlus100 = create(MenuItem, "+100", mnuAdjustBrightness, 0, 0, 0, 0, 0),
    mnuAdjustBrightnessPlus200 = create(MenuItem, "+200", mnuAdjustBrightness, 0, 0, 0, 0, 0),
    mnuAdjustContrast = create(Menu, "Adjust c&ontrast", mnuManipulate, 0, 0, 0, 0, 0),
    mnuAdjustContrastMinus10 = create(MenuItem, "-1.0", mnuAdjustContrast, 0, 0, 0, 0, 0),
    mnuAdjustContrastMinus05 = create(MenuItem, "-0.5", mnuAdjustContrast, 0, 0, 0, 0, 0),
    mnuAdjustContrastPlus05 = create(MenuItem, "+0.5", mnuAdjustContrast, 0, 0, 0, 0, 0),
    mnuAdjustContrastPlus10 = create(MenuItem, "+1.0", mnuAdjustContrast, 0, 0, 0, 0, 0),
    mnuSep3 = create(MenuItem, "-", mnuManipulate, 0, 0, 0, 0, 0),
    mnuFilter = create(Menu, "&Filter", mnuManipulate, 0, 0, 0, 0, 0),
    mnuDetectEdges = create(MenuItem, "Detect &Edges", mnuFilter, 0, 0, 0, 0, 0),
    mnuSharpen = create(MenuItem, "&Sharpen", mnuFilter, 0, 0, 0, 0, 0),
    mnuSubtleSharpen = create(MenuItem, "S&ubtle Sharpen", mnuFilter, 0, 0, 0, 0, 0),
    mnuBlur = create(MenuItem, "&Blur", mnuFilter, 0, 0, 0, 0, 0),
    mnuSubtleBlur = create(MenuItem, "Su&btle Blur", mnuFilter, 0, 0, 0, 0, 0),
    mnuEmboss = create(Menu, "E&mboss", mnuFilter, 0, 0, 0, 0, 0),
    mnuEmbossRed = create(MenuItem, "&Red", mnuEmboss, 0, 0, 0, 0, 0),
    mnuEmbossGreen = create(MenuItem, "&Green", mnuEmboss, 0, 0, 0, 0, 0),
    mnuEmbossBlue = create(MenuItem, "&Blue", mnuEmboss, 0, 0, 0, 0, 0),
    mnuEmbossGray = create(MenuItem, "Gr&ay", mnuEmboss, 0, 0, 0, 0, 0),
    mnuApplyBrightness = create(MenuItem, "&Apply Brightness", mnuManipulate, 0, 0, 0, 0, 0),
    mnuSep4 = create(MenuItem, "-", mnuManipulate, 0, 0, 0, 0, 0),
    mnuReset = create(MenuItem, "Rese&t", mnuManipulate, 0, 0, 0, 0, 0),
    mnuInfo = create(Menu, "&Info!", win, 0, 0, 0, 0, 0)
    if mnuSep1 or mnuSep2 or mnuSep3 or mnuSep4 then end if -- suppress warnings


procedure winPaint(integer self, integer event, sequence parms)
sequence size
    if self or event or sequence(parms) then end if -- suppress warnings
    setPenColor(win, getSysColor(COLOR_BTNFACE))
    size = getCtlSize(win)
    drawRectangle(win, True, 0, 0, size[1], size[2])
    if sequence(orig_dib) then 
	drawDib(win, orig_dib, 0, 0, 0, 0, orig_dib[DibWidth] - 1, orig_dib[DibHeight] - 1)
	if sequence(manip_dib) then
	    drawDib(win, manip_dib, orig_dib[DibWidth] + 5, 0, 0, 0, manip_dib[DibWidth] - 1, manip_dib[DibHeight] - 1)
	end if
    end if
end procedure
setHandler(win, w32HPaint, routine_id("winPaint"))

procedure manipulate(integer self, integer event, sequence parms)
    setMousePointer(win, WaitPointer)
    if sequence(manip_dib) then killDib(manip_dib) end if
    manip_dib = copyDib(orig_dib)
    if self = mnuInvert then invertDib(manip_dib)
    elsif self = mnuFlipHor then flipDibHor(manip_dib)
    elsif self = mnuFlipVert then flipDibVert(manip_dib)
    elsif self = mnuMakeGray then makeDibGray(manip_dib)
    elsif self = mnuColorizeRed then colorizeDib(manip_dib, {0, 0, 255})
    elsif self = mnuColorizeGreen then colorizeDib(manip_dib, {0, 255, 0})
    elsif self = mnuColorizeBlue then colorizeDib(manip_dib, {255, 0, 0})
    elsif self = mnuAdjustBrightnessMinus200 then adjustDibBrightness(manip_dib, -200)
    elsif self = mnuAdjustBrightnessMinus100 then adjustDibBrightness(manip_dib, -100)
    elsif self = mnuAdjustBrightnessPlus200 then adjustDibBrightness(manip_dib, 200)
    elsif self = mnuAdjustBrightnessPlus100 then adjustDibBrightness(manip_dib, 100)
    elsif self = mnuAdjustContrastMinus10 then adjustDibContrast(manip_dib, -1.0)
    elsif self = mnuAdjustContrastMinus05 then adjustDibContrast(manip_dib, -0.5)
    elsif self = mnuAdjustContrastPlus05 then adjustDibContrast(manip_dib, 0.5)
    elsif self = mnuAdjustContrastPlus10 then adjustDibContrast(manip_dib, 1.0)
    elsif self = mnuDetectEdges then detectDibEdges(manip_dib)
    elsif self = mnuSharpen then sharpenDib(manip_dib)
    elsif self = mnuBlur then blurDib(manip_dib)
    elsif self = mnuReset then -- do nothing
    elsif self = mnuScale25 then manip_dib = scaleDibPct(manip_dib, 25, True)
    elsif self = mnuScale50 then manip_dib = scaleDibPct(manip_dib, 50, True)
    elsif self = mnuScale150 then manip_dib = scaleDibPct(manip_dib, 150, True)
    elsif self = mnuScale200 then manip_dib = scaleDibPct(manip_dib, 200, True)
    elsif self = mnuRotate90 then manip_dib = rotateDib(manip_dib, 90, True)
    elsif self = mnuRotate180 then manip_dib = rotateDib(manip_dib, 180, True)
    elsif self = mnuRotate270 then manip_dib = rotateDib(manip_dib, 270, True)
    elsif self = mnuRotate15red then manip_dib = rotateDibFree(manip_dib, 15, {0, 0, 255}, True)
    elsif self = mnuRotate15wrap then manip_dib = rotateDibFree(manip_dib, 15, 0, True)
    elsif self = mnuRotate45green then manip_dib = rotateDibFree(manip_dib, 45, {0, 255, 0}, True)
    elsif self = mnuRotate45wrap then manip_dib = rotateDibFree(manip_dib, 45, 0, True)
    elsif self = mnuRotate200blue then manip_dib = rotateDibFree(manip_dib, 200, {255, 0, 0}, True)
    elsif self = mnuRotate200wrap then manip_dib = rotateDibFree(manip_dib, 200, 0, True)
    elsif self = mnuEmbossRed then embossDib(manip_dib, {0, 0, 255})
    elsif self = mnuEmbossGreen then embossDib(manip_dib, {0, 255, 0})
    elsif self = mnuEmbossBlue then embossDib(manip_dib, {255, 0, 0})
    elsif self = mnuEmbossGray then embossDib(manip_dib, {128, 128, 128})
    elsif self = mnuApplyBrightness then applyDibBrightnessToDib(manip_dib, brightness_dib, 0, 0, 0, 0, orig_dib[DibWidth] - 1, orig_dib[DibHeight] - 1, 50)
    elsif self = mnuSubtleBlur then subtleBlurDib(manip_dib)
    elsif self = mnuSubtleSharpen then subtleSharpenDib(manip_dib)
    elsif event or sequence(parms) then -- suppress warnings
    end if
    winPaint(win, w32HPaint, {})
    setMousePointer(win, ArrowPointer)
end procedure
setHandler({mnuInvert, mnuFlipHor, mnuFlipVert, mnuMakeGray, mnuColorizeRed, mnuColorizeGreen, mnuColorizeBlue,
	    mnuAdjustBrightnessMinus200, mnuAdjustBrightnessMinus100, mnuAdjustBrightnessPlus100, mnuAdjustBrightnessPlus200,
	    mnuAdjustContrastMinus10, mnuAdjustContrastMinus05, mnuAdjustContrastPlus05, mnuAdjustContrastPlus10,
	    mnuDetectEdges, mnuSharpen, mnuBlur, mnuReset, mnuScale25, mnuScale50, mnuScale150, mnuScale200,
	    mnuRotate90, mnuRotate180, mnuRotate270, mnuRotate15red, mnuRotate15wrap, mnuRotate45green, mnuRotate45wrap,
	    mnuRotate200blue, mnuRotate200wrap, mnuEmbossRed, mnuEmbossGreen, mnuEmbossBlue, mnuEmbossGray, mnuApplyBrightness,
	    mnuSubtleBlur, mnuSubtleSharpen},
	   w32HClick, routine_id("manipulate"))

procedure info(integer self, integer event, sequence parms)
integer result
sequence msg
    if self or event or sequence(parms) then end if -- suppress warnings
    msg = sprintf("Win32Dib demo: bitmap manipulation.\n\nWin32Dib version %d.%d.%d", Win32DibVersion)
    msg &= sprintf("\nWin32Lib version %d.%d.%d\n\n", Win32LibVersion)
    msg &= "Copyright © 2004 - 2005 Tommy Carlier\n\ntommy.carlier@telenet.be\nhttp://users.telenet.be/tommycarlier"
    result = message_box(msg,"Info", MB_OK + MB_ICONINFORMATION)
end procedure
setHandler(mnuInfo, w32HClick, routine_id("info"))

WinMain(win, Normal)

if sequence(orig_dib) then killDib(orig_dib) end if
if sequence(manip_dib) then killDib(manip_dib) end if -- delete the bitmaps
