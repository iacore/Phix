<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Icallback</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Icallback.htm">cbfunc</a> res = Icallback(<a href="string.htm">string</a> name, 
                                                               <a href="integer.htm">integer</a> rid = <a href="routine_id.htm">routine_id</a>(name)))
            <br>
            <i>-- or --</i>
            <br>
            <a href="Icallback.htm">cbfunc</a> res = Icallback(<a href="integer.htm">integer</a> rid) -- <small>(see Technicalia)</small>
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>Utility function. Shorthand for <a href="call_back.htm">call_back</a>(<a href="routine_id.htm">routine_id</a>(name)), but also validated as below.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            The routine name must be in scope, a literal string, and already defined at the point of use.
            <br>
            <br>
            pGUI records a list of all callbacks generated via Icallback() and validates all attempts to set callbacks against that list,
            since attempts to invoke something which is not a valid callback will always produce an indecipherable error message, or
            worse quietly terminate for no apparent reason, at least that is when said call is actually somewhere deep inside one of 
            the precompiled IUP dynamic link libraries (which are written in C).
            <br>
            <br>
            The type <b>cbfunc</b> is used to validate that an atom address is (NULL or) the result of a previous call to Icallback(), 
            alternatively you could just use the <a href="atom.htm">atom</a> type. <br>
            <a href="string.htm">string</a> name = <b>iup_name_from_cb</b>(<a href="atom.htm">atom</a> addr) can also be used to retrieve 
            the name corresponding to a valid (non-null previously generated) Icallback() address.
            <br>
            <br>
            You should not construct strings to pass to Icallback(), or rather the default for rid only works when name is a fixed
            literal string, so Icallback("quit_cb") is fine, but Icallback(name,routine_id(name)) is needed for variable names.
            The compiler issues a "missing parameters" compilation error when the latter is required.
            <br>
            <br>
            Alternatively the function cbfunc func = <b>iup_cb_from_name</b>(<a href="string.htm">string</a> name) can be
            used when needed, and declare constant <i>&lt;possibly_otherwise_unused&gt;</i>=Icallback(<i>"routine"</i>), immediately 
            following the actual definition of each and every routine that you might require this for. It returns null when unable to 
            find a previously generated Icallback() of that name. It is <i>entirely</i> the programmer&rsquo;s responsibility to
            only ever use this with application-wide unique names, any attempt to retrieve say "close_cb" will deliberately crash
            should there be, say, a dozen callbacks of that name scattered throughout the current application.
            <br>
            <br>
            When translating C code to Phix, a common requirement is to replace <code>(Icallback)xxx_cb</code> with <code>Icallback("xxx_cb")</code>.<br>
            In 0.8.2 and later you can also use Icallback(xxx_cb), without the quotes, to exactly the same effect (see Technicalia).
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
include pGUI.e

function quit_cb()
    -- save_files() and/or IupConfigDialogClosed(config,dialog,"MainWindow"), etc.
    return IUP_CLOSE
end function
constant cb_quit = Icallback("quit_cb")

Ihandle quit_btn = IupButton("Quit", cb_quit)
--              or IupButton("Quit", Icallback("quit_cb")) [probably better if single use]
</eucode-->
<pre>
<font color="#008080">include</font><font color="#000000"> pGUI.e
</font>
<font color="#008080">function</font><font color="#000000"> quit_cb</font><font color="#0000FF">()</font>
<font color="#000080"><i>    -- save_files() and/or IupConfigDialogClosed(config,dialog,"MainWindow"), etc.</i></font>
<font color="#008080">    return</font><font color="#004600"> IUP_CLOSE</font>
<font color="#008080">end function
constant</font><font color="#000000"> cb_quit</font><font color="#0000FF"> =</font><font color="#5E005E"> Icallback</font><font color="#0000FF">(</font><font color="#008000">"quit_cb"</font><font color="#0000FF">)
</font>
<font color="#5E005E">Ihandle</font><font color="#000000"> quit_btn</font><font color="#0000FF"> =</font><font color="#5E005E"> IupButton</font><font color="#0000FF">(</font><font color="#008000">"Quit"</font><font color="#0000FF">,</font><font color="#000000"> cb_quit</font><font color="#0000FF">)</font>
<font color="#000080"><i>--              or IupButton("Quit", Icallback("quit_cb")) [probably better if single use]</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="Ihandle.htm">Ihandle</a>,
          <a href="IupButton.htm">IupButton</a>,
          <a href="call_back.htm">call_back</a>,
          <a href="routine_id.htm">routine_id</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            There is in fact a secondary global function <b>Icallbacki</b>(<a href="integer.htm">integer</a> rid) that the compiler quietly 
            maps Icallback(<a href="integer.htm">integer</a> rid) to, rather than raising an argument type mismatch error. <br>
            That means that you can now code either Icallback("action_cb") or Icallback(action_cb), with the latter being automatically mapped 
            for you, otherwise they behave in an entirely identical fashion (since 0.8.2).<br>
            [Obviously the compiler will not flinch should you invoke Icallbacki() directly, or for that matter use routine_id("action_cb").]
            <br>
            <br>
            It does however coerce the interpreter into populating the symbol table with names (instead of ternary tree indexes), as explained 
            in the documentation for <a href="routine_id.htm#aux">get_routine_info</a>().
<!--
of which may make 
            startup a fraction of a second slower when interpreting, especially on larger programs - hopefully not quite enough for anyone to
            actually notice, but it&rsquo;s only right to properly document these things, even if there&rsquo;s not much you can do to stop it.
            Though hang on, I suppose if you cripple the setting/testing of N_Icallback[i] in pmain.e and force the team to use that version of 
            the compiler, then that would stop them accidentally triggering this. I could even make that a with/without setting, if there is
            ever a real need for it.
-->
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
