<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupCells</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupCells(<a href="string.htm">string</a> attributes="",
                                                            <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a grid widget (set of cells) that enables several application-specific drawing, such as: chess tables, tiles editors, degrade scales, drawable spreadsheets and so forth. 
            <br>
            <br>
            This element is mostly based on application callbacks that determine the number of cells (rows and columns), their appearance and interaction. <br>
            This mechanism offers full flexibility to applications, but requires careful attention to avoid infinite loops inside these functions. <br>
            Using callbacks, cells can be also grouped to form major or hierarchical elements, such as headers, footers etc. <br>
            This callback approach was intentionally chosen to allow all cells to be dynamically and directly changed based on an application&rsquo;s data structures. <br>
            Since the size of each cell is given by the application, the size of the control also must be given using SIZE or RASTERSIZE attributes.
            <br>
            <br>
            This is an additional control that depends on the CD library. It is included in the IupControls library. [DEV no longer so in version 3.24 and later]
            <br>
            <br>
            It inherits from <a href="IupCanvas.htm">IupCanvas</a>. Originally implemented by André Clinio.
            <br>
            <br>
            For more information on the attributes and args parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm#IupCells"><span class="illegal">Not supported</span></a><a href="notpgui.htm#IupCells"><span style="color:red;"><sup>x</sup></span></a>,
          see <a href="IupTable.htm">IupTable</a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupCanvas.htm">IupCanvas</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Utility Functions</b>
         </td>
         <td>

            The utility functions <a href="IupSetAttribute.htm#utility">IupSetAttributeId2</a>, <a href="IupGetAttribute.htm#utility">IupGetAttributeId2</a>, 
            <a href="IupGetAttribute.htm#utility">IupGetIntId2</a>, <a href="IupGetAttribute.htm#utility">IupGetFloatId2</a>, 
            <a href="IupSetStrAttribute.htm#utility">IupSetIntId2</a>, and <a href="IupSetStrAttribute.htm#utility">IupSetFloatId2</a>
            can also be used here. Note that the C function <span class="illegal">IupSetfAttributeId2</span> is not wrapped by pGUI, however that functionality is covered by the
            optional parameters of <a href="IupSetStrAttribute.htm#utility">IupSetStrAttributeId2</a>.
            <br>        
            <br>        
            For example:
            <br>
            <br><small>
<!--eucode>
IupSetAttribute(ih, "30:10", value)        => IupSetAttributeId2(ih, "", 30, 10, value)
IupSetAttribute(ih, "BGCOLOR30:10", value) => IupSetAttributeId2(ih, "BGCOLOR", 30, 10, value)
IupSetAttribute(ih, "ALIGNMENT10", value)  => IupSetAttributeId(ih, "ALIGNMENT", 10, value)
</eucode-->
<pre>
<font color="#5E005E">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "30:10"</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">)        =&gt;</font><font color="#5E005E"> IupSetAttributeId2</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> ""</font><font color="#0000FF">,</font><font color="#000000"> 30</font><font color="#0000FF">,</font><font color="#000000"> 10</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">)</font>
<font color="#5E005E">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "BGCOLOR30:10"</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">) =&gt;</font><font color="#5E005E"> IupSetAttributeId2</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "BGCOLOR"</font><font color="#0000FF">,</font><font color="#000000"> 30</font><font color="#0000FF">,</font><font color="#000000"> 10</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">)</font>
<font color="#5E005E">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "ALIGNMENT10"</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">)  =&gt;</font><font color="#5E005E"> IupSetAttributeId</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "ALIGNMENT"</font><font color="#0000FF">,</font><font color="#000000"> 10</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">)</font>
</pre>
            </small><br>
            When one of the indices is the asterisk, use IUP_INVALID_ID as the parameter. For example:
            <br>
            <br><small>
<!--eucode>
IupSetAttribute(ih, "BGCOLOR30:*", value) => IupSetAttributeId2(ih, "BGCOLOR", 30, IUP_INVALID_ID, value)
</eucode-->
<pre>
<font color="#5E005E">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "BGCOLOR30:*"</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">) =&gt;</font><font color="#5E005E"> IupSetAttributeId2</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "BGCOLOR"</font><font color="#0000FF">,</font><font color="#000000"> 30</font><font color="#0000FF">,</font><font color="#004600"> IUP_INVALID_ID</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">)</font>
</pre>
            </small><br>
            These functions are faster than the traditional functions because they do not need to parse the attribute name string 
            and the application does not need to concatenate the attribute name with the id.
         </td>
        </tr>

        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            
         </td>
        </tr>

        <tr>
         <td>
          BOXED
         </td>
         <td>
            Determines if the bounding cells&rsquo; regions should be drawn with black lines. <br>
            It can be "YES" or "NO". Default: "YES". <br>
            If the span attributes are used, set this attribute to "NO" to avoid grid drawing over spanned cells.
         </td>
        </tr>
        <tr>
         <td>
          BUFFERIZE
         </td>
         <td>
            Disables the automatic redrawing of the control, so many attributes can be changed without many redraws. <br>
            When set to "NO" the control is redrawn. When REPAINT attribute is set, BUFFERIZE is automatically set to "NO". Default: "NO". 
         </td>
        </tr>
        <tr>
         <td>
          CANVAS
         </td>
         <td>
            (read-only, non inheritable) Returns the internal IUP CD canvas. <br>
            This attribute should be used only in specific cases and by experienced CD programmers.
         </td>
        </tr>
        <tr>
         <td>
          CLIPPED
         </td>
         <td>
            Determines if, before cells drawing, each bounding region should be clipped. <br>
            This attribute should the changed in few specific cases.<br>
            It can be "YES" or "NO". Default: "YES".
         </td>
        </tr>
        <tr>
         <td>
          FIRST_COL
         </td>
         <td>
            (read-only, non inheritable) Returns the number of the first visible column. 
         </td>
        </tr>
        <tr>
         <td>
          FIRST_LINE
         </td>
         <td>
            (read-only, non inheritable) Returns the number of the first visible line. 
         </td>
        </tr>
        <tr>
         <td>
          FULL_VISIBLE
         </td>
         <td>
            (write-only, non inheritable) Tries to show completely a specific cell (considering any vertical or horizontal header or scrollbar position).<br>
            This attribute is set by a formatted string "%d:%d" (C syntax), where each "%d" represent the line and column integer indexes respectively.
         </td>
        </tr>
        <tr>
         <td>
          IMAGE_CANVAS
         </td>
         <td>
            (read-only, non inheritable) Returns the internal image CD canvas. <br>
            This attribute should be used only in specific cases and by experienced CD programmers.
         </td>
        </tr>
        <tr>
         <td>
          LIMITSL:C
         </td>
         <td>
            (read-only, non inheritable) Returns the limits of a given cell. <br>
            Input format is "lin:col" or "%d:%d" in C. Output format is "xmin:xmax:ymin:ymax" or "%d:%d:%d:%d" in C.
         </td>
        </tr>
        <tr>
         <td>
          NON_SCROLLABLE_LINES
         </td>
         <td>
            Determines the number of non-scrollable lines (vertical headers) that should always be visible despite the vertical scrollbar position. <br>
            It can be any non-negative integer value. Default: "0"
         </td>
        </tr>
        <tr>
         <td>
          NON_SCROLLABLE_COLS
         </td>
         <td>
            Determines the number of non-scrollable columns (horizontal headers) that should always be visible despite the horizontal scrollbar position. <br>
            It can be any non-negative integer value. Default: "0"
         </td>
        </tr>
        <tr>
         <td>
          ORIGIN
         </td>
         <td>
            Sets the first visible line and column positions. <br>
            This attribute is set by a formatted string "%d:%d" (C syntax), where each "%d" represent the line and column integer indexes respectively.
         </td>
        </tr>
        <tr>
         <td>
          REPAINT
         </td>
         <td>
            (write-only, non inheritable) When set with any value, provokes the control to be redrawn.
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#SIZE">SIZE</a>
         </td>
         <td>
            (non inheritable) there is no initial size. You must define <a href="common.htm#SIZE">SIZE</a> or <a href="common.htm#RASTERSIZE">RASTERSIZE</a>.
         </td>
        </tr>
        <tr>
         <td>
          SCROLLBAR
         </td>
         <td>
            (creation only) Default: "YES".
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>
            <a href="common.htm#BGCOLOR">BGCOLOR</a>
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#NAME">NAME</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>,
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>,
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
         </td>
        </tr>

        <tr>
         <td>
          DRAW_CB
         </td>
         <td>
            called when a specific cell needs to be redrawn.
            <br>
            <br>
            function draw_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> line, column, xmin, xmax, ymin, ymax, <a href="cdCanvas.htm">cdCanvas</a> canvas)<br>
            ih: identifier of the element that activated the event.<br>
            line, column: the grid position inside the control that is being redrawn, in grid coordinates.<br>
            xmin, xmax, ymin, ymax: the raster bounding box of the redrawn cells, where the application can use CD functions to draw anything. <br>
            If the attribute IUP_CLIPPED is set (the default), all CD graphical primitives is clipped to the bounding region.<br>
            canvas: internal canvas CD used to draw the cells.
         </td>
        </tr>
        <tr>
         <td>
          HEIGHT_CB
         </td>
         <td>
            called when the controls needs to know a (eventually new) line height.
            <br>
            <br>
            function height_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> line)<br>
            ih: identifier of the element that activated the event.<br>
            line: the line index
            <br>
            <br>
            Returns: an integer that specifies the desired height (in pixels). Default is 30 pixels.
         </td>
        </tr>
        <tr>
         <td>
          HSPAN_CB
         </td>
         <td>
            called when the control needs to know if a cell should be horizontally spanned.
            <br>
            <br>
            function hspan_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> line, column)<br>
            ih: identifier of the element that activated the event.<br>
            line, column: the line and column indexes (in grid coordinates)
            <br>
            <br>
            Returns: an integer that specifies the desired span. Default is 1 (no span).
         </td>
        </tr>
        <tr>
         <td>
          MOUSECLICK_CB
         </td>
         <td>
            called when a color is selected.<br>
            The primary color is selected with the left mouse button, and if existent the secondary is selected with the right mouse button.
            <br>
            <br>
            function mouseclick_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> button, pressed, line, column, x, y, <a href="atom.htm">atom</a> pSstatus)<br>
            Same as the <a href="callbacks.htm#BUTTON_CB">BUTTON_CB</a> <a href="IupCanvas.htm">IupCanvas</a> callback with two additional parameters:<br>
            line, column: the grid position in the control where the event has occurred, in grid coordinates.
         </td>
        </tr>
        <tr>
         <td>
          MOUSEMOTION_CB
         </td>
         <td>
            called when the mouse moves over the control.
            <br>
            <br>
            function mousemotion_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> line, column, x, y, <a href="atom.htm">atom</a> pStatus)<br>
            Same as the <a href="callbacks.htm#MOTION_CB">MOTION_CB</a> <a href="IupCanvas.htm">IupCanvas</a> callback with two additional parameters:<br>
            line, column: the grid position in the control where the event has occurred, in grid coordinates.
         </td>
        </tr>
        <tr>
         <td>
          NCOLS_CB
         </td>
         <td>
            called when then controls needs to know its number of columns.
            <br>
            <br>
            function ncols_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event.
            <br>
            <br>
            Returns: an integer that specifies the number of columns. Default is 10 columns.
         </td>
        </tr>
        <tr>
         <td>
          NLINES_CB
         </td>
         <td>
            called when then controls needs to know its number of lines.
            <br>
            <br>
            function nlines_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event.
            <br>
            <br>
            Returns: an integer that specifies the number of lines. Default is 10 lines.
         </td>
        </tr>
        <tr>
         <td>
          SCROLLING_CB
         </td>
         <td>
            called when the scrollbars are activated.
            <br>
            <br>
            function scrolling_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> line, column)<br>
            ih: identifier of the element that activated the event.<br>
            line, column: the first visible line and column indexes (in grid coordinates)
            <br>
            <br>
            Returns: If <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a> the cell is not redrawn. By default the cell is always redrawn.
         </td>
        </tr>
        <tr>
         <td>
          VSPAN_CB
         </td>
         <td>
            called when the control needs to know if a cell should be vertically spanned.
            <br>
            <br>
            function vspan_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> line, column)<br>
            ih: identifier of the element that activated the event.<br>
            line, column: the line and column indexes (in grid coordinates)
            <br>
            <br>
            Returns: an integer that specifies the desired span. Default is 1 (no span).
         </td>
        </tr>
        <tr>
         <td>
          WIDTH_CB
         </td>
         <td>
            called when the controls needs to know the column width
            <br>
            <br>
            function width_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> column)<br>
            ih: identifier of the element that activated the event.<br>
            column: the column index
            <br>
            <br>
            Returns: an integer that specifies the desired width (in pixels). Default is 60 pixels.
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#UNMAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>,
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>,
            <a href="callbacks.htm#K_ANY">K_ANY</a>,
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: common callbacks are supported.
         </td>
        </tr>

        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            <div class="wraptocenter">
             <span></span>
            <br>
            Checkerboard Pattern
            <br>
             <img src="images/iupcells_chess.jpg" />
            <br>
            Numbering Cells
            <br>
             <img src="images/iupcells_num.jpg" />
            </div>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
