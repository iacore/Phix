<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupConfig</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          <font face = "Arial, Helvetica">
            include pGUI.e
            <br>
            <br>
            Ihandle config = IupConfig()
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Initialise the configuration file handler.
            <br>
            <br>
            Returns a new database where the variables will be stored.

<!--DEV
Variables (master in IupConfigGetVariableStr)
=========
//void IupConfigSetVariableStr(Ihandle* ih, const char* group, const char* key, const char* value);
//void IupConfigSetVariableStrId(Ihandle* ih, const char* group, const char* key, int id, const char* value);
void IupConfigSetVariableInt(Ihandle* ih, const char* group, const char* key, int value);
void IupConfigSetVariableIntId(Ihandle* ih, const char* group, const char* key, int id, int value);
void IupConfigSetVariableDouble(Ihandle* ih, const char* group, const char* key, double value);
void IupConfigSetVariableDoubleId(Ihandle* ih, const char* group, const char* key, int id, double value);

//const char* IupConfigGetVariableStr(Ihandle* ih, const char* group, const char* key);
string res = IupConfigGetVariableStr(Ihandle ih, string group, string key)
const char* IupConfigGetVariableStrId(Ihandle* ih, const char* group, const char* key, int id);
int    IupConfigGetVariableInt(Ihandle* ih, const char* group, const char* key);
int    IupConfigGetVariableIntId(Ihandle* ih, const char* group, const char* key, int id);
double IupConfigGetVariableDouble(Ihandle* ih, const char* group, const char* key);
double IupConfigGetVariableDoubleId(Ihandle* ih, const char* group, const char* key, int id);

const char* IupConfigGetVariableStrDef(Ihandle* ih, const char* group, const char* key, const char* def);
const char* IupConfigGetVariableStrIdDef(Ihandle* ih, const char* group, const char* key, int id, const char* def);
int    IupConfigGetVariableIntDef(Ihandle* ih, const char* group, const char* key, int def);
//int    IupConfigGetVariableIntIdDef(Ihandle* ih, const char* group, const char* key, int id, int def);
double IupConfigGetVariableDoubleDef(Ihandle* ih, const char* group, const char* key, double def);
double IupConfigGetVariableDoubleIdDef(Ihandle* ih, const char* group, const char* key, int id, double def);

ih: Identifier of the configuration database<br>
group: group name of the variable<br>
key: key name of the variable<br>
id: used when the variable has a sequential number<br>
value: value of the variable<br>
def: default value of the variable
<br>
<br>
Returns: the variable value or NULL (or 0 for integer and double) if the variable is not set or does not exist. <br>
When the variable may not exist you can use the *Def functions to use a default value. 

These functions are very similar to the IupSetAttribute and IupGetAttribute functions. <br>
Internally the variables are stored as attributes using a "<GROUP>.<KEY>" combination, that's why group and key names can not have periods ".".


See Also
-->
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Notes</b>
         </td>
         <td>
            The IupConfigXXX routines are a group of functions to load, store and save application configuration variables. <br>
            For example, the list of Recent Files, the last position and size of a dialog, last used parameters in dialogs, etc.
            <br>
            <br>
            Each variable has a key name, a value and a group that it belongs to. <br>
            The file is based on a simple configuration file like ".ini" or ".cfg". <br>
            Each group can have more than one key, but all keys in the same group must have different names. <br>
            Group and Key names can NOT have a period ".". The file syntax is such as:
            <pre>
[Group]
Key=Value
Key=Value
            </pre>
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Guide</b>
         </td>
         <td>
            First create a new configuration database using the IupConfig constructor. <br>
            To destroy it use the IupDestroy function. <br>
            When the application starts call IupConfigLoad and <br>
            when the application closes, call IupConfigSave.
            <br>
            <br>
            Call IupConfigRecentInit once to initialize a recent files menu.<br>
            Call IupConfigRecentUpdate every time a file is open or saved, to keep the recent file menu updated.
            <br>
            <br>
            To retrieve settings use the IupConfigGetVariable* functions <br>
            and to save settings use the IupConfigSetVariable* functions.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Subsidiary functions</b>
         </td>
         <td>
          <table>
           <col style="width: 5%"/>
           <tr>
            <td valign=top>
             <a href="IupConfigLoad.htm">
              <b>IupConfigLoad</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Loads the configuration file.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigSave.htm">
              <b>IupConfigSave</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Saves the configuration file.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigRecentInit.htm">
              <b>IupConfigRecentInit</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Initialize a "Recent Files" menu for the application.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigRecentUpdate.htm">
              <b>IupConfigRecentUpdate</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Update the recent file menu.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigGetVariableIntDef.htm">
              <b>IupConfigGetVariableIntDef</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Like IupGetInt, but persistent.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigGetVariableStr.htm">
              <b>IupConfigGetVariableStr</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Like IupGetAttribute, but persistent.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigSetVariableInt.htm">
              <b>IupConfigSetVariableInt</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Like IupSetInt, but persistent.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigSetVariableStr.htm">
              <b>IupConfigSetVariableStr</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Like IupSetAttribute, but persistent.
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigDialogClosed.htm">
              <b>IupConfigDialogClosed</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Store the position and size of a dialog
            </td>
           </tr>
           <tr>
            <td valign=top>
             <a href="IupConfigDialogShow.htm">
              <b>IupConfigDialogShow</b>
             </a>
            </td>
            <td width=10 align=center valign=top>-</td>
            <td>Show a dialog using the previous position and size
            </td>
           </tr>
          </table>
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            APP_FILENAME, APP_NAME, APP_CONFIG, APP_PATH, FILENAME, RESIZE as above
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
Ihandle config = IupConfig();
IupSetAttribute(config, "APP_NAME", "MyAppName");
IupConfigLoad(config);
</eucode-->
<pre>
<font color="#000000"></font><font color="#5E005E">Ihandle</font><font color="#000000"> config</font><font color="#0000FF"> =</font><font color="#5E005E"> IupConfig</font><font color="#0000FF">();
</font><font color="#5E005E">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">config</font><font color="#0000FF">,</font><font color="#008000"> "APP_NAME"</font><font color="#0000FF">,</font><font color="#008000"> "MyAppName"</font><font color="#0000FF">);
</font><font color="#5E005E">IupConfigLoad</font><font color="#0000FF">(</font><font color="#000000">config</font><font color="#0000FF">);</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupDestroy.htm">IupDestroy</a>,
          <a href="IupSetAttribute.htm">IupSetAttribute</a>,
          <a href="IupGetAttribute.htm">IupGetAttribute</a>
         </td>
        </tr>
       </table>
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
