<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupConfigGetVariableInt</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            integer res = IupConfigGetVariableInt(Ihandle ih, string group, string key, integer def=0)
            <br>
            <i>-- or --</i>
            <br>
            integer res = IupConfigGetVariableIntId(Ihandle ih, string group, string key, integer id, integer def=0)
            <br>
            <i>-- or --</i>
            <br>
            atom res = IupConfigGetVariableDouble(Ihandle ih, string group, string key, atom def=0)
            <br>
            <i>-- or --</i>
            <br>
            atom res = IupConfigGetVariableDoubleId(Ihandle ih, string group, string key, integer id, atom def=0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            This function is similar to the IupGetInt function, but persistent and optionally with a default.
            <br>
            <br>
            ih: Identifier of the configuration database (see <a href="IupConfig.htm">IupConfig</a>)<br>
            group: group name of the variable<br>
            key: key name of the variable<br>
            id: used when the variable has a sequential number<br>
            def: default value of the variable
            <br>
            <br>
            The group and key names should be arbitrarily selected by the programmer to be meaningful and unique across the application,
            just as you would if you were writing out a .ini file by hand. For example "MainWindow", "Font" should result in a config
            file that contains, amongst other things, "[MainWindow]\nFont=Arial\n".
            <br>
            <br>
            Internally variables are stored as attributes using a "<GROUP>.<KEY>" combination, which is why group and key names cannot have periods ".".
            <br>
            <br>
            Returns: the variable value or the contents of def if the variable is not set or does not exist.
            <br>
                <a name=Def></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            The IupConfigGetVariableXxxx[Id]Def C functions can be replaced with the pGUI functions without the trailing "Def".
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
if IupConfigGetVariableInt(config, "MainWindow", "Toolbar", 1) then
    -- <show the toolbar>
end if
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">if</font><font color="#5E005E"> IupConfigGetVariableInt</font><font color="#0000FF">(</font><font color="#000000">config</font><font color="#0000FF">,</font><font color="#008000"> "MainWindow"</font><font color="#0000FF">,</font><font color="#008000"> "Toolbar"</font><font color="#0000FF">,</font><font color="#000000"> 1</font><font color="#0000FF">)</font><font color="#008080"> then
</font><font color="#000080"><i>    -- &lt;show the toolbar&gt;
</i></font><font color="#008080">end if</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupConfig.htm">IupConfig</a>,
          <a href="IupConfigLoad.htm">IupConfigLoad</a>,
          <a href="IupGetAttribute.htm">IupGetAttribute</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
