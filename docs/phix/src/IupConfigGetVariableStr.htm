<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupConfigGetVariableStr</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          <font face = "Arial, Helvetica">
            include pGUI.e
            <br>
            <br>
            string res = IupConfigGetVariableStr(Ihandle ih, string group, string key)
            <br>
            <i>-- or --</i>
            <br>
            string res = IupConfigGetVariableStrDef(Ihandle ih, string group, string key, string def)
            <br>
            <i>-- or --</i>
            <br>
            string res = IupConfigGetVariableStrId(Ihandle ih, string group, string key, integer id)
            <br>
            <i>-- or --</i>
            <br>
            string res = IupConfigGetVariableStrIdDef(Ihandle ih, string group, string key, integer id, string def)
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            This function is similar to the IupGetAttribute function, but persistent and optionally with a default.
            <br>
            <br>
            ih: Identifier of the configuration database (see <a href="IupConfig.htm">IupConfig</a>)<br>
            group: group name of the variable<br>
            key: key name of the variable<br>
            id: used when the variable has a sequential number<br>
            def: default value of the variable
            <br>
            <br>
            The group and key names should be arbitrarily selected by the programmer to be meaningful and unique across the application,
            just as you would if you were writing out a .ini file by hand. For example "MainWindow", "Font" should result in a config
            file that contains, amongst other things, "[MainWindow]\nFont=Arial\n".
            <br>
            <br>
            Internally variables are stored as attributes using a "<GROUP>.<KEY>" combination, which is why group and key names cannot have periods ".".
            <br>
            <br>
            Returns: the variable value or "" if the variable is not set or does not exist.
<!--DEV
Variables
=========
//void IupConfigSetVariableStr(Ihandle* ih, const char* group, const char* key, const char* value);
//void IupConfigSetVariableStrId(Ihandle* ih, const char* group, const char* key, int id, const char* value);
//void IupConfigSetVariableInt(Ihandle* ih, const char* group, const char* key, int value);
void IupConfigSetVariableIntId(Ihandle* ih, const char* group, const char* key, int id, int value);
void IupConfigSetVariableDouble(Ihandle* ih, const char* group, const char* key, double value);
void IupConfigSetVariableDoubleId(Ihandle* ih, const char* group, const char* key, int id, double value);

//const char* IupConfigGetVariableStr(Ihandle* ih, const char* group, const char* key);
const char* IupConfigGetVariableStrId(Ihandle* ih, const char* group, const char* key, int id);
int    IupConfigGetVariableInt(Ihandle* ih, const char* group, const char* key);
int    IupConfigGetVariableIntId(Ihandle* ih, const char* group, const char* key, int id);
double IupConfigGetVariableDouble(Ihandle* ih, const char* group, const char* key);
double IupConfigGetVariableDoubleId(Ihandle* ih, const char* group, const char* key, int id);

const char* IupConfigGetVariableStrDef(Ihandle* ih, const char* group, const char* key, const char* def);
const char* IupConfigGetVariableStrIdDef(Ihandle* ih, const char* group, const char* key, int id, const char* def);
//int    IupConfigGetVariableIntDef(Ihandle* ih, const char* group, const char* key, int def);
int    IupConfigGetVariableIntIdDef(Ihandle* ih, const char* group, const char* key, int id, int def);
double IupConfigGetVariableDoubleDef(Ihandle* ih, const char* group, const char* key, double def);
double IupConfigGetVariableDoubleIdDef(Ihandle* ih, const char* group, const char* key, int id, double def);

ih: Identifier of the configuration database<br>
group: group name of the variable<br>
key: key name of the variable<br>
id: used when the variable has a sequential number<br>
value: value of the variable<br>
def: default value of the variable
<br>
<br>
Returns: the variable value or NULL (or 0 for integer and double) if the variable is not set or does not exist. <br>
When the variable may not exist you can use the *Def functions to use a default value. 

These functions are very similar to the IupSetAttribute and IupGetAttribute functions. <br>
Internally the variables are stored as attributes using a "<GROUP>.<KEY>" combination, that's why group and key names can not have periods ".".
-->
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
Ihandle config = IupConfig();
IupSetAttribute(config, "APP_NAME", "MyAppName");
IupConfigLoad(config);
string font = IupConfigGetVariableStr(config, "MainWindow", "Font");
</eucode-->
<pre>
<font color="#000000"></font><font color="#5E005E">Ihandle</font><font color="#000000"> config</font><font color="#0000FF"> =</font><font color="#5E005E"> IupConfig</font><font color="#0000FF">();
</font><font color="#5E005E">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">config</font><font color="#0000FF">,</font><font color="#008000"> "APP_NAME"</font><font color="#0000FF">,</font><font color="#008000"> "MyAppName"</font><font color="#0000FF">);
</font><font color="#5E005E">IupConfigLoad</font><font color="#0000FF">(</font><font color="#000000">config</font><font color="#0000FF">);
</font><font color="#004080">string</font><font color="#000000"> font</font><font color="#0000FF"> =</font><font color="#5E005E"> IupConfigGetVariableStr</font><font color="#0000FF">(</font><font color="#000000">config</font><font color="#0000FF">,</font><font color="#008000"> "MainWindow"</font><font color="#0000FF">,</font><font color="#008000"> "Font"</font><font color="#0000FF">);</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupConfig.htm">IupConfig</a>,
          <a href="IupSetAttribute.htm">IupSetAttribute</a>,
          <a href="IupConfigLoad.htm">IupConfigLoad</a>,
          <a href="IupGetAttribute.htm">IupGetAttribute</a>
         </td>
        </tr>
       </table>
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
