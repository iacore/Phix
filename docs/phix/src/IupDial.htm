<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupDial</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
          <br>
          <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupDial(<a href="string.htm">nullable_string</a> orientation, 
                                                           <a href="string.htm">string</a> attributes="",
                                                           <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a dial for regulating a given angular variable.
          <br>
          <br>
            (Migrated from the IupControls library since IUP 3.24, it does not depend on the CD library anymore.)
          <br>
          <br>
            It inherits from <a href="IupCanvas.htm">IupCanvas</a>.
          <br>
          <br>
            orientation: optional dial orientation, can be NULL. See ORIENTATION attribute. <br>
            For more information on the attributes and args parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.
          <br>
          <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span></a>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupCanvas.htm">IupCanvas</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            When the keyboard arrows are pressed and released the mouse press and the mouse release callbacks are called in this order. <br>
            If you hold the key down the mouse move callback is also called for every repetition.
          <br>
          <br>
            When the wheel is rotated only the mouse move callback is called, and it increments the last angle the dial was rotated.
          <br>
          <br>
            In all cases the value is incremented or decremented by PI/10 (18 degrees).
          <br>
          <br>
            If you press Shift while using the arrow keys the increment is reduced to PI/100 (1.8 degrees). Press the Home key in the circular dial to reset to 0.
            <br>
            <br>
            An example can be seen in demo/pGUI/IupFlatSample.exw
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
         </td>
        </tr>
        <tr>
         <td>
          DENSITY
         </td>
         <td>
            number of lines per pixel in the handle of the dial. Default is "0.2".
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            the default is "NO".
         </td>
        </tr>
        <tr>
         <td>
          FLAT
         </td>
         <td>
            use a 1 pixel flat border instead of the default 3 pixels sunken border. Can be Yes or No. Default: No. (since 3.24)
         </td>
        </tr>
        <tr>
         <td>
          FLATCOLOR
         </td>
         <td>
            color of the border when FLAT=Yes. Default: "160 160 160". (since 3.24)
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#FGCOLOR">FGCOLOR</a>
         </td>
         <td>
            foreground color. The default value is "64 64 64". (appears in circular dial since 3.24)
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#SIZE">SIZE</a>
         </td>
         <td>
            (non inheritable) the initial size is "16x80", "80x16" or "40x35" according to the dial orientation. Set to NULL to allow the automatic layout use smaller values.
         </td>
        </tr>
        <tr>
         <td>
          ORIENTATION
         </td>
         <td>
            (creation only, non inheritable) dial layout configuration "VERTICAL", "HORIZONTAL" or "CIRCULAR". Default: "HORIZONTAL".
         </td>
        </tr>
        <tr>
         <td>
          UNIT
         </td>
         <td>
            unit of the angle. Can be "DEGREES" or "RADIANS". Default is "RADIANS". Used only in the callbacks.
         </td>
        </tr>
        <tr>
         <td>
          VALUE
         </td>
         <td>
            (non inheritable) The dial angular value in radians. <br>
            The value is reset to zero when the interaction is started, except for ORIENTATION=CIRCULAR. <br>
            When orientation is vertical or horizontal, the dial measures relative angles. <br>
            When orientation is circular the dial measure absolute angles, where the origin is at 3 O&rsquo;clock.
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>
            <a href="common.htm#BGCOLOR">BGCOLOR</a>
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#NAME">NAME</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>,
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>,
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted.
         </td>
        </tr>
        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
         </td>
        </tr>
        <tr>
         <td>
          BUTTON_PRESS_CB
         </td>
         <td>
            Called when the user presses the left mouse button over the dial. The angle here is always zero, except for the circular dial.
          <br>
          <br>
<!--
            function button_press_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> angle) <br>
-->
            function button_press_cb(<a href="Ihandle.htm">Ihandle</a> ih) <br>
            ih: identifier of the element that activated the event. <br>
<!--
            angle: the dial value converted according to UNIT.
-->
            <small><i>(atom angle removed in 1.0.2, instead use IupGetDouble(ih,"VALUE"), converting to degrees if required)</i></small>
        </td>
        </tr>
        <tr>
         <td>
          BUTTON_RELEASE_CB
         </td>
         <td>
            Called when the user releases the left mouse button after pressing it over the dial.
          <br>
          <br>
<!--
            function button_release_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> angle)<br>
-->
            function button_release_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event. <br>
<!--
            angle: the dial value converted according to UNIT.
-->
            <small><i>(atom angle removed in 1.0.2, instead use IupGetDouble(ih,"VALUE"), converting to degrees if required)</i></small>
         </td>
        </tr>
        <tr>
         <td>
          MOUSEMOVE_CB
         </td>
         <td>
            Called each time the user moves the dial with the mouse button pressed. The angle the dial rotated since it was initialized is passed as a parameter.
          <br>
          <br>
<!--
            function mousemove_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> angle) <br>
-->
            function mousemove_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event. <br>
<!--
            angle: the dial value converted according to UNIT.
-->
            <small><i>(atom angle removed in 1.0.2, instead use IupGetDouble(ih,"VALUE"), converting to degrees if required)</i></small>
         </td>
        </tr>
        <tr>
         <td>
          VALUECHANGED_CB
         </td>
         <td>
            Called after the value was interactively changed by the user. <br>
            It is called whenever a BUTTON_PRESS_CB, a BUTTON_RELEASE_CB or a MOUSEMOVE_CB would also be called, but if defined those callbacks will not be called.
          <br>
          <br>
            function value_changed_cb(<a href="Ihandle.htm">Ihandle</a> ih) <br>
            ih: identifier of the element that activated the event.
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#UNMAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>,
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>,
            <a href="callbacks.htm#K_ANY">K_ANY</a>,
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: common callbacks are supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
          <div class="wraptocenter">
           <img src="images/iupdial.gif" />
          </div>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
