<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupDropButton</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupDropButton(<a href="Ihandle.htm">Ihandln</a> child=NULL,
                                                                [[<a href="string.htm">nullable_string</a> action=NULL,] 
                                                                 <a href="Icallback.htm">cbfunc</a> func=NULL,] 
                                                                 <a href="string.htm">string</a> attributes="",
                                                                 <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates an interface element that is a button with a drop down arrow. <br>
            It can function as a button and as a dropdown. <br>
            Its visual presentation can contain a text and/or an image.
            <br>
            <br>
            When dropped displays a child inside a dialog with no decorations, so it can simulate the initial function of a dropdown list, 
            but it can display any layout of IUP elements inside the dropped dialog. <br>
            When the user click outside the dialog, it is automatically closed.
            <br>
            <br>
            It inherits from <a href="IupCanvas.htm">IupCanvas</a>.
            <br>
            <br>
            child: Identifier of an interface element to be displayed when the dropdown is activated. It can be NULL.<br>
            It is not a regular child of the dropbutton. It will be displayed inside a dialog with no decorations.
            For more information on the attributes and args parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.<br>
            This is a <a href="paranormal.htm">paranormalised function</a>.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span></a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupImage.htm">IupImage</a>,
          <a href="IupButton.htm">IupButton</a>,
          <a href="IupToggle.htm">IupToggle</a>,
          <a href="IupLabel.htm">IupLabel</a>,
          <a href="IupList.htm">IupList</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            The natural size will be a combination of the size of the image and the title, if any, plus PADDING and SPACING 
            (if both image and title are present), and plus the horizontal space occupied by the arrow.
            <br>
            <br>
            The drop dialog is configured with no decorations and it is not resizable, only the FOCUS_CB and K_ESC callbacks are set. <br>
            But this can be changed by the application. It is a regular <a href="IupDialog.htm">IupDialog</a>. <br>
            To obtain the drop button handle from the handle of the dialog get the "DROPBUTTON" attribute handle from the dialog, 
            using <a href="IupGetAttributeHandle.htm">IupGetAttributeHandle</a>(). <br>
            After performing some operation on the drop child, use SHOWDROPDOWN=NO on the drop button, you may also update its TITLE, 
            just like a regular <a href="IupList.htm">IupList</a> with DROPDOWN=Yes, but this will not be performed automatically by the drop button. <br>
            For example, set the ACTION callback on the IupList used as drop child:
            <br>
            <br>
<!--eucode>
function list_cb(Ihandle list, atom pText, integer item, state)
  if state == 1 then
    Ihandle ih = IupGetAttributeHandle(IupGetDialog(list), "DROPBUTTON")
    IupSetAttribute(ih, "SHOWDROPDOWN", "No")
    IupSetStrAttribute(ih, "TITLE", peek_string(text))
  end if
  return IUP_DEFAULT
end function
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">function</font><font color="#000000"> list_cb</font><font color="#0000FF">(</font><font color="#5E005E">Ihandle</font><font color="#000000"> list</font><font color="#0000FF">,</font><font color="#004080"> atom</font><font color="#000000"> pText</font><font color="#0000FF">,</font><font color="#004080"> integer</font><font color="#000000"> item</font><font color="#0000FF">,</font><font color="#000000"> state</font><font color="#0000FF">)
</font><font color="#008080">  if</font><font color="#000000"> state</font><font color="#0000FF"> ==</font><font color="#000000"> 1</font><font color="#008080"> then
</font><font color="#5E005E">    Ihandle</font><font color="#000000"> ih</font><font color="#0000FF"> =</font><font color="#5E005E"> IupGetAttributeHandle</font><font color="#0000FF">(</font><font color="#5E005E">IupGetDialog</font><font color="#800000">(</font><font color="#000000">list</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#008000"> "DROPBUTTON"</font><font color="#0000FF">)
</font><font color="#5E005E">    IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "SHOWDROPDOWN"</font><font color="#0000FF">,</font><font color="#008000"> "No"</font><font color="#0000FF">)
</font><font color="#5E005E">    IupSetStrAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "TITLE"</font><font color="#0000FF">,</font><font color="#5E005E"> peek_string</font><font color="#800000">(</font><font color="#000000">text</font><font color="#800000">)</font><font color="#0000FF">)
</font><font color="#008080">  end if
  return</font><font color="#004600"> IUP_DEFAULT
</font><font color="#008080">end function</font>
</pre>
            <br>
            Additionally to mimic an IupList with DROPDOWN=Yes set SHOWBORDER=Yes and DROPONARROW=NO on the drop button. <br>
            But notice that the natural size will not use the largest item in the drop child list, so you can use EXPAND=HORIZONTAL or 
            set VISIBLECOLUMNS, both on the drop button.
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            Inherits all attributes and callbacks of the <a href="IupCanvas.htm">IupCanvas</a>, but redefines a few attributes.
         </td>
        </tr>
        <tr>
         <td>
            ALIGNMENT
         </td>
         <td>
            (non inheritable) horizontal and vertical alignment of the set image+text. <br>
            Possible values: "ALEFT", "ACENTER" and "ARIGHT",  combined to "ATOP", "ACENTER" and "ABOTTOM". <br>
            Default: "ALEFT:ACENTER". <br>
            Partial values are also accepted, like "ARIGHT" or ":ATOP", the other value will be obtained from the default value. <br>
            Alignment does not includes the padding area.
         </td>
        </tr>
        <tr>
         <td>
            ARROWACTIVE
         </td>
         <td>
            (non inheritable) the arrow can be disabled when the button is enabled. <br>
            If there is no drop child the arrow will be automatically disabled.
         </td>
        </tr>
        <tr>
         <td>
            ARROWALIGN
         </td>
         <td>
            (non inheritable) vertical arrow alignment. <br>
            Can be: TOP, CENTER or BOTTOM. Default: CENTER. (since 3.27)
         </td>
        </tr>
        <tr>
         <td>
            ARROWCOLOR
         </td>
         <td>
            color used for the arrow. Default use <a href="common.htm#FGCOLOR">FGCOLOR</a>.
         </td>
        </tr>
        <tr>
         <td>
            ARROWIMAGES
         </td>
         <td>
            (non inheritable) replace the drawn arrows by the following images. <br>
            Make sure their sizes are equal or smaller than ARROWSIZE. Default: No.
         </td>
        </tr>
        <tr>
         <td>
            ARROWIMAGE
         </td>
         <td>
            (non inheritable) Arrow image name. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. <br>
            See also <a href="IupImage.htm">IupImage</a>. 
         </td>
        </tr>
        <tr>
         <td>
            ARROWIMAGEHIGHLIGHT
         </td>
         <td>
            (non inheritable) Arrow image name of the element in highlight state. <br>
            If it is not defined then the ARROWIMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            ARROWIMAGEINACTIVE
         </td>
         <td>
            (non inheritable) Arrow image name of the element when inactive. <br>
            If it is not defined then the ARROWIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.
         </td>
        </tr>
        <tr>
         <td>
            ARROWIMAGEPRESS
         </td>
         <td>
            (non inheritable) Arrow image name of the element in pressed state. <br>
            If it is not defined then the ARROWIMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            ARROWPADDING
         </td>
         <td>
            (non inheritable) internal margin for the arrow. It is inside ARROWSIZE. Default: 5.
         </td>
        </tr>
        <tr>
         <td>
            ARROWSIZE
         </td>
         <td>
            (non inheritable) size of the area occupied by the arrow, even when using images. Default: 24
         </td>
        </tr>
        <tr>
         <td>
            BACKIMAGE
         </td>
         <td>
            (non inheritable) image name to be used as background. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. <br>
            See also <a href="IupImage.htm">IupImage</a>. 
         </td>
        </tr>
        <tr>
         <td>
            BACKIMAGEHIGHLIGHT
         </td>
         <td>
            (non inheritable) background image name of the element in highlight state. If it is not defined then the BACKIMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            BACKIMAGEINACTIVE
         </td>
         <td>
            (non inheritable) background image name of the element when inactive. <br>
            If it is not defined then the BACKIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.
         </td>
        </tr>
        <tr>
         <td>
            BACKIMAGEPRESS
         </td>
         <td>
            (non inheritable) background image name of the element in pressed state. <br>
            If it is not defined then the BACKIMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            BACKIMAGEZOOM
         </td>
         <td>
            (non inheritable) if set the back image will be zoomed to occupy the full background. <br>
            Aspect ratio is NOT preserved. Can be Yes or No. Default: No. (since 3.25)
         </td>
        </tr>
        <tr>
         <td>
            <a href="common.htm#BGCOLOR">BGCOLOR</a>
         </td>
         <td>
            Background color. <br>
            If text and image are not defined, set the button size, otherwise the natural size will be very small. <br>
            If not defined it will use the background color of the native parent.
         </td>
        </tr>
        <tr>
         <td>
            HLCOLOR
         </td>
         <td>
            background color used to indicate a highlight state. <br>
            Pre-defined to "200 225 245". Can be set to NULL. If NULL BGCOLOR will be used instead.
         </td>
        </tr>
        <tr>
         <td>
            PSCOLOR
         </td>
         <td>
            background color used to indicate a press state. <br>
            Pre-defined to "150 200 235". Can be set to NULL. If NULL BGCOLOR will be used instead.
         </td>
        </tr>
        <tr>
         <td>
            BORDER
         </td>
         <td>
            (creation only) the default value is "NO". This is the <a href="IupCanvas.htm">IupCanvas</a> border.
         </td>
        </tr>
        <tr>
         <td>
            BORDERCOLOR
         </td>
         <td>
            color used for borders. Default: "50 150 255". This is for the IupDropButton drawn border.
         </td>
        </tr>
        <tr>
         <td>
            BORDERPSCOLOR
         </td>
         <td>
            color used for borders when pressed or selected. Default use BORDERCOLOR.
         </td>
        </tr>
        <tr>
         <td>
            BORDERHLCOLOR
         </td>
         <td>
            color used for borders when highlighted. Default use BORDERCOLOR.
         </td>
        </tr>
        <tr>
         <td>
            BORDERWIDTH
         </td>
         <td>
            line width used for borders. Default: "1". Any borders can be hidden by simply setting this value to 0. <br>
            This is for the IupDropButton drawn border.
         </td>
        </tr>
        <tr>
         <td>
            SHOWBORDER
         </td>
         <td>
            by default borders are drawn only when the button is highlighted, if SHOWBORDER=Yes borders are always show. <br>
            When SHOWBORDER=Yes and BGCOLOR is not defined, the actual BGCOLOR will be a darker version of the background color of the native parent.
         </td>
        </tr>
        <tr>
         <td>
            CANFOCUS
         </td>
         <td>
            (creation only) (non inheritable) enables the focus traversal of the control. <br>
            In Windows the button will respect CANFOCUS in opposite to the other controls. Default: YES.
         </td>
        </tr>
        <tr>
         <td>
            FOCUSFEEDBACK
         </td>
         <td>
            (non inheritable) draw the focus feedback. Can be Yes or No. Default: Yes. (since 3.26)
         </td>
        </tr>
        <tr>
         <td>
            DROPCHILD
         </td>
         <td>
            the name of the element that will be displayed when dropped. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. <br>
            See also <a href="IupImage.htm">IupImage</a>. <br>
            The drop dialog, were the drop child is inserted, is available right after setting the attribute using 
            IupGetDialog on the drop child handle. See the Notes above for more information.
         </td>
        </tr>
        <tr>
         <td>
            DROPCHILD_HANDLE
         </td>
         <td>
            same as DROPCHILD but directly using the Ihandle of the element.
         </td>
        </tr>
        <tr>
         <td>
            DROPONARROW
         </td>
         <td>
            (non inheritable) when enabled only clicking on the drop arrow will show the drop child. <br>
            Clicking on the remaining of the button will call FLAT_ACTION. <br>
            There will be two separates areas in the button, one for the drop arrow and one for the regular button. <br>
            When disabled there will be only one area, and the drop child will be show any where the button is clicked, 
            the callback FLAT_ACTION will not be called. <br>
            Default: Yes.
         </td>
        </tr>
        <tr>
         <td>
            DROPPOSITION
         </td>
         <td>
            (non inheritable) the drop child can be shown in four different positions relative to the drop button: <wbr>
            BOTTOMLEFT, <wbr>TOPLEFT, <wbr>BOTTOMRIGHT, <wbr>TOPRIGHT. <br>
            BOTTOMLEFT the top-left corner of the drop child is aligned with the bottom-left corner of the drop button, <br>
            BOTTOMRIGHT the top-right corner of the drop child is aligned with the bottom-right corner of the drop button, <br>
            TOPLEFT the bottom-left corner of the drop child is aligned with the top-left corner of the drop button, <br>
            TOPRIGHT the bottom-right corner of the drop child is aligned with the top-right corner of the drop button. <br>
            Default: BOTTOMLEFT.
         </td>
        </tr>
        <tr>
         <td>
            PROPAGATEFOCUS
         </td>
         <td>
            (non inheritable) enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO.
         </td>
        </tr>
        <tr>
         <td>
            <a href="common.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            (non inheritable) The default value is "NO". 
         </td>
        </tr>
        <tr>
         <td>
            <a href="common.htm#FGCOLOR">FGCOLOR</a>
         </td>
         <td>
            Text color. Default: the global attribute <a href="iupgattr.htm#DLGFGCOLOR">DLGFGCOLOR</a>.
         </td>
        </tr>
        <tr>
         <td>
            TEXTHLCOLOR
         </td>
         <td>
            text color used to indicate a highlight state. If not defined <a href="common.htm#FGCOLOR">FGCOLOR</a> will be used instead. (since 3.26)
         </td>
        </tr>
        <tr>
         <td>
            TEXTPSCOLOR
         </td>
         <td>
            text color used to indicate a press state. If not defined <a href="common.htm#FGCOLOR">FGCOLOR</a> will be used instead. (since 3.26)
         </td>
        </tr>
        <tr>
         <td>
            FITTOBACKIMAGE
         </td>
         <td>
            (non inheritable) enable the natural size to be computed from the BACKIMAGE. <br>
            If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.
         </td>
        </tr>
        <tr>
         <td>
            FRONTIMAGE
         </td>
         <td>
            (non inheritable) image name to be used as foreground. <br>
            The foreground image is drawn in the same position as the background, but it is drawn at last. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. <br>
            See also <a href="IupImage.htm">IupImage</a>. 
         </td>
        </tr>
        <tr>
         <td>
            FRONTIMAGEHIGHLIGHT
         </td>
         <td>
            (non inheritable) foreground image name of the element in highlight state. <br>
            If it is not defined then the FRONTIMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            FRONTIMAGEINACTIVE
         </td>
         <td>
            (non inheritable) foreground image name of the element when inactive. <br>
            If it is not defined then the FRONTIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.
         </td>
        </tr>
        <tr>
         <td>
            FRONTIMAGEPRESS
         </td>
         <td>
            (non inheritable) foreground image name of the element in pressed state. <br>
            If it is not defined then the FRONTIMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            HASFOCUS
         </td>
         <td>
            (read-only) returns the button state if has focus. Can be Yes or No.
         </td>
        </tr>
        <tr>
         <td>
            HIGHLIGHTED
         </td>
         <td>
            (read-only) returns the button state if highlighted. Can be Yes or No.
         </td>
        </tr>
        <tr>
         <td>
            IMAGE
         </td>
         <td>
            (non inheritable) Image name. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. <br>
            See also <a href="IupImage.htm">IupImage</a>. 
         </td>
        </tr>
        <tr>
         <td>
            IMAGEHIGHLIGHT
         </td>
         <td>
            (non inheritable) Image name of the element in highlight state. If it is not defined then the IMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEINACTIVE
         </td>
         <td>
            (non inheritable) Image name of the element when inactive. <br>
            If it is not defined then the IMAGE is used and its colors will be replaced by a modified version creating the disabled effect.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEPRESS
         </td>
         <td>
            (non inheritable) Image name of the element in pressed state. If it is not defined then the IMAGE is used.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEPOSITION
         </td>
         <td>
            (non inheritable) Position of the image relative to the text when both are displayed. <br>
            Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.
         </td>
        </tr>
        <tr>
         <td>
            PADDING
         </td>
         <td>
            internal margin. Works just like the MARGIN attribute of the <a href="IupHbox.htm">IupHbox</a> and 
            <a href="IupVbox.htm">IupVbox</a> containers, but uses a different name to 
            avoid inheritance problems. <br>
            Alignment does not includes the padding area. <br>
            Default value: "3x3". <br>
            Value can be DEFAULTBUTTONPADDING, so the global attribute of this name will be used instead (since 3.29).
         </td>
        </tr>
        <tr>
         <td>
            CPADDING
         </td>
         <td>
            same as PADDING but using the units of the SIZE attribute. <br>
            It will actually set the PADDING attribute. (since 3.29)
         </td>
        </tr>
        <tr>
         <td>
            PRESSED
         </td>
         <td>
            (read-only) returns the button state if pressed. Can be Yes or No.
         </td>
        </tr>
        <tr>
         <td>
            SHOWDROPDOWN
         </td>
         <td>
            (write-only) opens or closes the dropdown child. Can be "YES" or "NO". Ignored if set before map.
         </td>
        </tr>
        <tr>
         <td>
            SPACING
         </td>
         <td>
            (non inheritable) spacing between the image and the text. Default: "2".
         </td>
        </tr>
        <tr>
         <td>
            CSPACING
         </td>
         <td>
            same as SPACING but using the units of the vertical part of the SIZE attribute. <br>
            It will actually set the SPACING attribute. (since 3.29)
         </td>
        </tr>
        <tr>
         <td>
            <a href="common.htm#TITLE">TITLE</a>
         </td>
         <td>
            (non inheritable) Label&rsquo;s text. The '\n' character is accepted for line change.
         </td>
        </tr>
        <tr>
         <td>
            TEXTALIGNMENT
         </td>
         <td>
            (non inheritable) Horizontal text alignment for multiple lines. Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT.
         </td>
        </tr>
        <tr>
         <td>
            TEXTWRAP
         </td>
         <td>
            (non inheritable) For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. <br>
            Notice that this is done internally by the system, the element natural size will still use only a single line. <br>
            For the remaining lines to be visible the element should use EXPAND=VERTICAL or set a SIZE/RASTERSIZE with enough height for 
            the wrapped lines. (since 3.25)
         </td>
        </tr>
        <tr>
         <td>
            TEXTELLIPSIS
         </td>
         <td>
            (non inheritable) If the text is larger that its box, an ellipsis ("...") will be placed near the last visible part of the text and 
            replace the invisible part. It will be ignored when TEXTWRAP=Yes. (since 3.25)
         </td>
        </tr>
        <tr>
         <td>
            TEXTORIENTATION
         </td>
         <td>
            (non inheritable) text angle in degrees and counterclockwise. The text size will adapt to include the rotated space. (since 3.25)
         </td>
        </tr>
        <tr>
         <td>
            VISIBLECOLUMNS
         </td>
         <td>
            Defines the number of visible columns for the Natural Size, this means that will act also as minimum number of visible columns. <br>
            It uses a wider character size then the one used for the SIZE attribute so strings will fit better without the need of extra columns. <br>
            Padding will be around the visible columns.
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>, 
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#EXPAND">EXPAND</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#SIZE">SIZE</a>,
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#THEME">THEME</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
            Inherits all callbacks of the <a href="IupCanvas.htm">IupCanvas</a>, but redefines a few of them. <br>
            Including <a href="IupCanvas.htm#ACTION">ACTION</a>, <a href="callbacks.htm#BUTTON_CB">BUTTON_CB</a>, 
            <a href="callbacks.htm#MOTION_CB">MOTION_CB</a>, <a href="callbacks.htm#FOCUS_CB">FOCUS_CB</a>, 
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, and <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>. <br>
            To allow the application to use those callbacks the same callbacks are exported with the "FLAT_" prefix using the same parameters, 
            except the FLAT_ACTION callback that now mimics the <a href="IupButton.htm">IupButton</a> ACTION. <br>
            They are all called before the internal callbacks and if they return <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a>
            the internal callbacks are not processed.
         </td>
        </tr>
        <tr>
         <td>
          FLAT_ACTION
         </td>
         <td>
            Action generated when the button 1 (usually left) is selected. <br>
            This callback is called only after the mouse is released and when it is released inside the button area.<br>
            Called only when DROPONARROW=Yes.
            <br>
            <br>
            function flat_action_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event.
            <br>
            <br>
            Returns: <a href="callbacks.htm#IUP_CLOSE">IUP_CLOSE</a> will be processed.
         </td>
        </tr>
        <tr>
         <td>
          DROPDOWN_CB
         </td>
         <td>
            Action generated right before the drop child is shown or hidden. <br>
            This callback is also called when SHOWDROPDOWN is set.
            <br>
            <br>
            function dropdown_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> state)<br>
            ih: identifier of the element that activated the event.<br>
            state: the new state of the drop child 1=to be shown, 0=to be hidden.
         </td>
        </tr>
        <tr>
         <td>
          DROPSHOW_CB
         </td>
         <td>
            Action generated right after the drop child is shown or hidden. <br>
            This callback is also called when SHOWDROPDOWN is set.
            <br>
            <br>
            function dropshow_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> state)<br>
            ih: identifier of the element that activated the event.<br>
            state: the current state of the drop child 1=shown, 0=hidden.
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#UNMAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
            <a href="callbacks.htm#K_ANY">K_ANY</a>, 
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: All common callbacks are supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            The following image was taken from demo/pGUI/IupDropButton.exw
            <br>
            <br>
            <img src="images/iupdropbutton.png"/>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
