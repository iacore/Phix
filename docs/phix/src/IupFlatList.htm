<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupFlatList</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupFlatList(<a href="string.htm">string</a> attributes="",
                                                               <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates an interface element that displays a list of items, but it does not have native decorations.
            <br>
            <br>
            It behaves like <a href="IupList.htm">IupList</a> when DROPDOWN=NO and EDITBOX=NO.
            <br>
            <br>
            It inherits from <a href="IupCanvas.htm">IupCanvas</a>.
            <br>
            <br>
            For more information on the attributes and args parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Aliased to <a href="IupList.htm">IupList</a>.<br>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupList.htm">IupList</a>,
          <a href="IupCanvas.htm">IupCanvas</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            When the list has focus use the arrow keys to move focus from one item to another. <br>
            If the list has multiple selection pressing shift and the arrow will select a range of items. <br>
            Pressing a letter will select and scroll the list to the next element which title starts with that letter. <br>
            Pressing PgDn or PgUp the list is scrolled but the selection is not changed.
            <br>
            <br>
            When adding or removing items the selection can be changed depending on the operation but the selection callbacks will not be called.
            <br>
            <br>
            Clicking and dragging a item: if SHOWDRAGDROP=Yes starts a drag. When mouse is released, the DRAGDROP_CB callback is called. <br>
            If the callback does not exist or if it returns <a href="callbacks.htm#IUP_CONTINUE">IUP_CONTINUE</a> then the item is moved to the new position. <br>
            If Ctrl is pressed then the node is copied instead of moved. Drag is performed with the left mouse button.
            <br>
            <br>
            All list items occupy the same vertical size, which is the largest height computed from the combination of text and image for each item individually.
            <br>
            <br>
            The IupFlatSeparator is used internally in <a href="IupSplit.htm">IupSplit</a> (since 3.25) and in 
            <a href="IupSbox.htm">IupSbox</a> (since 3.27).
            <br>
            <br>
            Some examples can be seen in demo/pGUI/IupFlatSample.exw
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            Inherits all attributes and callbacks of the <a href="IupCanvas.htm">IupCanvas</a>, but redefines a few attributes.
         </td>
        </tr>

        <tr>
         <td>
          "1","2"
         </td>
         <td>
            Title of the first, second item in the list, etc.<br>
            (non inheritable) The values can be any text. Items before "1" are ignored. <br>
            Differently from <a href="IupList.htm">IupList</a> the behavior before map and after map are the same.
            <br>
            <br>
            if "1" is set to NULL, all items are removed.<br>
            if "id" is set to NULL, all items after id are removed.<br>
            if "id" is between the first and the last item, the current idth item title is replaced.<br>
            if "count+n" is set then empty items are inserted from count up to the given id. (different from IupList)<br>
         </td>
        </tr>
        <tr>
         <td>
          APPENDITEM
         </td>
         <td>
            (write-only) inserts an item after the last item. Ignored if set before map.
         </td>
        </tr>
        <tr>
         <td>
          ALIGNMENT
         </td>
         <td>
            (non inheritable) horizontal and vertical alignment of the set image+text for each item. <br>
            Possible values: "ALEFT", "ACENTER" and "ARIGHT",  combined to "ATOP", "ACENTER" and "ABOTTOM". <br>
            Default: "ALEFT:ACENTER". <br>
            Partial values are also accepted, like "ARIGHT" or ":ATOP", the other value will be obtained from the default value. <br>
            Alignment does not includes the padding area.
         </td>
        </tr>
        <tr>
         <td>
          BACKIMAGE
         </td>
         <td>
            (non inheritable) image name to be used as background. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. <br>
            See also <a href="IupImage.htm">IupImage</a>. 
         </td>
        </tr>
        <tr>
         <td>
          BACKIMAGEZOOM
         </td>
         <td>
            (non inheritable) if set the back image will be zoomed to occupy the full background. <br>
            Aspect ratio is NOT preserved. Can be Yes or No. Default: No.
         </td>
        </tr>
        <tr>
         <td>
          BGCOLOR
         </td>
         <td>
            Background color of the text. Default: the global attribute TXTBGCOLOR.
         </td>
        </tr>
        <tr>
         <td>
          BORDER
         </td>
         <td>
            (creation only) the default value is "NO". This is the IupCanvas border. It is displayed around the scrollbars.
         </td>
        </tr>
        <tr>
         <td>
          BORDERCOLOR
         </td>
         <td>
            color used for the internal border. Default: "50 150 255". This is for the internal border.
         </td>
        </tr>
        <tr>
         <td>
          BORDERWIDTH
         </td>
         <td>
            line width used for the internal border. Default: "0". <br>
            The internal borders are hidden by simply setting this value to 0. <br>
            It is drawn inside the canvas, so inside the scrollbars.
         </td>
        </tr>
        <tr>
         <td>
          COUNT
         </td>
         <td>
            (read-only) (non inheritable) returns the number of items.
         </td>
        </tr>
        <tr>
         <td>
          DRAGDROPLIST
         </td>
         <td>
            (non inheritable) prepare the Drag & Drop callbacks to support drag and drop of items between lists (IupList or IupFlatList), 
            in the same IUP application. <br>
            Drag & Drop attributes still need to be set in order to activate the drag & drop support, so the application can control if 
            this list will be source and/or target. Default: NO.
         </td>
        </tr>
        <tr>
         <td>
          DROPFILESTARGET
         </td>
         <td>
            (non inheritable) Enable or disable the drop of files. <br>
            Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled.
         </td>
        </tr>
        <tr>
         <td>
          FGCOLOR
         </td>
         <td>
            Text color. Default: the global attribute TXTFGCOLOR.
         </td>
        </tr>
        <tr>
         <td>
          FOCUSFEEDBACK
         </td>
         <td>
            (non inheritable) draw the focus feedback. Can be Yes or No. Default: Yes.
         </td>
        </tr>
        <tr>
         <td>
          PROPAGATEFOCUS
         </td>
         <td>
            (non inheritable) enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO.
         </td>
        </tr>
        <tr>
         <td>
          FITTOBACKIMAGE
         </td>
         <td>
            (non inheritable) enable the natural size to be computed from the BACKIMAGE. <br>
            If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.
         </td>
        </tr>
        <tr>
         <td>
          HASFOCUS
         </td>
         <td>
            (read-only) returns the button state if has focus. Can be Yes or No.
         </td>
        </tr>
        <tr>
         <td>
          IMAGEid
         </td>
         <td>
            (non inheritable) image name to be used in the specified item, where id is the specified item starting at 1. <br>
            The item must already exist. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. <br>
            See also <a href="IupImage.htm">IupImage</a>. <br>
            Images don't need to have the same size.
         </td>
        </tr>
        <tr>
         <td>
          IMAGEPOSITION
         </td>
         <td>
            (non inheritable) Position of the image relative to the text when both are displayed. <br>
            Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.
         </td>
        </tr>
        <tr>
         <td>
          PADDING<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            internal margin of each item. <br>
            Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. <br>
            Alignment does not includes the padding area. Default value: "2x2".
         </td>
        </tr>
        <tr>
         <td>
          CPADDING
         </td>
         <td>
            same as PADDING but using the units of the SIZE attribute. <br>
            It will actually set the PADDING attribute. (since 3.29)
         </td>
        </tr>
        <tr>
         <td>
          ITEMFGCOLORid
         </td>
         <td>
            foreground color of the item at the given id. id starts at 1. If not defined FGCOLOR is used.
         </td>
        </tr>
        <tr>
         <td>
          ITEMBGCOLORid
         </td>
         <td>
            background color of the item at the given id. id starts at 1. If not defined BGCOLOR is used.
         </td>
        </tr>
        <tr>
         <td>
          ITEMTIPid
         </td>
         <td>
            tip of the item at the given id. If defined will be shown instead of the TIP attribute. (since 3.29)
         </td>
        </tr>
        <tr>
         <td>
          ITEMFONTid
         </td>
         <td>
            text font of the tab. If not defined FONT is used.
         </td>
        </tr>
        <tr>
         <td>
          ITEMFONTSTYLEid
         </td>
         <td>
            text font style. When changed will actually set ITEMFONTid.
         </td>
        </tr>
        <tr>
         <td>
          ITEMFONTSIZEid
         </td>
         <td>
            text font size. When changed will actually set ITEMFONTid.
         </td>
        </tr>
        <tr>
         <td>
          ICONSPACING
         </td>
         <td>
            (non inheritable) spacing between the image and the text. Default: "2".
         </td>
        </tr>
        <tr>
         <td>
          HLCOLOR
         </td>
         <td>
            color of a filled box drawn over the selected item. Default: "TXTHLCOLOR".
         </td>
        </tr>
        <tr>
         <td>
          HLCOLORALPHA
         </td>
         <td>
            the transparency used to draw the selection. Default: 128. If set to 0 the selection box is not drawn.
         </td>
        </tr>
        <tr>
         <td>
          PSCOLOR
         </td>
         <td>
            background color of a selected item. If not defined BACKCOLORid will be used. (since 3.30)
         </td>
        </tr>
        <tr>
         <td>
          TEXTPSCOLOR
         </td>
         <td>
            foreground color of a selected item. If not defined FORECOLORid will be used. (since 3.30)
         </td>
        </tr>
        <tr>
         <td>
          INSERTITEMid
         </td>
         <td>
            (write-only) inserts an item before the given id position. id starts at 1. <br>
            If id=COUNT+1 then it will append after the last item. Ignored if out of bounds. <br>
            Different from <a href="IupList.htm">IupList</a>, can be set before map.
         </td>
        </tr>
        <tr>
         <td>
          MULTIPLE
         </td>
         <td>
            (creation only) Allows selecting several items simultaneously (multiple list). Default: "NO".
         </td>
        </tr>
        <tr>
         <td>
          REMOVEITEM
         </td>
         <td>
            (write-only) removes the given value. value starts at 1. <br>
            If value is NULL or "ALL" removes all the items. <br>
            Different from <a href="IupList.htm">IupList</a>, can be set before map.
         </td>
        </tr>
        <tr>
         <td>
          SCROLLBAR
         </td>
         <td>
            (read-only) is always "NO". So the IupCanvas native scrollbars are hidden. <br>
            See the FLATSCROLLBAR attribute bellow. YAUTOHIDE and XAUTOHIDE will be always Yes.
         </td>
        </tr>
        <tr>
         <td>
          FLATSCROLLBAR
         </td>
         <td>
            Can be Yes, Vertical or Horizontal. Can be set only before map. Default: Yes.
         </td>
        </tr>
        <tr>
         <td>
          SHOWDRAGDROP
         </td>
         <td>
            (creation only, non inheritable) enables the internal drag and drop of items in the same list, and 
            enables the DRAGDROP_CB callback. <br>
            Default: "NO". Works only if MULTIPLE=NO. Drag & Drop attributes are NOT used.
         </td>
        </tr>
        <tr>
         <td>
          SIZE
         </td>
         <td>
            Size of the list. <br>
            The Natural Size is defined by the number of elements in the list and the with of the largest item, 
            the default has room for 5 characters in 1 item. <br>
            The Natural Size ignores the list contents if VISIBLECOLUMNS or VISIBLELINES attributes are defined.
         </td>
        </tr>
        <tr>
         <td>
          SPACING
         </td>
         <td>
            internal space between each item. <br>
            Different from <a href="IupList.htm">IupList</a>, it does not affects the internal margin. <br>
            Not drawn with any item background color. Default: 0
         </td>
        </tr>
        <tr>
         <td>
          CSPACING
         </td>
         <td>
            same as SPACING but using the units of the vertical part of the SIZE attribute. <br>
            It will actually set the SPACING attribute. (since 3.29)
         </td>
        </tr>
        <tr>
         <td>
          TOPITEM
         </td>
         <td>
            (write-only) position the given item at the top of the list or near to make it visible.
         </td>
        </tr>
        <tr>
         <td>
          TEXTALIGNMENT
         </td>
         <td>
            (non inheritable) Horizontal text alignment for multiple lines. <br>
            Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT.
         </td>
        </tr>
        <tr>
         <td>
          TEXTWRAP
         </td>
         <td>
            (non inheritable) For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. <br>
            Notice that this is done internally by the system, the element natural size will still use only a single line. <br>
            For the remaining lines to be visible the element should use <a href="common.htm#EXPAND">EXPAND</a>=VERTICAL or set a SIZE/RASTERSIZE 
            with enough height for the wrapped lines.
         </td>
        </tr>
        <tr>
         <td>
          TEXTELLIPSIS
         </td>
         <td>
            (non inheritable) If the text is larger that its box, an ellipsis ("...") will be placed near the last visible part of the text and 
            replace the invisible part. It will be ignored when TEXTWRAP=Yes.
         </td>
        </tr>
        <tr>
         <td>
          VALUE
         </td>
         <td>
            (non inheritable) Depends on the selection mode:
            <br>
            <br>
            MULTIPLE=YES: Sequence of '+' and '-' symbols indicating the state of each item. <br>
            When setting this value, the user must provide the same amount of '+' and '-' symbols as the amount of items in the list. <br>
            It can use ' ' (space) or another character so the current selection on that item will remain the same (since 3.28).<br>
            MULTIPLE=NO: Integer number representing the selected item in the list (begins at 1). It returns NULL if there is no selected item.<br>
            For both cases, when setting NULL all items are deselected.<br>
         </td>
        </tr>
        <tr>
         <td>
          VALUESTRING
         </td>
         <td>
            (non inheritable) changes or retrieves the value attribute using a string of an item. <br>
            Works only when MULTIPLE=NO. When set it will search for the first item with the same string.
         </td>
        </tr>
        <tr>
         <td>
          VISIBLECOLUMNS
         </td>
         <td>
            Defines the number of visible columns for the Natural Size, this means that will act also as minimum number of visible columns. <br>
            It uses a wider character size then the one used for the SIZE attribute so strings will fit better without the need of extra columns. <br>
            Set this attribute to speed Natural Size computation for very large lists.
         </td>
        </tr>
        <tr>
         <td>
          VISIBLELINES
         </td>
         <td>
            Defines the number of visible lines for the Natural Size, this means that will act also as minimum number of visible lines.
         </td>
        </tr>

        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
            Inherits all callbacks of the <a href="IupCanvas.htm">IupCanvas</a>, but redefines a few of them. <br>
            Including <a href="IupCanvas.htm#ACTION">ACTION</a>, <a href="callbacks.htm#BUTTON_CB">BUTTON_CB</a>, 
            <a href="callbacks.htm#MOTION_CB">MOTION_CB</a>, <a href="callbacks.htm#FOCUS_CB">FOCUS_CB</a>, and
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>. <br>
            To allow the application to use those callbacks the same callbacks are exported with the "FLAT_" prefix using the same parameters, 
            except the FLAT_ACTION callback that now mimics the <a href="IupList.htm">IupList</a> ACTION. <br>
            They are all called before the internal callbacks and if they return <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a>
            the internal callbacks are not processed.
         </td>
        </tr>
        <tr>
         <td>
          FLAT_ACTION
         </td>
         <td>
            Action generated when the state of an item in the list is interactively changed.
            <br>
            <br>
            function flat_action_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> pText, <a href="integer.htm">integer</a> item, state)<br>
            ih: identifier of the element that activated the event.<br>
            pText: (char*) Text of the changed item.<br>
            item: Number of the changed item starting at 1.<br>
            state: Equal to 1 if the option was selected or to 0 if the option was deselected.
         </td>
        </tr>
        <tr>
         <td>
          DBLCLICK_CB
         </td>
         <td>
            Action generated when the user double click an item.
            <br>
            <br>
            function dblclick_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> item, <a href="atom.htm">atom</a> pText)<br>
            ih: identifier of the element that activated the event.<br>
            item: Number of the selected item starting at 1.<br>
            pText: (char*) Text of the selected item.
         </td>
        </tr>
        <tr>
         <td>
          DRAGDROP_CB
         </td>
         <td>
            Action generated when an internal drag and drop is executed. Only active if SHOWDRAGDROP=YES.
            <br>
            <br>
            function dragdrop_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> drag_id, drop_id, isshift, iscontrol)<br>
            ih: identifier of the element that activated the event.<br>
            drag_id: Identifier of the clicked item where the drag start.<br>
            drop_id: Identifier of the clicked item where the drop were executed. -1 indicates a drop in a blank area.<br>
            isshift: flag indicating the shift key state.<br>
            iscontrol: flag indicating the control key state.
            <br>
            <br>
            Returns: if returns <a href="callbacks.htm#IUP_CONTINUE">IUP_CONTINUE</a>, or if the callback is not defined and SHOWDRAGDROP=YES, 
            then the item is moved to the new position. <br>
            If Ctrl is pressed then the item is copied instead of moved.
         </td>
        </tr>
        <tr>
         <td>
          MULTISELECT_CB
         </td>
         <td>
            Action generated when the state of an item in the multiple selection list is interactively changed. But it is called only when the interaction is over.
            <br>
            <br>
            function multiselect_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> pValue)<br>
            ih: identifier of the element that activated the event.<br>
            pValue: (char*) Similar to the VALUE attribute for a multiple selection list. <br>
            Items selected are marked with '+', items deselected are marked with '-', and non changed items are marked with an 'x'.
            <br>
            <br>
            This callback is called only when MULTIPLE=YES. If this callback is defined the ACTION callback will not be called.
            <br>
            <br>
            The non changed items marked with 'x' are simulated internally by IUP in all systems. <br>
            If you add or remove items to/from the list and you count on the 'x' values, then after adding/removing items set 
            the VALUE attribute to ensure proper 'x' values.
         </td>
        </tr>
        <tr>
         <td>
          VALUECHANGED_CB
         </td>
         <td>
            Called after the selection was interactively changed.
            <br>
            <br>
            function valuechanged_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event.
         </td>
        </tr>

        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            The following image can be seen in demo/pGUI/IupFlatList.exw.
            <br>
            <br>
            <img src="images/iupflatlist.png"/>
         </td>
        </tr>
        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
            Inherits all callbacks of the <a href="IupCanvas.htm">IupCanvas</a>, but redefines the ACTION callback.
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
