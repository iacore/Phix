<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupGLFrame</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            Ihandle ih = IupGLCanvasBox(sequence children, string attributes="", sequence data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Creates an embedded OpenGL container, which draws a frame with a title around its child. It inherits from IupGLSubCanvas. It exists only inside an IupGLCanvasBox.
DEV
Creation
Ihandle* IupGLFrame(Ihandle *child); [in C]
iup.glframe{child: ihandle} -> (elem: ihandle) [in Lua]
glframe(child) [in LED]child: Identifier of an interface element which will receive the frame around. It can be NULL (nil in Lua), not optional in LED.

Returns: the identifier of the created element, or NULL if an error occurs.

Attributes
The IupGLFrame element handle all attributes defined for a IupGLSubCanvas control.


--------------------------------------------------------------------------------

ALIGNMENT (non inheritable): horizontal and vertical alignment. Possible values: "ALEFT", "ACENTER" and "ARIGHT",  combined to "ATOP", "ACENTER" and "ABOTTOM". Default: "ACENTER:ACENTER". Partial values are also accepted, like "ARIGHT" or ":ATOP", the other value will be used from the current alignment. 

BACKCOLOR (non inheritable): color used as background when <a href="IupGLFrame.htm#TITLE">TITLE</a> and IMAGE are not defined. Can have an alpha component. Default: NULL. Used instead of BGCOLOR to avoid inheritance problems.

BACKIMAGE (non inheritable): image name to be used as background when <a href="IupGLFrame.htm#TITLE">TITLE</a> and IMAGE are not defined.   It will be zoomed to fill the background (it does not includes the border). Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. (Since 3.11.1)

BACKIMAGEINACTIVE (non inheritable): background image name of the element when inactive. If it is not defined then the BACKIMAGE is used and its colors will be replaced by a modified version creating the disabled effect. (since 3.11.2)

EXPAND (non inheritable): The default value is "YES".

FORECOLOR (non inheritable): Text color. Can have an alpha component. Default: "0 0 0". Used instead of FGCOLOR to avoid inheritance problems. 

FRAMECOLOR (non inheritable): color used to draw the frame border. Can have an alpha component. Default: "50 150 255".  Used instead of BORDERCOLOR to avoid inheritance problems.

FRAMEWIDTH (non inheritable): line width of the frame border. Default: 1.  Used instead of BORDERWIDTH to avoid inheritance problems.

IMAGE (non inheritable): Image name. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.

IMAGEHIGHLIGHT (non inheritable): Image name of the element in highlight state. If it is not defined then the IMAGE is used.

IMAGEINACTIVE (non inheritable): Image name of the element when inactive. If it is not defined then the IMAGE is used and its colors will be replaced by a modified version creating the disabled effect. 

IMAGEPRESS (non inheritable): Image name of the element in pressed state. If it is not defined then the IMAGE is used.

IMAGEPOSITION (non inheritable): Position of the image relative to the text when both are defined. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.

MOVEABLE (non inheritable): enable the frame to be interactively moved when it is a direct child of the IupGLCanvasBox. Default: NO.

MOVETOTOP (non inheritable): when MOVEABLE=Yes and the frame is moved then its ZORDER is also set to TOP. (Since 3.11.1)

PADDING (non inheritable): internal margin for the title area. Default value: "2x0".

SPACING (non inheritable): defines the spacing between the image and the title. Default: "2".

<a href="common.htm#TITLE">TITLE</a>
(non inheritable): Text the user will see at the top of the frame. 

TITLEBACKIMAGE (non inheritable): image name to be used as background on the title area. Works only when TITLEBOX=Yes. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. (Since 3.11.1)

TITLEBACKIMAGEINACTIVE (non inheritable): background image name of the element when inactive. If it is not defined then the TITLEBACKIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.  (Since 3.11.2) 

TITLEBOX (non inheritable): enable a different visual style for the frame. Instead of the traditional round frame that starts and ends at the title area, it will draw a filled box for the title area and a regular rectangle around the child. Default: NO.

TITLEOFFSET (non inheritable): horizontal offset from the left border to start the title area. Default: 5.


--------------------------------------------------------------------------------

CLIENTSIZE, CLIENTOFFSET: also accepted.

Callbacks
The IupGLFrame element handle all callbacks defined for the IupGLSubCanvas control.


--------------------------------------------------------------------------------

MOVE_CB: Called after the frame was moved on the IupGLCanvasBox, when MOVEABLE=Yes. The coordinates are the same as the POSITION attribute.

int function(Ihandle *ih, int x, int y); [in C]elem:trayclick_cb(x, y: number) -> (ret: number) [in Lua]ih: identifier of the element that activated the event.
x, y: coordinates of the new position. 

            Creates an OpenGL canvas container. It inherits from <a href="IupGLCanvas.htm">IupGLCanvas</a>.
            <br>
            <br>
            children: List of the identifiers that will be placed in the box. It can be {}.
            For more information on the attributes and data parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            The IupGLFrame can contain text and image simultaneously at the title area. 
            <br>
            <br>
            The box can be created with no elements and filled dynamically using <a href="IupAppend.htm">IupAppend</a>() or <a href="IupInsert.htm">IupInsert</a>().
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            The IupGLCanvasBox element handle all attributes defined for an OpenGL canvas and a conventional canvas, 
            see <a href="IupGLCanvas.htm">IupGLCanvas</a> and <a href="IupCanvas.htm">IupCanvas</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MARGIN
         </td>
         <td>
            (non inheritable) Defines a margin in pixels. <br>
            Its value has the format "widthxheight", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. <br>
            Default: "0x0" (no margin).
         </td>
        </tr>
        <tr>
         <td valign=top>
          REDRAW
         </td>
         <td>
            (non inheritable, write-only) force a full redraw of all elements and the main canvas.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            (at Children)
         </td>
        </tr>
        <tr>
         <td valign=top>
          HORIZONTALALIGN
         </td>
         <td>
            (non inheritable, at children only): Horizontally aligns the element inside the box. <br>
            Possible values: "ALEFT", "ACENTER", "ARIGHT" or "FLOAT". Default: "FLOAT". <br>
            When FLOAT is used its horizontal position is obtained from the POSITION attribute.
         </td>
        </tr>
        <tr>
         <td valign=top>
          VERTICALALIGN
         </td>
         <td>
            (non inheritable, at children only): Vertically aligns the element inside the box. <br>
            Possible values: "ATOP", "ACENTER", "ABOTTOM" or "FLOAT". Default: "FLOAT". <br>
            When FLOAT is used its vertical position is obtained from the POSITION attribute.
         </td>
        </tr>
        <tr>
         <td valign=top>
          EXPANDHORIZONTAL
         </td>
         <td>
            (non inheritable, at children only): Expand the horizontal size of the element to the box width. Can be Yes or No. Default: No. (since 3.13)
         </td>
        </tr>
        <tr>
         <td valign=top>
          EXPANDVERTICAL
         </td>
         <td>
            (non inheritable, at children only): Expand the vertical size of the element to the box height. Can be Yes or No. Default: No. (since 3.13)
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="common.htm#CLIENTSIZE">CLIENTSIZE</a>,
            <a href="common.htm#CLIENTOFFSET">CLIENTOFFSET</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Callbacks</b>
         </td>
         <td>
            The IupGLCanvasBox element understands all callbacks defined for the <a href="IupGLCanvas.htm">IupGLCanvas</a>.
            <br>
            <br>
            But since it has to forward the mouse and action callbacks to the IupGLControls elements when it is mapped the 
            callbacks ACTION, BUTTON_CB, MOTION_CB, WHEEL_CB, and LEAVEWINDOW_CB are replaced by internal callbacks. 
            The application callbacks will still be called and they can be retrieved by using the prefix "APP_" on the callback name. 
            If for some reason the application set one of these callbacks after being mapped, the box internal callback can be retrieved 
            by using the prefix "GLBOX_" on the callback name. 
            <br>
            <br>
            Keyboard focus is NOT processed for IupGLCanvasBox children.
            <br>
            <br>
            The IupGLCanvas SWAPBUFFERS_CB callback is used internally to enable a correct display for the box children. 
            This means that when the application calls IupGLSwapBuffers, then children will be drawn before actually swapping the double buffer.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupCanvas.htm">IupCanvas</a>,
          <a href="IupGLCanvas.htm">IupGLCanvas</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
