<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupGraph</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
           <br>
           <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupGraph(<a href="integer.htm">integer</a> drid, 
                                                            <a href="string.htm">string</a> attributes="", 
                                                            <a href="html/glossary.htm#dwordseq">dword_seq</a> args={}) 
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a resizeable graph with one or more datasets.
            <br>
            <br>
            drid: a routine_id that provides the dataset[s], see example and explanation below.<br>
            For more information on the attributes and args parameters see 
            <a href="IupSetAttributes.htm">IupSetAttributes</a>(), and below.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
            Supported. In fact this control was expressly written (on desktop/Phix) to be automatically transpiled for p2js,
            and all attributes below have therefore been marked with 
            <a href="notpgui.htm"><sup><span style="color:lime;">+</span></sup></a> to indicate they are fully supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            An IupGraph is a Phix/pGUI invention, expressly written for <a href="p2js.htm"><span class="pwap2js">pwa/p2js</span></a>,
            but of course it can be freely used for strictly desktop-only purposes.
            It is a simplified alternative to <a href="IupPlot.htm">IupPlot</a>(), but 
            written in pure Phix hll code and suitable for automatic transpilation to JavaScript, which 
            should (also) make it much more amenable to user-supplied enhancements and improvements,
            although at the moment it is pretty much the simplest possible replacement/implementation.
            <br>
            <br>
            The main differences between IupGraph and IupPlot are:<br>
            An IupGraph is <a href="p2js.htm"><span class="pwap2js">pwa/p2js</span></a>-compatible, whereas <a href="IupPlot.htm">IupPlot</a> is not.<br>
            An IupGraph only contains a single plot, optionally with multiple datasets occupying the same screen area.<br>
            Datasets are provided via a (single) function call, rather than auxillary functions, hence there is no explicit dataset management.<br>
            The presence or absence of a legend box depends on "NAMES" being specified, rather than a LEGEND (YES/NO) attribute.<br> 
            Major tick/min/max values must be provided and are <i>not</i> automatically defaulted if absent.<br>
            Logarithmic scales are not directly supported, see demo\rosetta\9billionnames.exw for a manual solution.<br>
            There is no zoom/pan/crosshair/tip/selection or context menu.<br>
            It is drawn using OpenGL, and as per IupPlot this means a slightly lower text quality,
            but at least it supports <!--alpha[??] and--> anti-aliasing.<br>
            The MAP_CB, ACTION (ie redraw), and RESIZE_CB callbacks of the <a href="IupCanvas.htm">IupCanvas</a> on which IupGraph is based are 
            used/specified internally and are non-overridable.
            <br>
            <br>
            The routine specified by drid should provide data as follows:
            <br>
            <br>
<!--eucode>
    {{"BGCOLOR",CD_PARCHMENT},  -- (optional)
     {"Helvetica",CD_PLAIN,9},  -- (optional)
     {"XRID",format_as_date},   -- (optional)
     {"BARMODE","HORIZONTAL"},  -- (optional)
     {"NAMES",name{,name..}},   -- (optional)
     {px,py[,CD_BLUE[,mode]]}}  -- (multiple allowed)
</eucode-->
<pre>
<font color="#0000FF">    {</font><font color="#800000">{</font><font color="#008000">"BGCOLOR"</font><font color="#0000FF">,</font><font color="#004600">CD_PARCHMENT</font><font color="#800000">}</font><font color="#0000FF">, </font><font color="#000080"><i> -- (optional)</i></font>
<font color="#800000">     {</font><font color="#008000">"Helvetica"</font><font color="#0000FF">,</font><font color="#004600">CD_PLAIN</font><font color="#0000FF">,</font><font color="#000000">9</font><font color="#800000">}</font><font color="#0000FF">, </font><font color="#000080"><i> -- (optional)</i></font>
<font color="#800000">     {</font><font color="#008000">"XRID"</font><font color="#0000FF">,</font><font color="#000000">format_as_date</font><font color="#800000">}</font><font color="#0000FF">,  </font><font color="#000080"><i> -- (optional)</i></font>
<font color="#800000">     {</font><font color="#008000">"BARMODE"</font><font color="#0000FF">,</font><font color="#008000">"HORIZONTAL"</font><font color="#800000">}</font><font color="#0000FF">, </font><font color="#000080"><i> -- (optional)</i></font>
<font color="#800000">     {</font><font color="#008000">"NAMES"</font><font color="#0000FF">,</font><font color="#000000">name</font><font color="#800080">{</font><font color="#0000FF">,</font><font color="#000000">name</font><font color="#0000FF">..</font><font color="#800080">}</font><font color="#800000">}</font><font color="#0000FF">,  </font><font color="#000080"><i> -- (optional)</i></font>
<font color="#800000">     {</font><font color="#000000">px</font><font color="#0000FF">,</font><font color="#000000">py</font><font color="#800080">[</font><font color="#0000FF">,</font><font color="#004600">CD_BLUE</font><font color="#00FF00">[</font><font color="#0000FF">,</font><font color="#000000">mode</font><font color="#00FF00">]</font><font color="#800080">]</font><font color="#800000">}</font><font color="#0000FF">} </font><font color="#000080"><i> -- (multiple allowed)</i></font>
</pre>
            <br>
            If the background colour is not provided CD_WHITE is assumed (can also be set via the BGCOLOR attribute).<br>
            If the font (for the axis values) is not overridden the values shown above will be used.<br>
            While BGCOLOR/XRID/YRID/BARMODE can be supplied as above, or via attributes as detailed below, the display of a
            legend is controlled by the pre(/ab)sence of "NAMES" in the returned data object (there is no LEGEND attribute).<br> 
            Each dataset is a pair of sequences of x and y values such that length(px) is the same as length(py),
            and can optionally specify a colour (if not provided CD_BLACK is assumed), and when MODE=MARK a markstyle.
            <br>
            <br>
            Further refinements to this structure are expected, and hopefully will/can be added in a backwards-compatible way.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupCanvas.htm">IupCanvas</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            <img width="302" height="232" src="images/IupGraph.png">
          <br>
        <small>
<!--eucode>
-- demo\rosetta\Plot_coordinate_pairs.exw
include pGUI.e
include IupGraph.e

constant x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9},
         y = {2.7, 2.8, 31.4, 38.1, 58.0, 76.2, 100.5, 130.0, 149.3, 180.0}

function get_data(Ihandle /*graph*/) return {{x,y,CD_BLUE}} end function

IupOpen()
Ihandle graph = IupGraph(get_data,"RASTERSIZE=300x200"),
        dlg = IupDialog(graph,`TITLE="Plot coordinate pairs"`)
IupSetAttributes(dlg,"MINSIZE=320x200") -- (nb not raster units/pixels)
IupSetAttributes(graph,"XTICK=1,XMIN=0,XMAX=9")
IupSetAttributes(graph,"YTICK=20,YMIN=0,YMAX=180")
IupShow(dlg)
if platform()!=JS then
    IupMainLoop()
    IupClose()
end if
</eucode-->
<pre>
<font color="#000080"><i>-- demo\rosetta\Plot_coordinate_pairs.exw</i></font>
<font color="#008080">include</font><font color="#000000"> pGUI.e</font>
<font color="#008080">include</font><font color="#000000"> IupGraph.e
</font>
<font color="#008080">constant</font><font color="#000000"> x</font><font color="#0000FF"> = {</font><font color="#000000">0</font><font color="#0000FF">,</font><font color="#000000"> 1</font><font color="#0000FF">,</font><font color="#000000"> 2</font><font color="#0000FF">,</font><font color="#000000"> 3</font><font color="#0000FF">,</font><font color="#000000"> 4</font><font color="#0000FF">,</font><font color="#000000"> 5</font><font color="#0000FF">,</font><font color="#000000"> 6</font><font color="#0000FF">,</font><font color="#000000"> 7</font><font color="#0000FF">,</font><font color="#000000"> 8</font><font color="#0000FF">,</font><font color="#000000"> 9</font><font color="#0000FF">},</font>
<font color="#000000">         y</font><font color="#0000FF"> = {</font><font color="#000000">2.7</font><font color="#0000FF">,</font><font color="#000000"> 2.8</font><font color="#0000FF">,</font><font color="#000000"> 31.4</font><font color="#0000FF">,</font><font color="#000000"> 38.1</font><font color="#0000FF">,</font><font color="#000000"> 58.0</font><font color="#0000FF">,</font><font color="#000000"> 76.2</font><font color="#0000FF">,</font><font color="#000000"> 100.5</font><font color="#0000FF">,</font><font color="#000000"> 130.0</font><font color="#0000FF">,</font><font color="#000000"> 149.3</font><font color="#0000FF">,</font><font color="#000000"> 180.0</font><font color="#0000FF">}
</font>
<font color="#008080">function</font><font color="#000000"> get_data</font><font color="#0000FF">(</font><font color="#7060A8">Ihandle</font><font color="#000080"><i> /*graph*/</i></font><font color="#0000FF">)</font><font color="#008080"> return</font><font color="#0000FF"> {</font><font color="#800000">{</font><font color="#000000">x</font><font color="#0000FF">,</font><font color="#000000">y</font><font color="#0000FF">,</font><font color="#004600">CD_BLUE</font><font color="#800000">}</font><font color="#0000FF">}</font><font color="#008080"> end function
</font>
<font color="#7060A8">IupOpen</font><font color="#0000FF">()</font>
<font color="#7060A8">Ihandle</font><font color="#000000"> graph</font><font color="#0000FF"> =</font><font color="#7060A8"> IupGraph</font><font color="#0000FF">(</font><font color="#000000">get_data</font><font color="#0000FF">,</font><font color="#008000">"RASTERSIZE=300x200"</font><font color="#0000FF">),</font>
<font color="#000000">        dlg</font><font color="#0000FF"> =</font><font color="#7060A8"> IupDialog</font><font color="#0000FF">(</font><font color="#000000">graph</font><font color="#0000FF">,</font><font color="#008000">`TITLE="Plot coordinate pairs"`</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttributes</font><font color="#0000FF">(</font><font color="#000000">dlg</font><font color="#0000FF">,</font><font color="#008000">"MINSIZE=320x200"</font><font color="#0000FF">)</font><font color="#000080"><i> -- (nb not raster units/pixels)</i></font>
<font color="#7060A8">IupSetAttributes</font><font color="#0000FF">(</font><font color="#000000">graph</font><font color="#0000FF">,</font><font color="#008000">"XTICK=1,XMIN=0,XMAX=9"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttributes</font><font color="#0000FF">(</font><font color="#000000">graph</font><font color="#0000FF">,</font><font color="#008000">"YTICK=20,YMIN=0,YMAX=180"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupShow</font><font color="#0000FF">(</font><font color="#000000">dlg</font><font color="#0000FF">)</font>
<font color="#008080">if</font><font color="#7060A8"> platform</font><font color="#0000FF">()!=</font><font color="#004600">JS</font><font color="#008080"> then</font>
<font color="#7060A8">    IupMainLoop</font><font color="#0000FF">()</font>
<font color="#7060A8">    IupClose</font><font color="#0000FF">()</font>
<font color="#008080">end if</font>
</pre>
          <br>
          </small>
            You can also set XTICK etc inside drid, which has been named get_data() here, and is the reason why 
            it gets passed the graph handle. Note that IupPlot provides sensible defaults if none are provided, 
            but I am not about to try reverse engineering or deciphering the two decades-worth of tweaks and fine 
            tuning that probably/potentially involves.
            <br>
            <br>
            IupGraph() does not fare well at sizes below a certain threshold, beyond which ticks might overlap 
            or even go negative, hence as shown the use of an explicit minimum size setting is recommended.
            Obviously all that sort of handling and more remains open to future improvement.
            <br>
            <br>
            See also <br>
            demo\pGUI\graph1.exw<br>
            demo\pGUI\graph2.exw<br>
            demo\pGUI\graph4.exw<br>
            demo\pGUI\IupSampleDialog.exw<br>
            demo\rosetta\B-spline.exw,<br>
            demo\rosetta\Convex_hull.exw,<br>
            demo\rosetta\Plot_coordinate_pairs.exw,<br>
            demo\rosetta\9billionnames.exw,<br>
            demo\rosetta\Euler_method.exw,<br>
            demo\rosetta\Goldbachs_comet.exw,<br>
            demo\rosetta\Polynomial_regression.exw<br>
<!--DEV-->
            demo\rosetta\Modified_random_distribution.exw, needs updating, and IupGraph [***]<br>
            demo\rosetta\Yellowstone_sequence.exw<br>
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            Note that while an IupGraph is based on an <a href="IupCanvas.htm">IupCanvas</a>, internally it uses the CanvasDraw 
            primitives rather than the IupDraw ones, and hence the FONT attribute does not apply. In fact, at the time of writing, 
            the only other attribute beyond RASTERSIZE I have yet made any use of is <a href="IupCanvas.htm#DRAWSIZE">DRAWSIZE</a>,
            that is beyond the IupGraph-specific attributes not inherited from IupCanvas as listed below.
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#BGCOLOR">BGCOLOR</a><a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Can be set on the graph, or provided via drid as above.
         </td>
        </tr>
        <tr>
         <td>
          CD_CANVAS<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Use <code>cdCanvas cd_canvas = IupGetAttributePtr(graph,"CD_CANVAS")</code> to retrieve the internal cdCanvas, if needed.
         </td>
        </tr>
        <tr>
         <td>
          <a href="IupCanvas.htm#DRAWSIZE">DRAWSIZE</a><a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Can be retrieved from inside the drid routine, should that help any.
         </td>
        </tr>
        <tr>
         <td>
          DRID<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            While I don&rsquo;t particularly recommend (aka haven&rsquo;t tested) modifying it on-the-fly, it seems perfectly reasonable 
            to retrieve and invoke the drid for secondary purposes, for instance to set a label or frame name accompanying each graph.
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#RASTERSIZE">RASTERSIZE</a><a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Standard behaviour, except that IupGraph.e automatically sets it to NULL after the initial display to enable full resizing.
         </td>
        </tr>
        <tr>
         <td>
          MODE<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            One of "BAR", "MARK", "MARKLINE", "LINE". Behaves as "LINE" if undefined or unrecognised, defaults to "BAR" if BARMODE is set.
<!--
(from IupPlot:) drawing mode of the current dataset. 
        Can be: "LINE", "MARK", "MARKLINE", "BAR". Default: "LINE". [DONE]
        "AREA", "STEM", "MARKSTEM", "HORIZONTALBAR", "MULTIBAR", "STEP", "ERRORBAR", "PIE". 
-->
         </td>
        </tr>
        <tr>
         <td>
          BARMODE<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Display as a bar chart. Can be "VERTICAL", "HORIZONTAL" or undefined. Default: "VERTICAL" if mode="BAR", else undefined.<br>
            An error occurs if this is set to an unrecognised value, or MODE is neither "BAR" nor "" (which is then set to "BAR").
            See demo\pGUI\graph4.exw for an example.
         </td>
        </tr>
        <tr>
         <td>
          MARKSTYLE<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
<!--
-- (from IupPlot:) mark style of the current dataset. 
--        Can be: "HOLLOW_CIRCLE", "PLUS", "X". Default "X". [DONE] 
--        "STAR", "CIRCLE", "BOX", "DIAMOND", "HOLLOW_BOX", "HOLLOW_DIAMOND".
--        (to be implemented as and when needed)
-->
            Display as discrete marks, instead of lines or a bar chart (etc). 
            Can be "HOLLOW_CIRCLE", "PLUS", "X" or undefined, and can be set on each dataset. Default: "X" if mode="MARK".<br>
            Note that like setting BARMODE means you don&rsquo;t have to set MODE, if you set a MARKSTYLE on the graph itself, 
            MODE=MARK <i>is</i> automatically set, however the latter must be set to pick up a style off each dataset, so you 
            (may) have to set <i>both</i> MODE=MARK and MARKSTYLE[per dataset] in order for things to work properly.<br>
            Unrecognised settings are simple treated as "X", rather than triggering an error.<br>
            See demo\rosetta\Goldbachs_comet.exw for an example.
         </td>
        </tr>
        <tr>
         <td>
          GRID<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Display the grid lines. Can be "YES"/"ON"/true or "NO"/"OFF"/false. Default: true.<br>
         </td>
        </tr>
        <tr>
         <td>
          GRIDCOLOR<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            grid colour. Default: CD_GREY (#C0C0C0).<br>
            Should be set using (eg) <a href="IupSetStrAttribute.htm#utility">IupSetInt</a>(graph,"GRIDCOLOR",CD_LIGHT_GREY).<br>
         </td>
        </tr>
        <tr>
         <td>
          GTITLE<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          XNAME<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          YNAME<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (optional) Text strings for the graph title and names for the x and y axis. Default: "".<br>
            Aside: renamed from TITLE to GTITLE to avoid inheriting from the dialog or other container.<br>
            See demo\rosetta\Yellowstone_sequence.exw for an example.
         </td>
        </tr>
        <tr>
         <td>
          LEGENDBOX<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Specify whether to draw a box around the legend, default: YES.<br>
            As noted above the presence or absence of a legend explicitly depends on "NAMES" being specified.
         </td>
        </tr>
        <tr>
         <td>
          LEGENDPOS<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            legend box position. Can be: "TOPLEFT", "TOPRIGHT", "BOTTOMLEFT", "BOTTOMRIGHT", "BOTTOMCENTER" or "XY". Default: "TOPRIGHT". <br>
            For XY the position must be specified via the LEGENDPOSXY attribute. 
         </td>
        </tr>
        <tr>
         <td>
          LEGENDPOSXY<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (untested) legend box position in the format "x,y" - specifically <a href="cdCanvasSetTextAlignment.htm">CD_EAST</a> of the first text.
         </td>
        </tr>
        <tr>
         <td>
          TITLESTYLE<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (optional) A style suitable for passing to <a href="cdCanvasFont.htm">cdCanvasFont</a>().<br>
            Should be set using (eg) <a href="IupSetStrAttribute.htm#utility">IupSetInt</a>(graph,"TITLESTYLE",CD_ITALIC).<br>
            Applies to TITLE, XNAME, and YNAME. Default: CD_PLAIN.<br>
         </td>
        </tr>
        <tr>
         <td>
          <nobr>XMIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>, 
                XMAX<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,</nobr><br>
          YMIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,
          YMAX<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            The range of x and y values. Fairly obviously XMIN should be &lt;= min(px) for all datasets, and similar rules 
            for the other three, otherwise parts of the graph may end up missing.
         </td>
        </tr>
        <tr>
         <td>
          XMARGIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          YMARGIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Can be used to adjust the axis display when needed. Specified in pixels, default 10.
         </td>
        </tr>
        <tr>
         <td>
          XYSHIFT<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          YXSHIFT<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Can be used to further adjust the axis display in a platform-specific manner when needed. Specified in pixels, default 0.<br>
            See demo\pGUI\graph2.exw for an example, without XYSHIFT the dates on the x-axis were misplaced under pwa/p2js.<br>
            <small>(In an ideal world IupGraph.e would handle that sort of thing automatically, perhaps.
                    There may yet be a need for XXSHIFT and YYSHIFT.)</small>
         </td>
        </tr>
        <tr>
         <td>
          XANGLE<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          YANGLE<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Specify an angle in degrees suitable for passing to <a href="cdCanvasSetTextOrientation.htm">cdCanvasSetTextOrientation</a>(), default 0.<br>
            A non-zero value rotates the tick labels, typically by +/-90. See demo\pGUI\graph2.exw for an example.
         </td>
        </tr>
        <tr>
         <td>
          XCROSSORIGIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          YCROSSORIGIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Allow the axis to cross the origin and be placed inside the dataset area. Can be YES or NO (or true/false). Default: NO.<br>
            See demo\pGUI\graph1.exw for an example.
         </td>
        </tr>
        <tr>
         <td>
          XRID<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          YRID<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (optional) Specify a routine_id to use as a callback for formatting the tick labels.<br>
            See demo\pGUI\graph2|4.exw for examples. Note the x and y elements must all be numbers, not, for instance, 
            <a href="date.htm">date</a>() results, and these routines have to be able to decipher said numbers.
            In the case of graph2.exw, the x values are days since 1/1/1999, in the range 1..7000, though these
            routines actually get their (atom/integer) parameter from the (matching/equivalent) XMIN/XTICK etc.
            In the case of graph4.exw, the x values are 1..12, with xformat yielding "jan".."dec".<br>
         </td>
        </tr>
        <tr>
         <td>
          XTICK<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,
          YTICK<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            The spacing between major ticks, as in "for x=XMIN to XMAX by XTICK do draw_tick(x) end for".<br>
            <small>(minor ticks have not yet been attempted)</small>
         </td>
        </tr>
        <tr>
         <td>
          XTICKFMT<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,<br>
          YTICKFMT<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Specify a standard <a href="sprintf.htm">sprintf</a>() format string for the tick labels. Default: "%g".<br>
            Has no effect if XRID/YRID has been specified.
         </td>
        </tr>

<!--
        <tr>
         <td>
          <a href="common.htm#RASTERSIZE">RASTERSIZE</a><a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable) the initial size is determined from the sum of the column widths and the number of visible lines.<br>
            Unlike some other controls it should <i>not</i> be necessary to set this to null to allow the automatic layout to use smaller values.
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            (non inheritable) The default value is "YES".
         </td>
        </tr>
        <tr>
         <td>
          SPACING
         </td>
         <td>
            vertical internal padding for each node. Notice that the distance between each node will actually be 2x the spacing. (since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          CSPACING
         </td>
         <td>
            same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)
         </td>
        </tr>
-->
<!-- DEV/untested:
        <tr>
         <td>
          Also:
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>,
            <a href="common.htm#EXPAND">EXPAND</a>, 
            <a href="common.htm#FONT">FONT</a>,
            <a href="common.htm#NAME">NAME</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#SIZE">SIZE</a><a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>
         </td>
        </tr>
-->

        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
            You may <i>not</i> use or override ACTION or RESIZE_CB or MAP_CB.<br>
            (You <i>can</i> use those on the dialog, just not on the graph itself.)
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            See demo\pGUI\IupTable.exw
         </td>
        </tr>
-->
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
