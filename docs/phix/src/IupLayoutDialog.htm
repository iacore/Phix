<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupLayoutDialog</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupLayoutDialog(<a href="Ihandle.htm">Ihandln</a> dialog)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a Layout Dialog. <br>
            It is a predefined dialog to visually edit the layout of another dialog in run time. <br>
            It is a standard <a href="IupDialog.htm">IupDialog</a> constructed with other IUP elements. <br>
            The dialog can be shown with any of the show functions <a href="IupShow.htm">IupShow</a>, <a href="IupShowXY.htm">IupShowXY</a> or <a href="IupPopup.htm">IupPopup</a>.
            <br>
            <br>
            Any existing dialog can be selected. It does not need to be mapped on the native system nor visible.
            <br>
            <br>
            The layout dialog is composed by two areas: one showing the given dialog children hierarchy tree, and one displaying its layout.
            <br>
            <br>
            This is a dialog intended for developers, so they can see and inspect their dialogs in other ways.
            <br>
            <br>
            dialog: identifier of the dialog to display the layout. Can be NULL.
            <br>
            <br>
            Returns: the identifier of the created element.
            <br>
            <br>
            Refer to <a href="IupDialog.htm">IupDialog</a> for details of available attributes and callbacks.
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes</b>
         </td>
         <td>
        <b>Menu</b><br><small>
 <pre>
Dialog
        New  - creates a new empty dialog, it will be destroyed when the layout is destroyed.
        Load - loads an existent dialog from the application.
        Load Visible - lists only visible dialogs from the application to be loaded.
        Reload - reloads the current dialog into the Layout Dialog.
        Export - exports the current dialog to a text file in the specified language.
                C
                LED
                Lua
        Refresh - recalculates the dialog layout of the current dialog (<a href="IupRefresh.htm">IupRefresh</a>).
        Redraw - send a redraw to the current dialog (<a href="IupRedraw.htm">IupRedraw</a>).
        Show - shows the current dialog (<a href="IupShow.htm">IupShow</a>) 
        Hide - hides the current dialog (<a href="IupHide.htm">IupHide</a>) 
        Globals... - displays an <a href="IupGlobalsDialog.htm">IupGlobalsDialog</a>() popup
        Close - hides the Layout Dialog, optionally self destroy according to DESTROYWHENCLOSED.
Layout
        Hierarchy - shows or hides the layout hierarchy tree at left.
        Update - redraw the layout.
        Auto Update - periodically redraw the layout.
        Show Hidden - show hidden elements in the layout.
        Opacity - controls the Layout Dialog opacity so you can composite it on top of the selected dialog.
 </pre>
        </small><br>
        Use Reload when the dialog has been changed and the layout was modified by the application. <br>
        Use Update when attributes of the dialog were changed by the application and the layout needs to be redrawn.<br>
<!-- DEV (never seen this work..)
Since IUP 3.15 we added a global hot key to display the layout dialog loading the current dialog, just press Alt+Ctrl+Shft+L.
-->
        The Export items will export only the dialog and its children. <br>
        Associated elements such as menus and images will not be exported. <br>
        The selected file will be overwritten if it already exists.
        <br>
        <br>
        <b>Hierarchy Tree</b><br>
        Each element inside the dialog is mapped to a node in the tree, and elements that are containers are branches in the tree. <br>
        The node title shows the element class name, its <a href="common.htm#TITLE">TITLE</a> attribute when available and its name when available. <br>
        The selected node is synced with the selected element in the layout display in both ways. <br>
        Using the right click over a node shows a context menu.
        <br>
        <br>
        You can drag and drop items in the tree. <br>
        But there are some restrictions according to each container possibilities. <br>
        Some containers have internal children that are displayed but can not be changed.
        <br>
        <br>
        <b>Layout Display</b><br>
        The layout of an element is drawn with its Current size using its <a href="common.htm#FONT">FONT</a>, <a href="common.htm#TITLE">TITLE</a>, 
        <a href="common.htm#BGCOLOR">BGCOLOR</a> and <a href="common.htm#FGCOLOR">FGCOLOR</a> if any. <br>
        But inheritance is not used intentionally to emphasize the element attributes. <br>
        Only the first line (limited to 50 characters in the tree) is used from the element <a href="common.htm#TITLE">TITLE</a>. <br>
        Images are also used, but position of text and images are not the same as in the native control. <br>
        This decoration is there simply to help locating the elements in the layout.
        <br>
        <br>
        Containers that are not native elements are shown with dashed lines, other elements are shown with solid lines. <br>
        When a red line is displayed along with a border of an element it means that element is maximizing its parent size, 
        i.e. its Current size is equal to its Natural size and both are equal to the parent Client size. <br>
        Usually this is the element determining the natural size of the container at least in the direction marked with red.
        <br>
        <br>
        You can NOT drag and drop elements in the layout. <br>
        Using the right click over an element shows a context menu, the same as in a tree node. <br>
        When an element in the layout is double clicked and the actual element is visible, then the actual element will blink twice.
        <br>
        <br>
        <b>Context Menu</b><br><small>
 <pre>
Properties - shows the properties dialog for the selected element.
Map - maps the selected element to the native system.
Unmap - unmaps the selected element from the native system. Its attribute are saved before unmapping.
Copy - copy the selected element to an internal clipboard. Its attributes are also copied.
Cut - Prepare the selected element to be cut (re-parent). The cut occurs only when pasted.
Paste Insert Child - paste the copy or cut element as the first child of the selected container. 
Paste Insert at Cursor - paste the copy or cut element at the cursor mark of the selected container.
Paste Append Child - paste the copy or cut element as the last child of the selected container.
Paste Insert Brother - paste the copy or cut element as brother of the selected element.
-----------------
New Insert Child - selects a class of control and creates a new element of that class, then insert it 
                    as the first child of the selected container. The new element is not mapped.
New Insert at Cursor - selects a class of control and creates a new element of that class, then insert 
                    it at the cursor mark of the selected container. The new element is not mapped.
New Append Child - selects a class of control and creates a new element of that class, then insert it 
                    as the last child of the selected container. The new element is not mapped.
New Insert Brother - selects a class of control and creates a new element of that class, then insert 
                      it as brother of the selected element. The new element is not mapped.
-----------------
Remove - removes the selected element. 
 </pre>
        </small><br>
        <b>Properties</b><br>
        The properties dialog allows the inspection and change of the elements attributes. <br>
        It contains 3 Tab sections: <br>
        one for the registered attributes of the element, <br>
        one for custom attributes set at the hash table, and <br>
        one for the callbacks. <br>
        The callbacks are just for inspection, and custom attributes should be handled carefully because they may be not strings. <br>
        Registered attributes values are shown in red when they were changed by the application. <br>
        It uses the <a href="IupElementPropertiesDialog.htm">IupElementPropertiesDialog</a>.
        <br>
        <br>
        <b>Insert Cursor</b> (since 3.28)<br>
        The cursor mark in green is shown only inside a selected container that can receive more children. <br>
        In the IupCbox container the cursor is a point, on the other containers the cursor is a vertical or horizontal line accordingly. <br>
        Elements can be pasted, created a new one, or dropped in a cursor mark.
        <br>
        <br>
        <b>Drag & Drop of Elements</b> (since 3.28)<br>
        It was possible only to drag & drop controls in the tree.
        <br>
        <br>
        But now it is possible to drag & drop in the layout too. <br>
        When the element is dragged the selection is not changed, when there is a cursor mark in a container is where the drop will occur. <br>
        So before dragging an element first select the container you want to drop it, so the cursor mark can be displayed while dragging. <br>
        Also like in the tree it is possible to drag a container with all its children. <br>
        But there will be no visual feedback of the drag, with the exception of a mouse cursor changed to a "move" symbol.
        <br>
        <br>
        Inside a IupCbox container the drag &drop is different. <br>
        First when dragging immediate children of the IupCbox the change occurs simultaneously and can be visually seen in the layout and 
        in the IupCbox itself if the dialog is visible. <br>
        When the IupCbox is not selected the move occurs only from one point to another inside the container, i.e. the hierarchy is not 
        changed, just its position inside the container. <br>
        When the IupCbox is selected any element from the IupCbox hierarchy can be moved (re-parent) to be a direct child of the IupCbox. <br>
        When another container is selected, and there is a cursor mark the drop will be placed in that container.
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            See also the <a href="IupDialog.htm">IupDialog</a> attributes.
         </td>
        </tr>
        <tr>
         <td>
          DESTROYWHENCLOSED
         </td>
         <td>
            The dialog will be automatically destroyed when closed. Default: Yes.
         </td>
        </tr>

        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
            Check the <a href="IupDialog.htm">IupDialog</a> callbacks.
         </td>
        </tr>
        <tr>
         <td>
          ATTRIBCHANGED_CB
         </td>
         <td>
            Called when an attribute is changed in the Properties dialog. (since 3.28)
            <br>
            <br>
            function attribchanged_cb(Ihandle ih, atom pName)<br>
            ih: identifier of the element that activated the event.<br>
            pName: (char*) name of the attribute that changed.
         </td>
        </tr>
        <tr>
         <td>
          LAYOUTCHANGED_CB
         </td>
         <td>
            Called when the layout is changed. (since 3.28)
            <br>
            <br>
            function layoutchanged_cb(Ihandle ih, Ihandln elem)<br>
            ih: identifier of the element that activated the event.<br>
            elem: identifier of the element that changed the layout. Can be NULL.
         </td>
        </tr>

        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            Just add (eg) IupShow(IupLayoutDialog(dlg)), normally under some suitable trigger such as a button or menu entry, 
            or perhaps (temporarily) right at the top, straight after the main IupShow(dlg), to almost any existing program:
            <br>
            <br>
            <div class="wraptocenter">
             <span></span>
             <img src="images/layoutdlg1.png" />
            </div>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupDialog.htm">IupDialog</a>,
          <a href="IupShow.htm">IupShow</a>,
          <a href="IupShowXY.htm">IupShowXY</a>,
          <a href="IupPopup.htm">IupPopup</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            Normally I&rsquo;d recommend using the latest pre-compiled C routine, however I once translated the (version 3.24) C code for this 
            to Phix/pGUI, in the hope that it might be a useful basis for an IDE. See demo\pGUI\iup_layoutdlg.e<br>
            Use/testing is simply a matter of adding something like the following to an existing program, replacing "dialog" as appropriate:
            <br>
            <br>
<!--eucode>
include iup_layoutdlg.e
    Ihandle layout = IupLayoutDialog2(dialog)
    IupSetAttribute(layout, "SIZE", "500x300")
    IupShowXY(layout, IUP_CURRENT, IUP_CURRENT)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">include</font><font color="#000000"> iup_layoutdlg.e
</font><font color="#5E005E">    Ihandle</font><font color="#000000"> layout</font><font color="#0000FF"> =</font><font color="#000000"> IupLayoutDialog2</font><font color="#0000FF">(</font><font color="#000000">dialog</font><font color="#0000FF">)
</font><font color="#5E005E">    IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">layout</font><font color="#0000FF">,</font><font color="#008000"> "SIZE"</font><font color="#0000FF">,</font><font color="#008000"> "500x300"</font><font color="#0000FF">)
</font><font color="#5E005E">    IupShowXY</font><font color="#0000FF">(</font><font color="#000000">layout</font><font color="#0000FF">,</font><font color="#004600"> IUP_CURRENT</font><font color="#0000FF">,</font><font color="#004600"> IUP_CURRENT</font><font color="#0000FF">)</font>
</pre>
            <br>
            Note that translation predates the introduction of "Globals..."/<a href="IupGlobalsDialog.htm">IupGlobalsDialog</a>().
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
