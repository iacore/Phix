<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupLog</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            IupLog(<a href="string.htm">string</a> logtype, fmt, <a href="sequence.htm">sequence</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Writes a message to the system log.
            <br>
            <br>
            logtype: type of the log. Can be DEBUG, INFO, ERROR and WARNING.<br>
            fmt, args: uses the same format specification as the <a href="sprintf.htm">sprintf</a>() function.
            <br>
            <br>
            In Windows, writes to the "Application" event log. <br>
            Except if logtype is DEBUG, in this case uses OutputDebugString to write to the current debugger. <br>
            If the application has no debugger and the system debugger is not active, it does nothing. <br>
            When running from Visual Studio the message is displayed in the Output panel only when when debugging the application. <br>
            To view the other messages run the Event Viewer management console in Administrative Tools.
            <br>
            <br>
            In Linux, write to the Syslog. <br>
            When logtype is DEBUG, it will also write to the calling process&rsquo; Standard Error stream. <br>
            If fails to submit a message to Syslog writes the message instead to system console. <br>
            To view the messages in Ubuntu use the File Log Viewer application, or you can directly read the content of the /var/log/syslog file. <br>
            It is common to grab the last lines of the file using "tail -n 10 /var/log/syslog". <br>
            You can also filter messages using grep and the filename of the application.
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            Uses a trick I learnt from the IUP C sources, namely IupLog(typ,"%s",str), which avoids any confusion over Phix vs. C 
            <a href="printf.htm">printf</a> formats, as noted on the technicalia dropdown on that page (when translating C code to Phix 
            you should replace any C-style specifiers with Phix-style ones), and also (mostly) avoids any need to double-up % signs as 
            in "%%d" to end up with "%d", at least, that is, nine times out of ten.
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
