<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupMatrixList</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupMatrixList()
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates an interface element that displays a list of items, just like <a href="IupList.htm">IupList</a>, but internally 
            uses an <a href="IupMatrix.htm">IupMatrix</a>.
            <br>
            <br>
            It uses the matrix columns to display labels, color boxes and check boxes in a way that is not possible using IupList. <br>
            But the control mimics the IupList attributes, callbacks and interaction, so the usage by the programmer and by the user should be very similar.
            <br>
            <br>
            This is an additional control that depends on the IupControls library.
            <br>
            <br>
            Based on MTXLIB, developed at Tecgraf/PUC-Rio by Renata Trautmann and Andre Derraik.
            <br>
            <br>
            Returns the identifier of the created matrix.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span></a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupCanvas.htm">IupCanvas</a>,
          <a href="IupMatrix.htm">IupMatrix</a>
         </td>
        </tr>

        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>

         </td>
        </tr>

        <tr>
         <td>
            "1","2"
         </td>
         <td>
            First, second item in the list, etc.<br>
            (non inheritable) Item value. It can be any text. <br>
            Differently from the IupList control, the item must exist so its label can be changed. <br>
            So APPENDITEM, INSERTITEMid , ADDLIN or COUNT attributes must be used to reserve space for the list items. <br>
            Notice that lines and items in the list are the same thing.
         </td>
        </tr>
        <tr>
         <td>
            ADDLIN
         </td>
         <td>
            (write-only) adds a new line to the list after the specified line. <br>
            To insert a line at the top, value 0 must be used. <br>
            To add more than one line, use format "L-L", where the first number corresponds to the base line and the second number 
            corresponds to the number of lines to be added. Ignored if set before map.
         </td>
        </tr>
        <tr>
         <td>
            APPENDITEM
         </td>
         <td>
            (write-only) inserts an item after the last item. Ignored if set before map.
         </td>
        </tr>
        <tr>
         <td>
            COLORCOL
         </td>
         <td>
            (read-only) returns the number of color column. If not exists, returns 0.
         </td>
        </tr>
        <tr>
         <td>
            COLORid
         </td>
         <td>
            the color displayed at the color column. If not defined the color box is not diplayed.
         </td>
        </tr>
        <tr>
         <td>
            COLUMNORDER
         </td>
         <td>
            defines or retrieves the display order of the columns. <br>
            Possible values a combination of: "LABEL", "COLOR" and "IMAGE". <br>
            These values also can be combined in these formats: VALUE1 (one column); VALUE1:VALUE2 (two columns) or 
            VALUE1:VALUE2:VALUE3 (three columns). <br>
            Default: "LABEL" (one column).
         </td>
        </tr>
        <tr>
         <td>
            COUNT
         </td>
         <td>
            defines the number of items in the list. <br>
            Differently from the IupList control it is not read-only. <br>
            It does not include the extra empty item when EDITABLE=Yes.
         </td>
        </tr>
        <tr>
         <td>
            DELLIN
         </td>
         <td>
            (write-only) removes the given line from the list. <br>
            To remove more than one line, use format "L-L", where the first number corresponds to the base line and 
            the second number corresponds to the number of lines to be removed. Ignored if set before map.
         </td>
        </tr>
        <tr>
         <td>
            EDITABLE
         </td>
         <td>
            (creation-only) enables the interactive editing of the list. It can be Yes or No. Default: "NO". <br>
            An empty item at the end of the list will be available so new items can be interactively inserted. <br>
            Also while editing a label, the IMAGE column will display a button so the item can be interactively removed.
         </td>
        </tr>
        <tr>
         <td>
            FOCUSCOLOR
         </td>
         <td>
            the background color when an item get the focus. Values in RGB format ("r g b"). Default: "255 235 155".
         </td>
        </tr>
        <tr>
         <td>
            FOCUSFGCOLOR
         </td>
         <td>
            the text color when an item get the focus. If not defined uses the ITEMFGCOLORid. (since 3.29)
         </td>
        </tr>
        <tr>
         <td>
            FOCUSITEM
         </td>
         <td>
            defines the current focus item. Default: "1".
         </td>
        </tr>
        <tr>
         <td>
            IMAGEid
         </td>
         <td>
            (write-only) name of the image to be used in the specified item (id). <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a>
            to associate an image to a name. See also <a href="IupImage.htm">IupImage</a>. <br>
            Image column must be available.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEACTIVEid
         </td>
         <td>
            controls the interaction with the image of an item. It can be Yes or No. Default: Yes. <br>
            Image column must be available.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEADD
         </td>
         <td>
            (write-only) name of the image that will be shown when the IupMatrixList is editable. Default: "MTXLIST_IMG_ADD". <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a>
            to associate an image to a name. See also <a href="IupImage.htm">IupImage</a>. <br>
            Image column must be available.
         </td>
        </tr>
        <tr>
         <td>
            IMAGECHECK
         </td>
         <td>
            (write-only) name of the image that will be shown when the IMAGEVALUE attribute is "IMAGECHECK". Default: "MTXLIST_IMG_CHECK". <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a>
            to associate an image to a name. See also <a href="IupImage.htm">IupImage</a>. <br>
            Image column must be available.
         </td>
        </tr>
        <tr>
         <td>
            IMAGECOL
         </td>
         <td>
            (read-only) returns the number of image column. If not exists, returns 0.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEDEL
         </td>
         <td>
            (write-only) name of the image that will be shown when the IupMatrixList is editable or when SHOWDELETE=Yes. Default: "MTXLIST_IMG_DEL". 
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a>
            to associate an image to a name. See also <a href="IupImage.htm">IupImage</a>. <br>
            Image column must be available.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEUNCHECK
         </td>
         <td>
            (write-only) name of the image that will be shown when the IMAGEVALUE attribute is "IMAGEUNCHECK". Default: "MTXLIST_IMG_UNCHECK". <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a>
            to associate an image to a name. See also <a href="IupImage.htm">IupImage</a>. <br>
            Image column must be available.
         </td>
        </tr>
        <tr>
         <td>
            IMAGEVALUEid
         </td>
         <td>
            selects the CHECK or the UNCHECK image to display for an item (id). It can be Yes or No. Default: NO.
         </td>
        </tr>
        <tr>
         <td>
            INSERTITEMid
         </td>
         <td>
            (write-only) inserts an item before the given id position (id starts at 1). <br>
            If id=COUNT+1 then it will append after the last item. <br>
            Ignored if out of bounds. <br>
            Ignored if set before map.
         </td>
        </tr>
        <tr>
         <td>
            ITEMACTIVEid
         </td>
         <td>
            controls the interaction with an item (id). It can be Yes or No. Default: "YES".
         </td>
        </tr>
        <tr>
         <td>
            ITEMFGCOLORid
         </td>
         <td>
            text color of an item (id). If not defined FGCOLOR is used.
         </td>
        </tr>
        <tr>
         <td>
            ITEMBGCOLORid
         </td>
         <td>
            background color of an item (id). If not defined BGCOLOR is used.
         </td>
        </tr>
        <tr>
         <td>
            LABELCOL
         </td>
         <td>
            (read-only) returns the number of label column. If not exists, returns 0.
         </td>
        </tr>
        <tr>
         <td>
            REMOVEITEM
         </td>
         <td>
            (write-only) removes the given item from the list.
         </td>
        </tr>
        <tr>
         <td>
            SHOWDELETE
         </td>
         <td>
            Shows only the IMAGEDEL image and ignores IMAGECHECK and IMAGEUNCHECK.
         </td>
        </tr>
        <tr>
         <td>
            TITLE
         </td>
         <td>
            title of the list. When not NULL the list will display a non scrollable title.
         </td>
        </tr>
        <tr>
         <td>
            TOPITEM
         </td>
         <td>
            (write-only) position the given item at the top of the list or near to make it visible.
         </td>
        </tr>
        <tr>
         <td>
            VALUE
         </td>
         <td>
            defines or retrieves the value of the current cell.
         </td>
        </tr>
        <tr>
         <td>
            VISIBLELINES
         </td>
         <td>
            defines the number of visible lines for the Natural Size, this means that will act also as minimum number of visible lines. Default: "3".
         </td>
        </tr>
        <tr>
         <td>
            Other Attributes
         </td>
         <td>
            Since the IupMatrixList inherits its implementation from the IupMatrix, and that one from IupCanvas, those controls attributes and callbacks can be used. <br>
            But notice that IupMatrixList uses several of them internally for its own purpose, and reusing them may affect the control behavior and appearance.
            <br>
            <br>
            Some attribute defaults were changed:
         </td>
        </tr>
        <tr>
         <td>
            EXPAND
         </td>
         <td>
            changed to "NO".
         </td>
        </tr>
        <tr>
         <td>
            ALIGNMENTLIN0
         </td>
         <td>
            changed to "ALEFT".
         </td>
        </tr>
        <tr>
         <td>
            CURSOR
         </td>
         <td>
            changed to "ARROW".
         </td>
        </tr>
        <tr>
         <td>
            FRAMETITLEHIGHLIGHT
         </td>
         <td>
            changed to "NO".
         </td>
        </tr>
        <tr>
         <td>
            HIDEFOCUS
         </td>
         <td>
            changed to "YES".
         </td>
        </tr>
        <tr>
         <td>
            SCROLLBAR
         </td>
         <td>
            changed to "VERTICAL".
         </td>
        </tr>
        <tr>
         <td>
            also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>, 
            <a href="common.htm#EXPAND">EXPAND</a>, 
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#SIZE">SIZE</a>,
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>

         </td>
        </tr>

        <tr>
         <td>
          IMAGEVALUECHANGED_CB
         </td>
         <td>
            called after the image value was interactively changed by the user (mark/unmark).
            <br>
            <br>
            function imagevaluechanged_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin, imagevalue)<br>
            ih: identifier of the element that activated the event.<br>
            lin: item line.<br>
            imagevalue: equal to 1 if the image used was IMAGECHECK or to 0 if the image used IMAGEUNCHECK.
         </td>
        </tr>
        <tr>
         <td>
            LISTACTION_CB
         </td>
         <td>
            Action generated when the state of an item in the list is changed. Also provides information on the changed item:
            <br>
            <br>
            function listaction_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> item, state)<br>
            ih: identifier of the element that activated the event.<br>
            item: Number of the changed item starting at 1.<br>
            state: Equal to 1 if the item is in focus or to 0 if the item loses its focus.
         </td>
        </tr>
        <tr>
         <td>
            LISTCLICK_CB
         </td>
         <td>
            Action generated when any mouse button is pressed over a item.
            <br>
            <br>
            function listclick_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin, col, <a href="atom.htm">atom</a> pStatus)<br>
            ih: identifier of the element that activated the event.<br>
            lin: item line.<br>
            col: item column (label, image or color).<br>
            pStatus: (char*) Status of the mouse buttons and some keyboard keys at the moment the event is generated. <br>
            The same macros used for <a href="callbacks.htm#BUTTON_CB">BUTTON_CB</a> can be used for this status.
            <br>
            <br>
            Returns: To avoid the default processing return <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a>.
         </td>
        </tr>
        <tr>
         <td>
            LISTDRAW_CB
         </td>
         <td>
            Action generated when an item needs to be redrawn. It is called before the default processing.
            <br>
            <br>
            function listdraw_cb(<a href="Ihandle.htm">Ihandle</a> ih, 
                                 <a href="integer.htm">integer</a> lin, col, x1, x2, y1, y2, 
                                 <a href="cdCanvas.htm">cdCanvas</a> cnv)<br>
            ih: identifier of the element that activated the event.<br>
            lin: item line.<br>
            col: item column (label, image or color).<br>
            x1, x2, y1, y2: bounding rectangle of the current cell in pixels, excluding the decorations.<br>
            cnv: internal canvas CD used to draw the list.
            <br>
            <br>
            Returns: If <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a> the normal drawing will take place.
         </td>
        </tr>
        <tr>
         <td>
            LISTEDITION_CB
         </td>
         <td>
            Action generated when the current cell of an item enters or leaves the edition mode. Called before the default processing.
            <br>
            <br>
            function listedition_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin, col, mode, update)<br>
            ih: identifier of the element that activated the event.<br>
            lin: item line.<br>
            col: item column (label, image or color).<br>
            mode: equal to 1 if the cell has entered the edition mode, or 0 if the cell has left the edition mode.<br>
            update: equal to 1 to redraw, or 0 to no update returning <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a>.
         </td>
        </tr>
        <tr>
         <td>
            LISTINSERT_CB
         </td>
         <td>
            Action generated when a new item is inserted into the list.
            <br>
            <br>
            function listinsert_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin)<br>
            ih: identifier of the element that activated the event.<br>
            lin: position of the new item.
         </td>
        </tr>
        <tr>
         <td>
            LISTRELEASE_CB
         </td>
         <td>
            Action generated when any mouse button is released over a item.
            <br>
            <br>
            function listrelease_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin, col, <a href="atom.htm">atom</a> pStatus)<br>
            ih: identifier of the element that activated the event.<br>
            lin: item line.<br>
            col: item column (label, image or color).<br>
            pStatus: (char*) Status of the mouse buttons and some keyboard keys at the moment the event is generated. <br>
            The same macros used for <a href="callbacks.htm#BUTTON_CB">BUTTON_CB</a> can be used for this status.
            <br>
            <br>
            Returns: To avoid the default processing return <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a>.
         </td>
        </tr>
        <tr>
         <td>
            LISTREMOVE_CB
         </td>
         <td>
            Action generated when an item is removed of the list.
            <br>
            <br>
            function listremove_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin)<br>
            ih: identifier of the element that activated the event.<br>
            lin: position of the removed item.<br>
         </td>
        </tr>
        <tr>
         <td>
          Example
         </td>
         <td>
            The following screenshot is from demo\pGUI\IupMatrixList.exw:
            <br>
            <br>
            <img border="0" src="images/iupmatrixlist1.png"/>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
