<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupOpen</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          <font face = "Arial, Helvetica">
            include pGUI.e
            <br>
            <br>
            IupOpen(nullable_string dll_root=NULL)
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Initialise IUP
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This procedure must be called before creating any controls, etc.
            <br>
            <br>
            The optional dll_root, if provided, should be something like "C:\\Program Files (x86)\\Phix\\demo\\pGUI",
            such that the appropriate win32/win64/lnx32/lnx64 subdirectory can be located. <br>
            Of course if you have (a copy of) pGUI.e and the appropriate dll/so subdirecory in your project&rsquo;s 
            working directory, there should be no need to supply anything. See also the Technicalia dropdown.
            <br>
            <br>
            <a name=IupControlsOpen></a>
            It may also be necessary to call IupControlsOpen() as well. However the only two cases I know of, 
            being IupMatrix and dials invoked via IupParams, are taken care of automatically, not that
            accidentally invoking it twice would cause any problems.
            <br>
            <br>
            See also <a href="IupClose.htm">IupClose</a>, which should be called at the end of the program.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
include pGUI.e

IupOpen()

IupClose()
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">include</font><font color="#000000"> pGUI.e

</font><font color="#5E005E">IupOpen</font><font color="#0000FF">()

</font><font color="#5E005E">IupClose</font><font color="#0000FF">()</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupClose.htm">IupClose</a>,
          <a href="IupMainLoop.htm">IupMainLoop</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td valign=top>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            If dll_root is not provided, <a href="get_proper_dir.htm">get_proper_dir</a>(<a href="command_line.htm">command_line</a>()[2]) 
            is used. In some setups it may be better to start from command_line()[1], assuming that locates pw.exe|phix correctly.<br>
            In cases such as Phix\pdemo.exw which includes Phix\demo\pGUI\pdemo.exw, a little bit of massaging is required 
            so that both the pdemo.exw files work as desired (see the latter for details).<br>
            Slightly simpler, Phix\test\terror.exw needs to use ..\demo\pGUI, whereas Phix\demo\edix\edix.exw needs ..\pGUI. <br>
            The value of dll_path may be a relative or absolute directory. While relative directories promise to be more portable (as
            in the app still works if moved to a different directory), personally I find absolute directories much easier to debug, 
            especially on a remote machine, for instance ..\pdemo\pGUI looks fine, whereas C:\Program Files (x86)\Phix\demo\demo\pGUI 
            immediately pinpoints an error with surgical precision.<br>
            Hence my recommendation is an absolute directory, ideally manually constructed from a relative fragment.<br>
            It may also be worth noting that builtins\pGUI.e is a stub include that simply contains "include ../demo/pGUI/pGUI.e".<br>
         </td>
        </tr>
       </table>
       <img src="Images/sprites/tech.open.png" title="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
