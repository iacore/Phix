<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupSetCallback</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            IupSetCallback(<a href="Ihandle.htm">Ihandles</a> ih, <a href="string.htm">string</a> name, <a href="Icallback.htm">cbfunc</a> func)
            <br>
            <i>-- or --</i>
            <br>
            IupSetCallbacks(<a href="Ihandle.htm">Ihandles</a> ih, <a href="sequence.htm">sequence</a> namefuncpairs)
            <br>
            <i>-- or --</i>
            <br>
            <a href="Ihandle.htm">Ihandles</a> ih = IupSetCallbackf(<a href="Ihandle.htm">Ihandles</a> ih, <a href="string.htm">string</a> name, <a href="Icallback.htm">cbfunc</a> func)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>Associates a callback to an event.
            <br>
            <br>
            ih: identifier of the interface element(s) [can be a single Ihandle or a (flat) sequence of them]. <br>
            name: name of the callback, see the documentation of each specific interface element for a list of valid/meaningful names. <br>
            func: a callback address (atom) from <a href="Icallback.htm">Icallback</a>(<i>"name"</i>), or NULL. If NULL removes the association.<br>
            namefuncpairs: a flat <a href="sequence.htm">sequence</a>, where the odd elements are <a href="string.htm">string</a> names and even elements 
            <a href="Icallback.htm">cbfunc</a> callbacks. Length must be even.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
            Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            All <a href="paranormal.htm">paranormalised functions</a> permit an implit invocation of IupSetCallback, as per the paragraph starting
            "If any of this troubles you" half way down that page.
            <br>
            <br>
            This function replaces the deprecated combination:
            <br>
            <br>
<!--eucode>
IupSetFunction(global_name, func)
IupSetAttribute(ih, name, global_name)
</eucode-->
<pre>
<font color="#FF0000">IupSetFunction</font><font color="#0000FF">(</font><font color="#000000">global_name</font><font color="#0000FF">,</font><font color="#000000"> func</font><font color="#0000FF">)</font>
<font color="#5E005E">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#000000"> name</font><font color="#0000FF">,</font><font color="#000000"> global_name</font><font color="#0000FF">)</font>
</pre>
            <br>
            Hence it eliminates the need for a global name. (Note that <span class="illegal">IupSetFunction</span> has been renamed/wrapped as 
            <a href="IupSetGlobalFunction.htm">IupSetGlobalFunction</a>() in pGUI, hence the red/invalid colour.)
            <br>
            <br>
            Callbacks set using IupSetCallback cannot be retrieved using <span class="illegal">IupGetFunction</span> (which is likewise now named 
            <a href="IupGetGlobalFunction.htm">IupGetGlobalFunction</a>). 
            <br>
            <br>
            The C function of the same name returns the address of the previous function associated to the action, 
            whereas the Phix function IupSetCallbackf returns ih, to help make it a bit easier to declare dialogs.
            Note that IupSetCallbackf() can usually be replaced with something more succinct: see the examples in <a href="IupSetAttributes.htm">IupSetAttributes</a>,
            and <a href="paranormal.htm">paranormalised functions</a>.
            <br>
            <br>
            Note that in C, IupSetCallbacks(ih,name,func,NULL) is surprisingly common (in fact the only way I have ever seen it used), presumably because, in C, the
            IupSetCallback(ih,name,func) routine yields a less helpful return value (which is ignored in all the C samples I have studied, and explains why the Phix 
            version is a procedure).<br>
            When translating C code to Phix such calls can/should be replaced with IupSetCallback[f](ih,name,func), in preference to IupSetCallbacks(ih,{name,func}), 
            not that there should ever be a significant difference (other than IupSetCallbackf being a function rather than a procedure).
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
IupSetCallback(canvas1,"ACTION",Icallback("redraw_cb"))
IupSetCallback({canvas1,canvas2},"ACTION",Icallback("redraw_cb"))
IupSetCallbacks({canvas1,canvas2},{"ACTION",Icallback("redraw_cb"),"MAP_CB",Icallback("map_cb")})
</eucode-->
<pre>
<font color="#5E005E">IupSetCallback</font><font color="#0000FF">(</font><font color="#000000">canvas1</font><font color="#0000FF">,</font><font color="#008000">"ACTION"</font><font color="#0000FF">,</font><font color="#5E005E">Icallback</font><font color="#800000">(</font><font color="#008000">"redraw_cb"</font><font color="#800000">)</font><font color="#0000FF">)</font>
<font color="#5E005E">IupSetCallback</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">canvas1</font><font color="#0000FF">,</font><font color="#000000">canvas2</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000">"ACTION"</font><font color="#0000FF">,</font><font color="#5E005E">Icallback</font><font color="#800000">(</font><font color="#008000">"redraw_cb"</font><font color="#800000">)</font><font color="#0000FF">)</font>
<font color="#5E005E">IupSetCallbacks</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">canvas1</font><font color="#0000FF">,</font><font color="#000000">canvas2</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#008000">"ACTION"</font><font color="#0000FF">,</font><font color="#5E005E">Icallback</font><font color="#800080">(</font><font color="#008000">"redraw_cb"</font><font color="#800080">)</font><font color="#0000FF">,</font><font color="#008000">"MAP_CB"</font><font color="#0000FF">,</font><font color="#5E005E">Icallback</font><font color="#800080">(</font><font color="#008000">"map_cb"</font><font color="#800080">)</font><font color="#800000">}</font><font color="#0000FF">)</font>
</pre>
            <br>
            <small>(set one callback on one interface element / the same callback on two elements / two callbacks on both elements)</small>
          <br>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupGetCallback.htm">IupGetCallback</a>,
          <a href="IupSetGlobalFunction.htm">IupSetGlobalFunction</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
