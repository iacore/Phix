<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupSetStrAttribute</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          <font face = "Arial, Helvetica">
            include pIUP.e
           <br>
           <br>
            IupSetStrAttribute(Ihandle ih, string name, nullable_string val, sequence data = {})
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Sets an interface element attribute.
            <br>
            <br>
            ih: Identifier of the interface element. If NULL will set in the global environment.
            <br>
            name: name of the attribute.
            <br>
            val: val of the attribute. If NULL the default value will be used.
            <br>
            data: if a non-zero length sequence is passed, a sprintf(val,data) is performed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This differs from <a href="IupSetAttribute.htm">IupSetAttribute</a> in that only strings can be stored
            and the given value is internally duplicated.
            <br>
            <br>
            IupStoreAttribute is the old name for this function.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Utility Functions</b>
         </td>
         <td>
            The following procedures can also be used to set attributes from the element:
            <br>
            <br>
            IupSetInt(Ihandle ih, string name, integer value)
<!--DEV (as needed, see also IupSetAttribute)
void IupSetStrf  (Ihandle* ih, const char* name, const char* format, ...);
void IupSetFloat (Ihandle* ih, const char* name, float value);
void IupSetDouble(Ihandle* ih, const char* name, double value);
void IupSetRGB   (Ihandle *ih, const char* name, unsigned char r, unsigned char g, unsigned char b);

void IupSetStrfId  (Ihandle *ih, const char* name, int id, const char* format, ...);
void IupSetIntId   (Ihandle* ih, const char* name, int id, int value);
void IupSetFloatId (Ihandle* ih, const char* name, int id, float value);
void IupSetDoubleId(Ihandle* ih, const char* name, int id, double value);
void IupSetRGBId   (Ihandle *ih, const char* name, int id, unsigned char r, unsigned char g, unsigned char b);

void IupSetStrfId2  (Ihandle* ih, const char* name, int lin, int col, const char* format, ...);
void IupSetIntId2   (Ihandle* ih, const char* name, int lin, int col, int value);
void IupSetFloatId2 (Ihandle* ih, const char* name, int lin, int col, float value);
void IupSetDoubleId2(Ihandle* ih, const char* name, int lin, int col, double value);
void IupSetRGBId2   (Ihandle *ih, const char* name, int lin, int col, unsigned char r, unsigned char g, unsigned char b);

IupSetStrf* functions (old IupSetfAttribute) uses the same format specification as the sprintf function in C. 
This function is very useful when several values must be combined into one string. 
When passing float values, it uses the format "%.9g" to maximize precision. 
When passing double values, it uses the format "%.18g" to maximize precision.

All the utility functions use the IupSetStrAttribute* functions internally.
-->
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupSetAttribute.htm">IupSetAttribute</a>
         </td>
        </tr>
       </table>
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
