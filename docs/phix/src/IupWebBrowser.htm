<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupWebBrowser</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupWebBrowser()
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a web browser control. It is responsible for managing the drawing of the web browser content and forwarding of its events.
            <br>
            <br>
            In Linux, the implementation uses the 
            <a id="ext237" style="color:#9B5565" href="javascript:ExternalLink('ext237');" title='http://webkitgtk.org/'>WebKit/GTK+</a>, the new GTK+ port of the 
            <a id="ext238" style="color:#9B5565" href="javascript:ExternalLink('ext238');" title='http://webkit.org'>WebKit</a>, an open-source web content engine. <br>
            More information about WebKit/GTK+ (building, dependencies, releases, etc) can be seen in Notes section. <br>
            It is only available for Linux26g4 and Linux26g4_64 systems.
            <br>
            <br>
            In Windows, the implementation uses the IupOleControl to embed an instance of the Internet Explorer WebBrowser control. <br>
            A listener interface is used to capture and handle events using the Active Template Library 
            (<a href="javascript:ExternalLink('ext239');" title='http://msdn.microsoft.com/en-us/library/t9adwcde%28v=VS.80%29.aspx'
                id="ext239" style="color:#9B5565" >ATL</a>) classes. <br>
            More information about ATL can be seen in Notes section. So it is only available for Visual C++ compilers.
            <br>
            <br>
            The C IupWebBrowserOpen function must be called after IupOpen, however in Phix this is done automatically internally and hence 
            there is no externally visible wrapper to that routine.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span>
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            To learn more about WebKit and WebKitGTK+:<br>
            <a id="ext240" style="color:#9B5565" href="javascript:ExternalLink('ext240');" title='http://webkit.org/'>The WebKit Open Source Project</a><br>
            <a id="ext241" style="color:#9B5565" href="javascript:ExternalLink('ext241');" title='http://webkitgtk.org/'>The WebKitGTK+ web page</a><br>
            <a id="ext242" style="color:#9B5565" href="javascript:ExternalLink('ext242');" title='http://live.gnome.org/WebKitGtk'>WebKitGTK+ wiki</a><br>
            <a id="ext243" style="color:#9B5565" href="javascript:ExternalLink('ext243');" title='http://trac.webkit.org/wiki/WebKitGTK'>WebKitGTK+ tracker</a>
            <br>
            <br>
            To learn more about Internet Explorer WebBrowser control and ATL:<br>
            <a id="ext244" style="color:#9B5565" href="javascript:ExternalLink('ext244');" title='http://msdn.microsoft.com/en-us/library/aa752044%28VS.85%29.aspx'>WebBrowser Control from C/C++</a><br>
            <a id="ext245" style="color:#9B5565" href="javascript:ExternalLink('ext245');" title='http://support.microsoft.com/kb/194179/en-us/'>Creating ATL sinks</a><br>
            <a id="ext246" style="color:#9B5565" href="javascript:ExternalLink('ext246');" title='http://homepage.eircom.net/~codexpert/sink/'>Examples of sinking COM events</a>
         </td>
        </tr>

        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
         </td>
        </tr>

        <tr>
         <td>
            BACKCOUNT
         </td>
         <td>
            [GTK Only] (read only) gets the number of items that precede the current page.
         </td>
        </tr>
        <tr>
         <td>
            BACKFORWARD
         </td>
         <td>
            (write only) sets the number of steps away from the current page and loads the history item. <br>
            Negative values represent steps backward while positive values represent steps forward.
         </td>
        </tr>
        <tr>
         <td>
            GOBACK
         </td>
         <td>
            (write only) go to the previous page. Same as BACKFORWARD=-1. (since 3.23)
         </td>
        </tr>
        <tr>
         <td>
            GOFORWARD
         </td>
         <td>
            (write only) go to the next page. Same as BACKFORWARD=1. (since 3.23)
         </td>
        </tr>
        <tr>
         <td>
            CANGOBACK
         </td>
         <td>
            (read-only) informs if there is a previous page. (since 3.23)
         </td>
        </tr>
        <tr>
         <td>
            CANGOFORWARD
         </td>
         <td>
            (read-only) informs if there is a next page. (since 3.23)
         </td>
        </tr>
        <tr>
         <td>
            COPY
         </td>
         <td>
            (write only) copy the selection to the clipboard. (since 3.10)
         </td>
        </tr>
        <tr>
         <td>
            FORWARDCOUNT
         </td>
         <td>
            [GTK Only] (read only) gets the number of items that succeed the current page.
         </td>
        </tr>
        <tr>
         <td>
            HTML
         </td>
         <td>
            (write only) loads a given HTML content.
         </td>
        </tr>
        <tr>
         <td>
            ITEMHISTORYid
         </td>
         <td>
            [GTK Only] (read only) Returns the URL associated with a specific history item. <br>
            Negative "id" value represents a backward item while positive "id" value represents a forward item ("0" represents the current item).
         </td>
        </tr>
        <tr>
         <td>
            INNERTEXT
         </td>
         <td>
            [Windows Only]: the innerText property of the HTML element marked with the ID given by the attribute ELEMENT_ID. (since 3.24)
         </td>
        </tr>
        <tr>
         <td>
            ATTRIBUTE
         </td>
         <td>
            [Windows Only]: the content attribute of the HTML element marked with the ID given by the attribute ELEMENT_ID. <br>
            The name of the content attribute is given by the attribute ATTRIBUTE_NAME. (since 3.24)
         </td>
        </tr>
        <tr>
         <td>
            PRINT
         </td>
         <td>
            (write only) shows the print dialog. (since 3.10)
         </td>
        </tr>
        <tr>
         <td>
            PRINTPREVIEW
         </td>
         <td>
            [Windows Only]: shows a print preview dialog. (since 3.30)
         </td>
        </tr>
        <tr>
         <td>
            RELOAD
         </td>
         <td>
            (write only) reloads the page in the webbrowser.
         </td>
        </tr>
        <tr>
         <td>
            SELECTALL
         </td>
         <td>
            (write only) selects all contents. (since 3.10)
         </td>
        </tr>
        <tr>
         <td>
            STATUS
         </td>
         <td>
            (read only) returns the load status. Can be "LOADING", "COMPLETED" or "FAILED".
         </td>
        </tr>
        <tr>
         <td>
            STOP
         </td>
         <td>
            (write only) stops any ongoing load in the webbrowser.
         </td>
        </tr>
        <tr>
         <td>
            VALUE
         </td>
         <td>
            sets a specified URL to load into the webbrowser, or retrieve the current URL.
         </td>
        </tr>
        <tr>
         <td>
            ZOOM
         </td>
         <td>
            the zoom factor of the browser in percent. No zoom is 100%. (since 3.10)
         </td>
        </tr>

        <tr>
         <td>
            EDITABLE
         </td>
         <td>
            enable the design mode, or the WYSIWYG HTML editor. Can be Yes or NO. (since 3.30)
            <br>
            <br>
            (All the following attributes depends on the EDITABLE attribute)
         </td>
        </tr>
        <tr>
         <td>
            NEW
         </td>
         <td>
            (write-only): initializes blank document. Value is ignored.
         </td>
        </tr>
        <tr>
         <td>
            OPENFILE
         </td>
         <td>
            (write-only): open an HTML file given its filename. <br>
            In Windows if the file is modified it will ask for a confirmation.
         </td>
        </tr>
        <tr>
         <td>
            SAVEFILE
         </td>
         <td>
            (write-only): save the contents in a HTML file given its filename. <br>
            In Linux will save in a .mhtml file with all the images packed in a single file.
         </td>
        </tr>
        <tr>
         <td>
            DIRTY
         </td>
         <td>
            [Windows Only]: Returns Yes or No if the contents has been edited by the user.
         </td>
        </tr>
        <tr>
         <td>
            UNDO
         </td>
         <td>
            (write-only): undo the last editing.
         </td>
        </tr>
        <tr>
         <td>
            REDO
         </td>
         <td>
            (write-only): redo the last editing.
         </td>
        </tr>
        <tr>
         <td>
            CUT
         </td>
         <td>
            (write-only): cuts the selection to the clipboard.
         </td>
        </tr>
        <tr>
         <td>
            PASTE
         </td>
         <td>
            (write-only): pastes the clipboard to the selection or caret.
         </td>
        </tr>
        <tr>
         <td>
            SELECTALL
         </td>
         <td>
            (write-only): selects all the contents.
         </td>
        </tr>
        <tr>
         <td>
            FIND
         </td>
         <td>
            [Windows Only] (write-only): shows a dialog for finding a text.
         </td>
        </tr>
        <tr>
         <td>
            EXECCOMMAND
         </td>
         <td>
            (write-only): executes an editing command. <br>
            Possible commands:  CUT, <wbr>COPY, <wbr>PASTE, <wbr>UNDO, <wbr>REDO, <wbr>SELECTALL, <wbr>BOLD, <wbr>ITALIC, <wbr>UNDERLINE, 
            <wbr>STRIKETHROUGH, <wbr>JUSTIFYLEFT, <wbr>JUSTIFYCENTER, <wbr>JUSTIFYRIGHT, <wbr>JUSTIFYFULL, <wbr>INDENT, <wbr>OUTDENT, 
            <wbr>REMOVEFORMAT, <wbr>DELETE, <wbr>SUBSCRIPT, <wbr>SUPERSCRIPT, <wbr>INSERTORDEREDLIST, <wbr>INSERTUNORDEREDLIST, <wbr>UNLINK.
         </td>
        </tr>
        <tr>
         <td>
            COMMANDSTATE
         </td>
         <td>
            [Windows Only] (read-only): returns the command state. Can be Yes or No. <br>
            The command name must be stored on the attribute COMMAND. 
         </td>
        </tr>
        <tr>
         <td>
            COMMANDENABLED
         </td>
         <td>
            [Windows Only] (read-only): returns if the command is enabled. Can be Yes or No. <br>
            The command name must be stored on the attribute COMMAND.
         </td>
        </tr>
        <tr>
         <td>
            COMMANDTEXT
         </td>
         <td>
            [Windows Only] (read-only): returns the command text if any. <br>
            The command name must be stored on the attribute COMMAND.
         </td>
        </tr>
        <tr>
         <td>
            COMMANDVALUE
         </td>
         <td>
            [Windows Only] (read-only): returns the command value if any. <br>
            The command name must be stored on the attribute COMMAND.
         </td>
        </tr>
        <tr>
         <td>
            INSERTIMAGE
         </td>
         <td>
            (write-only): inserts an image given its url. <br>
            In Windows if value is NULL displays a system dialog for inserting an image.
         </td>
        </tr>
        <tr>
         <td>
            INSERTIMAGEFILE
         </td>
         <td>
            (write-only): inserts an image given its filename.
         </td>
        </tr>
        <tr>
         <td>
            CREATELINK
         </td>
         <td>
            (write-only): inserts a link given its url. <br>
            In Windows if value is NULL displays a system dialog for editing a link.
         </td>
        </tr>
        <tr>
         <td>
            INSERTTEXT
         </td>
         <td>
            (write-only): inserts a text at the current selection or caret.
         </td>
        </tr>
        <tr>
         <td>
            INSERTHTML
         </td>
         <td>
            (write-only): inserts a formatted text at the current selection or caret.
         </td>
        </tr>
        <tr>
         <td>
            FONTNAME
         </td>
         <td>
            font face name. In Linux is write-only.
         </td>
        </tr>
        <tr>
         <td>
            FONTSIZE
         </td>
         <td>
            font relative size. In Linux is write-only. <br>
            Can be a number form "1" to "7", <wbr>meaning 1: x-small, <wbr>2: small, <wbr>3: medium, <wbr>4: large, 
            <wbr>5: x-large, <wbr>6: xx-large, <wbr>7: xxx-large.
         </td>
        </tr>
        <tr>
         <td>
            FORMATBLOCK
         </td>
         <td>
            The block format. In Linux is write-only. <br>
            It can be: "Heading 1", <wbr>"Heading 2", <wbr>"Heading 3", <wbr>"Heading 4", <wbr>"Heading 5", <wbr>"Heading 6", 
            <wbr>"Paragraph", <wbr>"Preformatted" <wbr>and <wbr>"Block Quote". <br>
            In Windows returns "Normal" for "Paragraph",  <wbr>"Formatted" for "Preformatted" and "Block Quote" is not supported.
         </td>
        </tr>
        <tr>
         <td>
            FORECOLOR
         </td>
         <td>
            the foreground color of the selected text. In Linux is write-only.
         </td>
        </tr>
        <tr>
         <td>
            BACKCOLOR
         </td>
         <td>
            the background color of the selected text. In Linux is write-only.
         </td>
        </tr>
    
        <tr>
         <td>
            also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>, 
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#NAME">NAME</a>, 
            <a href="common.htm#EXPAND">EXPAND</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>

         </td>
        </tr>

        <tr>
         <td>
          COMPLETED_CB
         </td>
         <td>
            action generated when a page successfully completed. <br>
            Can be called multiple times when a frame set loads its frames, or when a page loads also other pages.
            <br>
            <br>
            function completed_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address that completed.
         </td>
        </tr>
        <tr>
         <td>
          ERROR_CB
         </td>
         <td>
            action generated when page load fail.
            <br>
            <br>
            function error_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address that caused the error.
         </td>
        </tr>
        <tr>
         <td>
          NAVIGATE_CB
         </td>
         <td>
            action generated when the browser requests a navigation to another page. <br>
            It is called before navigation occurs. <br>
            Can be called multiple times when a frame set loads its frames, or when a page loads also other pages.
            <br>
            <br>
            function navigate_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address to navigate to.
            <br>
            <br>
            Returns: IUP_IGNORE will abort navigation (since 3.4).
         </td>
        </tr>
        <tr>
         <td>
          NEWWINDOW_CB
         </td>
         <td>
            action generated when the browser requests a new window.
            <br>
            <br>
            function newwindow_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address that is opened in the new window.
         </td>
        </tr>
        <tr>
         <td>
          UPDATE_CB
         </td>
         <td>
            [Windows Only]: action generated when the selection was changed and the editor interface needs an update. <br>
            Used only when EDITABLE=Yes. (since 3.30)
            <br>
            <br>
            function update_cb(Ihandle ih)<br>
            ih: identifier of the element that activated the event.
         </td>
        </tr>

        <tr>
         <td>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#UNMAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
            <a href="callbacks.htm#K_ANY">K_ANY</a>, 
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: All common callbacks are supported.
         </td>
        </tr>

        <tr>
         <td>
          Examples
         </td>
         <td>
            <div align="center">
             <img border="0" src="images/iupwebbrowser.png"/>
            </div>
         </td>
        </tr>

       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
