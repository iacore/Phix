<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Objects</h1>
      <div id="mainSection">
       <p>Phix has just five builtin data types:</p>
       <pre>
        &lt;-------- object ---------&gt;
        |                |
        +-atom           +-sequence
          |                |
          +-integer        +-string
       </pre>
       <ul>
        <li>An
         <b>object</b> can hold any phix data, specifically either an atom or a sequence.
        </li>
        <li>An
         <b>atom</b> can hold a single floating point numeric value(+/-1e308 to 15 significant digits), or an integer.
        </li>
        <li>An
         <b>integer</b> can hold a single whole number (roughly +/- 1,000,000,000).
        </li>
        <li>A
         <b>sequence</b> can hold a collection of values, nested to any depth, or a string
        </li>
        <li>A
         <b>string</b> can hold a series of characters, or raw binary data.
        </li>
       </ul>
       <p>At the very low level, and only when needed, for instance when invoking a routine in a dll,
        which may have been written in C or C++, and requires very specific binary format parameters, 
        Phix has all the tools needed (about a dozen) to allocate some memory, set the appropriate bits 
        and bytes, and (you can automate this) some time later release that memory for reuse.
        Such code (eg arwen) is normally written once and used in several different projects.
       </p>
       <p>However, for day-to-day use at the normal high/human-readable level, in phix you just use the
        five simple types listed above. It is entirely expected that anyone who has experience of more 
        "advanced" languages might blurt out "ridiculous" or something similar at this point. 
        However, the phix compiler/interpreter itself, the Edita programmers editor, all the demonstration 
        programs included in the package, and indeed the program used to generate this very help file 
        (docs\phix\makephix.exw), use nothing else, and are testament to the fact that the above five 
        simple types are more than perfectly adequate.
       </p>
       <p>You could theoretically write an entire application declaring all variables and parameters as 
        type object, except that it would probably not catch errors the way you might expect it to. Phix
        does also allow user defined types to be declared, however they are used primarily for validation
        and debugging purposes, rather than being fundamentally different to the above.
       </p>
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
