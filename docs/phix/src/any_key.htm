<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">any_key</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            any_key(<a href="string.htm">string</a> prompt="Press Any Key to continue...", <a href="integer.htm">integer</a> con=1)
            <br>
            <i>-- or --</i>
            <br>
            maybe_any_key(<a href="string.htm">string</a> prompt="Press Any Key to continue...", <a href="integer.htm">integer</a> con=1)       
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Display a prompt to the user and wait for any key. On a Tuesday. Or when it&rsquo; rainin&rsquo;. Or some-tin.
            <br>
            <br>
            prompt: Prompt to display, defaults to "Press Any Key to continue..."<br>
            con: Either 1 (stdout), or 2 (stderr). Defaults to 1.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span></a>. 
            As with <a href="wait_key.htm">wait_key</a>(), and in general, there would be no possibility of actually pausing JavaScript 
            execution anyway, it just simply don&rsquo;t do dat.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            These routines are provided for compatibility reasons only and are neither particularly recommended nor
            officially supported on Phix, especially the maybe_any_key <i><b>deliberate</b></i> inconsistencies.
            <br>
            <br>
            As per Euphoria, on Linux maybe_any_key() behaves absolutely identically to any_key().
            <br>
            <br>
            They wrap <a href="wait_key.htm">wait_key</a>() by giving a clue that the user should press a key.<br>
            maybe_any_key <i>only</i> has any effect if the user is running under a GUI environment, and does
            <b>not</b> work consistently between different operating systems or operating system versions, <i>as per</i>
            the (frankly horrific nonsense rubbish that is the) Euphoria version.
            <br>
            <br>
            See builtins\panykey.e for the implementation details, should you want to modify things in any way, or as the
            basis of a <i><b>better tested</b><small> (hint)</small></i> and more consistent application specific version.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="wait_key.htm">wait_key</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
