<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">c_func</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          <a href="atom.htm">atom</a> a = c_func(<a href="integer.htm">integer</a> rid, <a href="sequence.htm">sequence</a> s={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Call a C function.
            <br>
            <br>
            rid must be a result from <a href="define_c_func.htm">define_c_func</a>(). <br>
            s is a <a href="sequence.htm">sequence</a> of argument values of length n, where n is the number of arguments required
             by the function. <br>
            a will be the result returned by the C function.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span></a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            If the C function does not take any arguments then s should be {}.
          <br>
          <br>
            If you pass an argument value which contains a fractional part, 
            where the C function expects a C integer type, the argument is
            rounded towards 0, for example 5.9 is passed as 5, -5.9 is 
            passed as -5.
          <br>
          <br>
           The C function could be part of a .dll or .so created via a <a href="format.htm">format</a> DLL/SO directive.
          <br>
          <br>
            <b>NB</b>: While <i>call_func</i>(id,args) can now be invoked via id(args), you <b><i>cannot</i></b> replace c_func(rid,s) with rid(s).
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
atom hwnd, ps, hdc
atom user32 = open_dll("user32.dll")
-- the C function BeginPaint takes a C int argument and
-- a C pointer, and returns a C int as a result:
integer BeginPaint = define_c_func(user32, "BeginPaint", {C_INT, C_PTR}, C_INT)
-- call BeginPaint, passing hwnd and ps as the arguments,
-- hdc is assigned the result:
hdc = c_func(BeginPaint, {hwnd, ps})
</eucode-->
<pre>
<font color="#004080">atom</font><font color="#000000"> hwnd</font><font color="#0000FF">,</font><font color="#000000"> ps</font><font color="#0000FF">,</font><font color="#000000"> hdc</font>
<font color="#004080">atom</font><font color="#000000"> user32</font><font color="#0000FF"> =</font><font color="#7060A8"> open_dll</font><font color="#0000FF">(</font><font color="#008000">"user32.dll"</font><font color="#0000FF">)</font>
<font color="#000080"><i>-- the C function BeginPaint takes a C int argument and
-- a C pointer, and returns a C int as a result:</i></font>
<font color="#004080">integer</font><font color="#000000"> BeginPaint</font><font color="#0000FF"> =</font><font color="#7060A8"> define_c_func</font><font color="#0000FF">(</font><font color="#000000">user32</font><font color="#0000FF">,</font><font color="#008000"> "BeginPaint"</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#004600">C_INT</font><font color="#0000FF">,</font><font color="#004600"> C_PTR</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#004600"> C_INT</font><font color="#0000FF">)</font>
<font color="#000080"><i>-- call BeginPaint, passing hwnd and ps as the arguments,
-- hdc is assigned the result:</i></font>
<font color="#000000">hdc</font><font color="#0000FF"> =</font><font color="#7060A8"> c_func</font><font color="#0000FF">(</font><font color="#000000">BeginPaint</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">hwnd</font><font color="#0000FF">,</font><font color="#000000"> ps</font><font color="#800000">}</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\VM\pcfunc.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="c_proc.htm">c_proc</a>,
          <a href="define_c_func.htm">define_c_func</a>,
          <a href="open_dll.htm">open_dll</a>,
          <a href="ccall.htm">Calling C Functions</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
