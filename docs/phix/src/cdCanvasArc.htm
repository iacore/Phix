<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">cdCanvasArc</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            cdCanvasArc(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="atom.htm">atom</a> xc, yc, w, h, angle1, angle2)
            <br><i>--or--</i><br>
            cdCanvasSector(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="atom.htm">atom</a> xc, yc, w, h, angle1, angle2)
            <br><i>--or--</i><br>
            cdCanvasChord(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="atom.htm">atom</a> xc, yc, w, h, angle1, angle2)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            cdCanvasArc draws the arc of an ellipse aligned with the axis, using the current foreground color and line width and style.<br>
            cdCanvasSector fills the arc, according to the current interior style, in the shape of a pie.<br>
            cdCanvasChord fills the arc, according to the current interior style, with the start and end points of the arc connected.
            <br>
            <br>
            The coordinate (xc,yc) defines the center of the ellipse. Dimensions w and h define the elliptic axes X and Y, respectively. 
            <br>
            <br>
            Angles angle1 and angle2 are in degrees and oriented counter-clockwise, ie East/3:00 is 0 (or 360), North/12:00 is 90, West/9:00 is 180 and South/6:00 is 270.<br>
            They define the arc start and end, but they are not the angle relative to the center, except when w==h and the ellipse is reduced to a circle. <br>
            The arc starts at the point (xc+(w/2)*cos(angle1), yc+(h/2)*sin(angle1)) and ends at (xc+(w/2)*cos(angle2), yc+(h/2)*sin(angle2)). <br>
            A complete ellipse can be drawn using 0 and 360 as the angles. <br>
            If angle2 is less than angle1 it will be increased by 360 until it is greater than angle1. 
            <br>
            <br>
            The angles are specified so if the size of the ellipse (w x h) is changed, its shape is preserved. <br>
            So the angles relative to the center are dependent from the ellipse size. <br>
            The actual angle can be obtained using rangle = atan2((h/2)*sin(angle), (w/2)*cos(angle)).
            <br>
            <br>
            To specify the angle in radians, you can use the definition CD_RAD2DEG to multiply the value in radians before passing the angle to CD.
            <br>
            <br>
            When the interior style CD_HOLLOW is defined, cdCanvasSector behaves like cdCanvasArc plus two lines connecting to the center, and
            cdCanvasChord behaves like cdCanvasArc plus a line connecting the arc start and end points.
            <br>
            <br>
            When translating to Phix, the C functions <span class="illegal">cdfCanvasArc</span>(), <span class="illegal">cdfCanvasSector</span>(), 
            and <span class="illegal">cdfCanvasChord</span>() should simply have the 'f' deleted.<br>
            wdCanvasArc(), wdCanvasSector(), and wdCanvasChord() are identical, except the parameters are in world coordinates.
<!-- DEV (cdf/wd)
void cdCanvasSector(cdCanvas* canvas, int xc, int yc, int w, int h, double angle1, double angle2); [in C]
void cdfCanvasSector(cdCanvas* canvas, double xc, double yc, double w, double h, double angle1, double angle2); [in C]
void wdCanvasSector(cdCanvas* canvas, double xc, double yc, double w, double h, double angle1, double angle2); (WC) [in C]
-->
         </td>
        </tr>
        <tr>
         <td>
          <b>Parameters:</b>
         </td>
         <td>
            <div align="center">
              <center>
              <table border="0" cellpadding="6" cellspacing="0" style="border-collapse: collapse" bordercolor="#111111">
                <tr>
                  <td>cdCanvasArc<br><img src="images/arc.gif" border="2" width="161" height="160" /></td>
                  <td>cdCanvasSector<br><img src="images/sector.gif" border="2" width="161" height="160" /></td>
                  <td>cdCanvasChord<br><img src="images/chord.gif" border="2" width="161" height="160" /></td>
                </tr>
              </table>
              </center>
            </div>
         </td>
        </tr>
        <tr>
         <td>
          <b><nobr>Auxillary routine:</nobr></b>
         </td>
         <td>
            <b>cdCanvasCircle</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="atom.htm">atom</a> x, y, r, <a href="integer.htm">boolean</a> filled=false) 
            is just a simple convenience wrapper to cdCanvasArc(canvas, x, y, r, r, 0, 360) when filled is false, or cdCanvasSector(<i>&lt;ditto&gt;</i>) when 
            filled is true.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          Several of the attributes documented in <a href="cdCanvasLine.htm#attr">cdCanvasLine</a>() also apply to cdCanvasArc.<br>
          Several of the attributes documented in <a href="cdCanvasBox.htm#attr">cdCanvasBox</a>() also apply to cdCanvasSector/Chord.
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
