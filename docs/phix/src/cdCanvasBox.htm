<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">cdCanvasBox</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            cdCanvasBox(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="atom.htm">atom</a> xmin, xmax, ymin, ymax)
            <br><i>-- or --</i><br>
            wdCanvasBox(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="atom.htm">atom</a> xmin, xmax, ymin, ymax)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
<!-- DEV (cdf/wd)
void cdCanvasBox(cdCanvas* canvas, int xmin, int xmax, int ymin, int ymax); [in C]
void cdfCanvasBox(cdCanvas* canvas, double xmin, double xmax, double ymin, double ymax); [in C]
void wdCanvasBox(cdCanvas* canvas, double xmin, double xmax, double ymin, double ymax); (WC) [in C]
-->
            Fills a rectangle according to the current interior style. <br>
            All points in the interval xmin&lt;=x&lt;=xmax, ymin&lt;=y&lt;=ymax will be painted. <br>
            When the interior style CD_HOLLOW is defined, the function behaves like its equivalent cdRect.
            <br>
            <br>
            When translating to Phix, the C function <span class="illegal">cdfCanvasBox</span>() should simply have the 'f' deleted.
            <a name=attr></a>
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
            Supported. However see the notes for <a href="cdCanvasBegin.htm">cdCanvasBegin</a>(). Replaced by <a href="gCanvas.htm#gCanvasRect">gCanvasRect</a> in xpGUI.
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            These also apply to <a href="cdCanvasArc.htm">cdCanvasSector/Chord</a>.<br>
            <small>Aside: Inserting "Set"/"Get" into the C function names might be tedious, but then again so would prefixing with "{} =".</small>
            <br>
            <br>
<!--<a name="cdCanvasBox.htm#attr">cdCanvasBackOpacity</a>-->
            <b>cdCanvasSetBackOpacity</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="integer.htm">integer</a> opacity)<br>
            <i>-- or --</i><br>
            <a href="integer.htm">integer</a> opacity = <b>cdCanvasGetBackOpacity</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Configures the background opacity to filling primitives based on the foreground and background colors. <br>
            Note that backopacity is only used when InteriorStyle is <b>CD_HATCH</b> or <b>CD_STIPPLE</b>. <br>
            Values: <b>CD_TRANSPARENT</b> or <b>CD_OPAQUE</b>. Default value: <b>CD_TRANSPARENT</b>. <br>
            When translating C code, <span class="illegal">cdCanvasBackOpacity</span>() needs Set/Get inserted, and for the latter CD_QUERY removed.<br>
            If it is opaque the primitive will erase whatever is in the background with the background color. <br>
            If it is transparent, only the foreground color is painted. In some drivers is always opaque.<br>
            <br>
            <p align="center"><font size="4">Back Opacity Attribute<br></font>
            <img src="images/opacity.gif" border="2" width="260" height="136"/></p>
            <br>
            <a name=cdCanvasSetFillMode></a>
            <br>
            <b>cdCanvasSetFillMode</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="integer.htm">integer</a> mode)<br>
            <i>-- or --</i><br>
            <a href="integer.htm">integer</a> mode = <b>cdCanvasGetFillMode</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Configures or retrieves a predefined polygon fill rule (CD_EVENODD or CD_WINDING).<br>
            Default value: <b>CD_EVENODD</b>. When translating C code, <span class="illegal">cdCanvasFillMode</span>() needs Set/Get inserted, and for the latter CD_QUERY removed.<br>
            <br>
            <p align="center"><font size="4">Fill Modes</font><br>
            <img src="images/fillmode.gif" border="2" width="260" height="136"/></p>
            <br>
            <br>
            <b>cdCanvasSetInteriorStyle</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="integer.htm">integer</a> style)<br>
            <i>-- or --</i><br>
            <a href="integer.htm">integer</a> style = <b>cdCanvasGetInteriorStyle</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Configures or retrieves the current style for the area filling primitives: <b>CD_SOLID</b>, <strong><b>CD_HOLLOW</b></strong>, <b>CD_HATCH</b>,
            <b>CD_STIPPLE</b> or <b>CD_PATTERN</b>.<br>
            Note that only <b>CD_HATCH</b> and <b>CD_STIPPLE</b> are affected by the backopacity.<br>
            Default value: <b>CD_SOLID</b>. When translating C code, <span class="illegal">cdCanvasInteriorStyle</span>() needs Set/Get inserted, and for the latter CD_QUERY removed.<br>
            If <i>a stipple</i> or <i>a pattern</i> were not defined, when they are selected the state of the attribute is not changed. <br>
            When the style <strong>CD_HOLLOW</strong> is defined, functions 
            <a name="cdCanvasBox.htm">cdCanvasBox</a>() and 
            <a href="cdCanvasArc.htm">cdCanvasSector</a>() behave as their equivalent 
            <a href="cdCanvasRect.htm">cdCanvasRect</a>() and 
            <a href="cdCanvasArc.htm">cdCanvasArc</a>()+<a href="cdCanvasLine.htm">cdCanvasLine</a>()s,
            and the polygons with style <b>CD_FILL</b> behave like <b>CD_CLOSED_LINES</b>.
            <br>
            <br>
            <b>cdCanvasSetHatch</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="integer.htm">integer</a> style)<br>
            <i>-- or --</i><br>
            <a href="integer.htm">integer</a> style = <b>cdCanvasGetHatch</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Configures or retrieves a predefined hatch style (CD_HORIZONTAL, CD_VERTICAL, CD_FDIAGONAL, CD_BDIAGONAL, CD_CROSS or CD_DIAGCROSS) and sets 
            the interior style to CD_HATCH.<br>
            The lines are drawn with the foreground color, and the background is drawn with the background color if back opacity is opaque.<br>
            Default value: CD_HORIZONTAL. When translating C code, <span class="illegal">cdCanvasHatch</span>() needs Set/Get inserted, and for the latter CD_QUERY removed.<br>
            The foreground and background colors must be set before setting the style. In some drivers is always opaque.<br>
            <br>
            <p align="center"><font size="4">Fill Modes</font><br>
            <img src="images/hatch.gif" border="2" width="182" height="348"/></p>
            <br>
            <br>
            <b>cdCanvasSetStipple</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, 
                                      <a href="atom.htm">atom</a> width, height, 
                                      <a href="string.htm">atom_string</a> stipple)
<!--
void cdCanvasStippleImImage(cdCanvas* canvas, const imImage* image)
-->
            <br>
            <br>
            Defines a wxh matrix of zeros (0) and ones (1). <br>
            The zeros are mapped to the background color or are transparent, according to the background opacity attribute. <br>
            The ones are mapped to the foreground color. The function sets the interior style to CD_STIPPLE. <br>
            To avoid having to deal with matrices in C, the element (i,j) of stipple is stored as stipple[j*w+i]. <br>
            (stipple is expected to be a binary string or a memory pointer.)
            The origin is the left bottom corner of the image. <br>
            It does not need to be stored by the application, as it is internally replicated by the library.  <br>
            In some drivers is always opaque. The foreground and background colors must be set before setting the style. <br>
            When translating C code, <span class="illegal">cdCanvasStipple</span>() needs Set inserted.
<!--
            <br>
            <br>
            In the imImage version, it must be a binary image (color_space=IM_BINARY).
-->
            <br>
            <br>
            <b>wdCanvasSetStipple</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, 
                                      <a href="atom.htm">atom</a> width, height, 
                                      <a href="string.htm">atom_string</a> stipple,
                                      <a href="atom.htm">atom</a> width_mm, height_mm)
            <br>
            <br>
            Allows specifying the stipple in world coordinates. <br>
            Another stipple will be created with the size in pixels corresponding to the specified size in millimeters. <br>
            The new size in pixels will be an integer factor of the original size that is closest to the size in millimeters. <br>
            The use of this function may produce very large or very small stipples.<br>
            When translating C code, <span class="illegal">wdCanvasStipple</span>() needs Set inserted.
            <br>
            <br>
            {<a href="integer.htm">integer</a> w, <a href="integer.htm">integer</a> h, <a href="string.htm">nullable_string</a> stipple} = 
            <b>cdCanvasGetStipple</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Returns the current stipple and its dimensions. Returns NULL if no stipple was defined.
            <br>
            <br>
            <b>cdCanvasSetPattern</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, 
                                      <a href="atom.htm">atom</a> width, height, 
                                      <a href="string.htm">sequence</a> pattern)
<!--
void cdCanvasPatternImImage(cdCanvas* canvas, const imImage* image)
-->
            <br>
            <br>
            Defines a new wxh color matrix and sets the interior style to CD_PATTERN. <br>
            To avoid having to deal with matrices in C, the color element (i,j) is stored as pattern[j*w+i]. <br>
            (pattern is expected to be a flat sequence of dwords.)
            The origin is the left bottom corner of the image. <br>
            It does not need to be stored by the application, as it is internally replicated by the library.<br>
            When translating C code, <span class="illegal">cdCanvasPattern</span>() needs Set inserted.
<!--
            <br>
            <br>
            In the imImage version, it must be a displayable image (imImageIsBitmap).
-->
            <br>
            <br>
            <b>wdCanvasSetPattern</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, 
                                      <a href="atom.htm">atom</a> width, height, 
                                      <a href="sequence.htm">sequence</a> pattern,
                                      <a href="atom.htm">atom</a> width_mm, height_mm)
            <br>
            <br>
            Allows specifying the pattern in world coordinates. <br>
            Another pattern will be created with the size in pixels corresponding to the specified size in millimeters. <br>
            The new size in pixels will be an integer factor of the original size that is closest to the size in millimeters. <br>
            The use of this function may produce very large or very small patterns.<br>
            When translating C code, <span class="illegal">wdCanvasPattern</span>() needs Set inserted.
            <br>
            <br>
            {<a href="integer.htm">integer</a> w, <a href="integer.htm">integer</a> h, <a href="sequence.htm">sequence</a> pattern} = 
            <b>cdCanvasGetPattern</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Returns the current pattern and its dimensions. Returns NULL if no pattern was defined.
            <br>
            <br>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
