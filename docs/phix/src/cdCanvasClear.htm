<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">cdCanvasClear</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            cdCanvasClear(<a href="cdCanvas.htm">cdCanvas</a> canvas)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         <td>
            Clears the active canvas using the current background color.
            <br>
            <br>
            The function cdClear() is eqivalent to cdCanvasClear(cdActiveCanvas()).
            <br>
            <br>
            This action is interpreted very differently by each driver. <br>
            Many drivers simply draw a rectangle with the current background color. <br>
            It is not necessary to call cdClear when the canvas has just been created, as at this moment 
            it is already clean (CD_WHITE), unless you set a different background colour. <br>
            Most file-based drivers do not implement this function.
            <a name=aux></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Auxillary functions:</b>
         <td>
            <b>cdCanvasFlush</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Has a different meaning for each driver. <br>
            It is useful to send information to buffered devices and to move to a new page or layer. <br>
            In all cases, the current canvas attributes are preserved.
            <br>
            <br>
            <a href="atom.htm">atom</a> pCdState = <b>cdCanvasSaveState</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas)
            <br>
            <br>
            Saves the state of attributes of the active canvas. <br>
            It does not save cdPlay callbacks, polygon creation states (begin/vertex/vertex/...), the palette, complex clipping regions and driver internal attributes.<br>
            The result should be considered an opaque pointer, suitable only for passing to the following two functions.
            <br>
            <br>
            <b>cdCanvasRestoreState</b>(<a href="cdCanvas.htm">cdCanvas</a> canvas, <a href="atom.htm">atom</a> pCdState)
            <br>
            <br>
            Restores the attribute state of the active canvas. <br>
            It can be used between canvases of different contexts. <br>
            It can be used several times for the same state. 
            <br>
            <br>
            <b>cdReleaseState</b>(<a href="atom.htm">atom</a> pCdState)
            <br>
            <br>
            Releases the memory allocated by the cdCanvasSaveState function.
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
