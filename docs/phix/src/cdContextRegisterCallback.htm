<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">cdContextRegisterCallback</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="integer.htm">integer</a> res = cdContextRegisterCallback(<a href="cdCreateCanvas.htm#cdContext">cdContext</a> context,
                                                                              <a href="integer.htm">integer</a> cb,
                                                                              <a href="atom.htm">atom</a> cbFunc)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         <td>
            Used to customize the behavior of the <a href="cdCanvasPlay.htm">cdCanvasPlay</a>() function.
            <br>
            <br>
            If you register a known callback function, it will be called during the processing loop of cdCanvasPlay.
            <br>
            <br>
            Returns CD_OK if the specified callback is supported or CD_ERROR otherwise.
            <br>
            <br>
            The callback itself should return CD_CONTINUE, if it returns CD_ABORT, the cdCanvasPlay function is aborted. <br>
            The callback identifiers of a given driver must be in the header file relative to that driver, with 
            prefix "CD_XXYYYCB", where XX identifies that driver and YYY identifies the callback name.
            <br>
            <br>
            There is a default callback common to all implementations of cdPlay, CD_SIZECB. Its definition is:
            <br>
            <br>
            int cdResizeCB(cdCanvas* canvas, int width, int height, double mm_width, double mm_height)
            <br>
            <br>
            It returns the size of the image in the file before any function in the CD library is called, so that 
            you can call the cdCanvasPlay function without an active canvas and create the canvas inside the callback. <br>
            Its values are the same as returned by the <a href="cdCanvasGetSize.htm">cdCanvasGetSize</a>() function.
            <br>
            <br>
            Note: pGUI.e does not yet define any callback identifiers other than CD_SIZECB.
            <br>
            <br>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
