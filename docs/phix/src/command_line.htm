<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">command_line</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          sequence s = command_line()
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Return a sequence of strings, where each string is a word from the
          <a href="refman_1.htm#3">command-line</a> that started
             your program. The first word will be the path to either the Euphoria
             executable,
          <b>
           <font color="#030303">ex.exe</font>,
           <font color="#030303">exw.exe</font>
          </b>or
          <b>
           <font color="#030303">exu</font>
          </b>,
              or to your
          <font color="#030303">
           <b>bound executable</b>
          </font> file. 
             The next word
             is either the name of your Euphoria main file, or (again) the path
             to your bound executable file. After
             that will come any extra words typed by the user. You can use
             these words in your program.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
<!--DEV-->
         <td>The Euphoria interpreter itself does not use any
             command-line options. You are free to use any options for your own program.
          <br>
          <br>
            The user can put quotes around a series of words to
            make them into a single argument.
          <br>
          <br>
            If you
           <font color="#030303">
            <b>bind</b>
           </font> your program you will
             find that all command-line arguments remain the same, except for the first
             two, even though your user no longer types "ex" on the
             command-line (see examples below).
          <br>
          <br>
            In the special case of "p p test" (and "p p p test" etc) command_line() returns
            the same results as "p test" as to do otherwise would just hamper testing, cause 
            general confusion, and gain nothing.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
-- The user types:  p myprog myfile.dat 12345 "the end"
cmd = command_line()
-- cmd will be:
      {"C:\Program Files (x86)\Phix\p.exe",
       "myprog",
       "myfile.dat",
       "12345",
       "the end"}
</eucode-->
<pre>
<font color="#000000"></font><font color="#000080"><i>-- The user types:  p myprog myfile.dat 12345 "the end"
</i></font><font color="#000000">cmd</font><font color="#0000FF"> =</font><font color="#5E005E"> command_line</font><font color="#0000FF">()
</font><font color="#000080"><i>-- cmd will be:
</i></font><font color="#0000FF">      {</font><font color="#008000">"C:</font><font color="#FF0000">\</font><font color="#000000">Program Files</font><font color="#800000"> (</font><font color="#000000">x86</font><font color="#800000">)</font><font color="#000000">\Phix\p</font><font color="#FF0000">.</font><font color="#000000">exe</font><font color="#FF0000">"</font><font color="#0000FF">,
</font><font color="#008000">       "myprog"</font><font color="#0000FF">,
</font><font color="#008000">       "myfile.dat"</font><font color="#0000FF">,
</font><font color="#008000">       "12345"</font><font color="#0000FF">,
</font><font color="#008000">       "the end"</font><font color="#0000FF">}</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
-- Your program is bound with the name "myprog.exe"
-- and is stored in the directory c:\myfiles
-- The user types:  myprog myfile.dat 12345 "the end"
cmd = command_line()
-- cmd will be:
       {"C:\MYFILES\MYPROG.EXE",
        "C:\MYFILES\MYPROG.EXE", -- spacer
        "myfile.dat",
        "12345",
        "the end"
        }
-- Note that all arguments remain the same as example 1
-- except for the first two. The second argument is always
-- the same as the first and is inserted to keep the numbering
-- of the subsequent arguments the same, whether your program
-- is bound as a .exe or not.
</eucode-->
<pre>
<font color="#000000"></font><font color="#000080"><i>-- Your program is bound with the name "myprog.exe"
-- and is stored in the directory c:\myfiles
-- The user types:  myprog myfile.dat 12345 "the end"
</i></font><font color="#000000">cmd</font><font color="#0000FF"> =</font><font color="#5E005E"> command_line</font><font color="#0000FF">()
</font><font color="#000080"><i>-- cmd will be:
</i></font><font color="#0000FF">       {</font><font color="#008000">"C:</font><font color="#FF0000">\</font><font color="#000000">MYFILES\MYPROG</font><font color="#FF0000">.</font><font color="#000000">EXE</font><font color="#FF0000">"</font><font color="#0000FF">,
</font><font color="#008000">        "C:</font><font color="#FF0000">\</font><font color="#000000">MYFILES\MYPROG</font><font color="#FF0000">.</font><font color="#000000">EXE</font><font color="#008000">", -- spac</font><font color="#FF0000">e</font><font color="#000000">r
</font><font color="#008000">        "myfile.dat"</font><font color="#0000FF">,
</font><font color="#008000">        "12345"</font><font color="#0000FF">,
</font><font color="#008000">        "the end"
</font><font color="#0000FF">        }
</font><font color="#000080"><i>-- Note that all arguments remain the same as example 1
-- except for the first two. The second argument is always
-- the same as the first and is inserted to keep the numbering
-- of the subsequent arguments the same, whether your program
-- is bound as a .exe or not.</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="getenv.htm">getenv</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
