<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">crash</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
         crash(<a href="string.htm">string</a> fmt, <a href="object.htm">object</a> data={}, integer nFrames=1)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Crash the running program, displaying a formatted error message the way <a href="printf.htm">printf</a>() does.
            <br>
            <br>
            fmt: the message text, optionally with format specifiers as per <a href="sprintf.htm">sprintf</a>.<br>
            data: an object, defaulted to {}, as per <a href="sprintf.htm">sprintf</a>.<br>
            nFrames: number of frames to pop from the stack, see below.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            The actual message shown, both on the standard error console and in ex.err[or as specified via crash_file()], is <a href="sprintf.htm">sprintf</a>(fmt, data). 
            <br>
            <br>
            The default value for nFrames pops the crash routine itself, and that is suitable for most application code.<br>
            Several builtins\ and builtins\VM\ files try to report the error on the calling statement rather than in themselves, 
            for instance it is easily several thousand times more likely that the wrong parameters were passed to printf(), 
            than the actual problem being a bug within printf() itself.
            <br>
            <br>
            The program terminates as for any runtime error, unless there exists a containing <a href="try.htm">try/catch</a> statement.
<!--
            <br>
            <br>
            Note that crash() is slightly more sanitised, and biased slightly away from developer-friendliness and more towards 
            user-friendliness (yeah, not really buying that one either). As a developer, I prefer throw() and even 9/0 to crash(), 
            at least when debugging, although to be fair the difference can be a bit subtle. Lastly, crash() predates throw() by 
            several years, if that means anything.
-->
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
if fn=-1 then
    crash("cannot open config file")
end if
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">if</font><font color="#000000"> fn</font><font color="#0000FF">=-</font><font color="#000000">1</font><font color="#008080"> then
</font><font color="#5E005E">    crash</font><font color="#0000FF">(</font><font color="#008000">"cannot open config file"</font><font color="#0000FF">)
</font><font color="#008080">end if</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            Partly in builtins\pCrashN.e (an autoinclude), but mainly via <a href="crash_message.htm">crash_message</a>() and :!iDiag in builtins\VM\pDiag.e (also an autoinclude)
            - be warned however it is low-level complicated stuff that you do not need to know. 
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="printf.htm">printf</a>,
          <a href="sprintf.htm">sprintf</a>,
          <a href="crash_file.htm">crash_file</a>,
          <a href="crash_message.htm">crash_message</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
