<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">crash_message</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
         crash_message(<a href="string.htm">string</a> s)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>Specify a string, s, to be printed on the screen in the event
             that Phix must stop your program due to a compile-time or
             run-time error.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Not (yet) supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            Normally Phix prints a diagnostic message such as "syntax error" or "divide by zero" on the screen, as well as
            dumping debugging information into <b>ex.err</b>. While plain english to the average programmer, such messages 
            are unlikely to be meaningful for your users unless they also happen to be Phix programmers. 
            By calling crash_message() you can control the message that will appear on the screen.
            Debugging information is still be stored in the ex.err file.
            You do not lose any information by doing this.
          <br>
          <br>
            s may contain '\n', new-line characters, so your message can
             span several lines on the screen. Phix will switch to the
             top of a clear
           <font color="#050505">text-mode</font> screen
             before printing your message.
          <br>
          <br>
            You can call crash_message() as many times as you like from
            different parts of your program. The message specified by the
            last call will be the one displayed.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
crash_message("An unexpected error has occurred!\n" &
              "Please contact john_doe@whoops.com\n" &
              "Do not delete the file \"ex.err\".\n")
</eucode-->
<pre>
<font color="#5E005E">crash_message</font><font color="#0000FF">(</font><font color="#008000">"An unexpected error has occurred!\n"</font><font color="#0000FF"> &amp;</font>
<font color="#008000">              "Please contact john_doe@whoops.com\n"</font><font color="#0000FF"> &amp;</font>
<font color="#008000">              "Do not delete the file \"ex.err\".\n"</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            via :%pCrashMsg in builtins\VM\pDiag.e (an autoinclude) - be warned however it is low-level complicated stuff that you do not need to know. 
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="abort.htm">abort</a>,
          <a href="crash_file.htm">crash_file</a>,
          <a href="debugging.htm">debugging and profiling</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
