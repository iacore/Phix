<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Dynamic Calls</h1>
      <div id="mainSection">
        These routines let you call Phix procedures and functions using a
        unique <a href="integer.htm">integer</a> known as a <a href="routine_if.htm">routine_id</a>,
        rather than by specifying the name of the routine.
       <br>
       <br>
        Since 0.8.3, a plain <code>xxx</code>, <i>not</i> followed by '(', is equivalent to/treated by the compiler as 
        <code>routine_id("xxx")</code>, and in a similar vein, after <code>integer rid = xxx</code> the compiler will
        treat <code>rid(a,b,c)</code> as <code>call_func/proc[depending on context](rid,{a,b,c})</code>. In other words
        routine(id)s became first class citizens in 0.8.3, and while much of what follows is strictly speaking OTT, it
        is probably still helpful to understand the basic mechanisms, which are all still at work, and occasionally can
        be more flexible, for instance <code>call_func(rid,args)</code> might cope with 3, 4, or 5 parameters in args,
        whereas <code>rid(a,b,c)</code> is quite obviously 3 and only 3 parameters, full stop. <small>(OK, not quite
        full stop, should you be looking for the equivalent of (say) JavaScript&rsquo;s "..." spread operator, that is
        when calling a routine, then call_func/proc implicitly achieves that).</small>
       <br>
       <br>
        <table style="width: auto;">
         <tr>
          <td>
           <a href="routine_id.htm">
            <b>routine_id</b>
           </a>
          </td>
          <td>(deprecated, as above) get a unique identifying number for a Phix routine</td>
         </tr>
         <tr>
          <td>
           <a href="call_proc.htm">
            <b>call_proc</b>
           </a>
          </td>
          <td>call a Phix procedure using a routine id</td>
         </tr>
         <tr>
          <td>
           <a href="call_func.htm">
            <b>call_func</b>
           </a>
          </td>
          <td>call a Phix function using a routine id</td>
         </tr>
        </table>
        <div class="clear"></div>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
