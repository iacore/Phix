<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">decode_flags</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          <a href="string.htm">string</a> res = decode_flags(<a href="sequence.htm">sequence</a> FlagSet, <a href="atom.htm">atom</a> v, <a href="string.htm">string</a> sep="+")
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Create a human readable string for a bit field.
            <br>
            <br>
            FlagSet: a table of {flag,text} pairs.<br>
            v: the value to be deciphered.<br>
            sep: a separator, default "+".
            <br>
            <br>
            Returns a <a href="string.htm">string</a> representing the bit settings of v.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            This is useful anywhere you have a bitmap field and want to show a human-readable version. <br>
            Further examples can be found in demo\arwendemo\filedump.exw
            <br>
            <br>
            Obviously each application must define its own FlagSet(s).<br>
            The order of FlagSet determines the order things appear in the result.<br>
            If a description begins with '-', the separator(optional p3) is omitted. <br>
            A decription(s) of "" can be used to ignore/suppress specific bit settings.<br>
            The first entry in FlagSet can be eg {0,"closed"} to specify the "no bits set" meaning.<br>
            Any bits not recognised/ignored are returned as a hex value at the start.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
-- (these "FILE_ATTRIBUTE_XXX" flags can be found in demo\arwen\constants.e)
constant FileFlagSet = {{FILE_ATTRIBUTE_READONLY,  "R"},
                        {FILE_ATTRIBUTE_SYSTEM,    "S"},
                        {FILE_ATTRIBUTE_HIDDEN,    "H"},
                        {FILE_ATTRIBUTE_DIRECTORY, "D"}}

? decode_flags(FileFlagSet,#17,"")  -- "RSHD"
</eucode-->
<pre>
<font color="#000080"><i>-- (these "FILE_ATTRIBUTE_XXX" flags can be found in demo\arwen\constants.e)</i></font>
<font color="#008080">constant</font><font color="#000000"> FileFlagSet</font><font color="#0000FF"> = {</font><font color="#800000">{</font><font color="#000000">FILE_ATTRIBUTE_READONLY</font><font color="#0000FF">, </font><font color="#008000"> "R"</font><font color="#800000">}</font><font color="#0000FF">,</font>
<font color="#800000">                        {</font><font color="#000000">FILE_ATTRIBUTE_SYSTEM</font><font color="#0000FF">,   </font><font color="#008000"> "S"</font><font color="#800000">}</font><font color="#0000FF">,</font>
<font color="#800000">                        {</font><font color="#000000">FILE_ATTRIBUTE_HIDDEN</font><font color="#0000FF">,   </font><font color="#008000"> "H"</font><font color="#800000">}</font><font color="#0000FF">,</font>
<font color="#800000">                        {</font><font color="#000000">FILE_ATTRIBUTE_DIRECTORY</font><font color="#0000FF">,</font><font color="#008000"> "D"</font><font color="#800000">}</font><font color="#0000FF">}

?</font><font color="#7060A8"> decode_flags</font><font color="#0000FF">(</font><font color="#000000">FileFlagSet</font><font color="#0000FF">,</font><font color="#000000">#17</font><font color="#0000FF">,</font><font color="#008000">""</font><font color="#0000FF">) </font><font color="#000080"><i> -- "RSHD"</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
constant FileFlagSet = {{FILE_ATTRIBUTE_READONLY,  "Read"},
                        {FILE_ATTRIBUTE_SYSTEM,    "System"},
                        {FILE_ATTRIBUTE_HIDDEN,    "Hidden"},
                        {FILE_ATTRIBUTE_DIRECTORY, "Directory"}}

? decode_flags(FileFlagSet,#17)     -- "Read+System+Hidden+Directory"
</eucode-->
<pre>
<font color="#008080">constant</font><font color="#000000"> FileFlagSet</font><font color="#0000FF"> = {</font><font color="#800000">{</font><font color="#000000">FILE_ATTRIBUTE_READONLY</font><font color="#0000FF">, </font><font color="#008000"> "Read"</font><font color="#800000">}</font><font color="#0000FF">,</font>
<font color="#800000">                        {</font><font color="#000000">FILE_ATTRIBUTE_SYSTEM</font><font color="#0000FF">,   </font><font color="#008000"> "System"</font><font color="#800000">}</font><font color="#0000FF">,</font>
<font color="#800000">                        {</font><font color="#000000">FILE_ATTRIBUTE_HIDDEN</font><font color="#0000FF">,   </font><font color="#008000"> "Hidden"</font><font color="#800000">}</font><font color="#0000FF">,</font>
<font color="#800000">                        {</font><font color="#000000">FILE_ATTRIBUTE_DIRECTORY</font><font color="#0000FF">,</font><font color="#008000"> "Directory"</font><font color="#800000">}</font><font color="#0000FF">}

?</font><font color="#7060A8"> decode_flags</font><font color="#0000FF">(</font><font color="#000000">FileFlagSet</font><font color="#0000FF">,</font><font color="#000000">#17</font><font color="#0000FF">)    </font><font color="#000080"><i> -- "Read+System+Hidden+Directory"</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example 3:</b>
         </td>
         <td>
<!--eucode>
-- Multiple bits are handled with appropriate common sense:
constant RW = {{#0003, "rw"},
                #0001, "r"},
                #0002, "w"},
                #FF00, ""}}
?decode_flags(RW,#03) -- "rw"
?decode_flags(RW,#01) -- "r"
?decode_flags(RW,#02) -- "w"
?decode_flags(RW,#102) -- "w"
-- The "rw" entry only triggers when all bits are set, whereas the
-- #FF00 triggers/ignores any bits, since length(description) is 0.
</eucode-->
<pre>
<font color="#000080"><i>-- Multiple bits are handled with appropriate common sense:</i></font>
<font color="#008080">constant</font><font color="#000000"> RW</font><font color="#0000FF"> = {</font><font color="#800000">{</font><font color="#000000">#0003</font><font color="#0000FF">,</font><font color="#008000"> "rw"</font><font color="#800000">}</font><font color="#0000FF">,</font>
<font color="#000000">                #0001</font><font color="#0000FF">,</font><font color="#008000"> "r"</font><font color="#0000FF">},</font>
<font color="#000000">                #0002</font><font color="#0000FF">,</font><font color="#008000"> "w"</font><font color="#00FFFF">}</font><font color="#0000FF">,</font>
<font color="#000000">                #FF00</font><font color="#0000FF">,</font><font color="#008000"> ""</font><font color="#00FFFF">}</font><font color="#008000">}</font>
<font color="#0000FF">?</font><font color="#7060A8">decode_flags</font><font color="#0000FF">(</font><font color="#000000">RW</font><font color="#0000FF">,</font><font color="#000000">#03</font><font color="#0000FF">)</font><font color="#000080"><i> -- "rw"</i></font>
<font color="#0000FF">?</font><font color="#7060A8">decode_flags</font><font color="#0000FF">(</font><font color="#000000">RW</font><font color="#0000FF">,</font><font color="#000000">#01</font><font color="#0000FF">)</font><font color="#000080"><i> -- "r"</i></font>
<font color="#0000FF">?</font><font color="#7060A8">decode_flags</font><font color="#0000FF">(</font><font color="#000000">RW</font><font color="#0000FF">,</font><font color="#000000">#02</font><font color="#0000FF">)</font><font color="#000080"><i> -- "w"</i></font>
<font color="#0000FF">?</font><font color="#7060A8">decode_flags</font><font color="#0000FF">(</font><font color="#000000">RW</font><font color="#0000FF">,</font><font color="#000000">#102</font><font color="#0000FF">)</font><font color="#000080"><i> -- "w"
-- The "rw" entry only triggers when all bits are set, whereas the
-- #FF00 triggers/ignores any bits, since length(description) is 0.</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\pdecodeflags.e (an autoinclude) for details of the actual implementation.<br>
            See also test\t71decode_flags.exw which is entirely dedicated to testing this function.
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
