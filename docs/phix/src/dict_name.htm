<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">dict_name</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          <a href="string.htm">string</a> name = dict_name(<a href="integer.htm">integer</a> tid=1)
          <br>
          <i>-- or --</i>
          <br>
          <a href="integer.htm">integer</a> tid = named_dict(<a href="string.htm">string</a> name)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Retrieve the diagnostic name associated with the dictionary at creation time. <br>
            The name of the common/default dictionary(1) is always "1".<br>
            The converse is also supported, ie retrieve the (first) tid associated with a given name, or 
            NULL if no such name can be found (case sensitive, so "Name" will <i>not</i> match "name").
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            The name is intended purely for diagnostic purposes, although there is nothing to stop code from
            using the name to control logic flow depending upon which dictionary it has been passed - eg if
            the dictionary name is "customers" or "suppliers" then do something different to get an address,
            since typically suppliers don&rsquo;t have multiple delivery addresses.
            <br>
            <br>
            The named_dict() routine can be useful to check whether a dictionary of that name has already 
            been created, or perhaps to grant something a unique-but-generic name, or just to avoid one of
            those pesky global variables you don&rsquo;t quite know where to put. Note that, as always, 
            careful locking will be required should multiple threads be attempting to access dictionaries.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
integer tid = new_dict("test")
?dict_name(tid) -- displays "test"
</eucode-->
<pre>
<font color="#004080">integer</font><font color="#000000"> tid</font><font color="#0000FF"> =</font><font color="#5E005E"> new_dict</font><font color="#0000FF">(</font><font color="#008000">"test"</font><font color="#0000FF">)
?</font><font color="#5E005E">dict_name</font><font color="#0000FF">(</font><font color="#000000">tid</font><font color="#0000FF">)</font><font color="#000080"><i> -- displays "test"</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="new_dict.htm">new_dict</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
