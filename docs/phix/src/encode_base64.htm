<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">encode_base64</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="string.htm">string</a> res = encode_base64(<a href="sequence.htm">sequence</a> in, <a href="integer.htm">integer</a> wrap_column=0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Convert data to a base64 encoded string.
            <br>
            <br>
            in: a (binary) string or sequence of (integer) bytes #0..#FF, ie no float/string/sequence elements.<br>
            wrap_column: If non-zero, "\r\n" is inserted between every wrap_column bytes.
            <br>
            <br>
            The result should be broken into lines of no more than 76 characters before transmission, according to RFC 2045<br>
            (Base64 transfer encoding for MIME), and in most cases specifying a wrap_column of 76 does exactly what is needed.<br>
            Equivalently, the input could theoretically be broken into chunks of 57 bytes, before being passed to this routine, though<br>
            in truth I only really mention that to help in understanding of the ratios between input and output sizes (57 = 19*3, 76 = 19*4).<br>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\base64.e (an autoinclude)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="decode_base64.htm">decode_base64</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
