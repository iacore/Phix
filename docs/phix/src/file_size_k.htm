<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">file_size_k</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          <a href="string.htm">string</a> res = <b>file_size_k</b>(<a href="atom.htm">atom</a> size,
                                                                   <a href="integer.htm">integer</a> width=1)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Trivial routine to convert a size in bytes to the most appropriate (approximately equivalent) 
            human-readable string, for example 2147483600 ==&gt; "2GB".
            <br>
            <br>
            size: a value in bytes.<br>
            width: minimum (not maximum) length of result.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported (after all it is only a <a href="sprintf.htm">sprintf</a>() wrapper).
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            Sensible rounding occurs: the trailing 00 instead of 48 above was deliberate, and that result 
            of "2GB" is about 10,000 times more accurate than "1.99GB" would have been.
            <br>
            <br>
            Obviously a result of "1000KB" <i>is</i> fine, as would be "1018KB" (deemed <i>preferable</i> 
            to "0.99MB"), whereas 1019K..1023K are rounded up to "1MB". 
            Should you require a different rounding strategy, or more suffixes than KB/MB/GB/TB, you will
            have to roll your own routine, but obviously you are free to use this as a starting point.
            Likewise this routine makes no attempt to insert thousand-separator-commas, since pretty much 
            the whole point is to replace them with a suitable suffix (and values above 999TB are deemed
            to be of limited practial use, or at least very rare or some kind of mistake, anyway).
            <br>
            <br>
            The optional width parameter is intended to simplify alignment, but will not shorten anything that 
            needs more digits, that is, beyond what naturally happens - were you to throw 1e308 at this, you 
            would get a 298-character (in TB) string back, irrespective of any width setting less than 298.
            <br>
            <br>
            This routine can be invoked independently, for instance on the [D_SIZE] elements of the result from 
            <a href="dir.htm">dir</a>(), or automatically as part of <a href="get_file_size.htm">get_file_size</a>()
             - note however that the latter can still yield -1 even when asStringK is <a href="logicops.htm#tf">true</a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\file_utils.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="dir.htm">dir</a>,
          <a href="get_file_size.htm">get_file_size</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
