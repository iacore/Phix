<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">free_console</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
         free_console()
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>Free (delete) any console window associated with your program.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Implemented as a dummy routine that does nothing.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            Phix will create a console text window for your program the first time that your program prints something to the
            screen, reads something from the keyboard, or in some way needs a console (similar to a DOS-prompt window). <br>
            On Windows this window will automatically disappear when your program terminates, but you can call free_console() 
            to make it disappear sooner. <br>
            On Linux, the text mode console is always there, but an xterm window will disappear after Phix issues a 
            "Press Enter" prompt at the end of execution.
          <br>
          <br>
            On Linux, free_console() will set the terminal parameters back to normal, undoing the effect
            that curses has on the screen.
          <br>
          <br>
            In a Linux xterm window, a call to free_console(), without any
            further printing to the screen or reading from the keyboard, will eliminate
            the "Press Enter" prompt that Phix normally issues at the end of execution.
          <br>
          <br>
            After freeing the console window, you can create a new console
            window by printing something to the screen, or simply calling
            <a href="clear_screen.htm">clear_screen</a>(),
            <a href="position.htm">position</a>() or any other routine that needs a console.
          <br>
          <br>
            When you use the <b>trace</b> facility, or when your program has an error, 
            Phix automatically creates a console window to display trace information, error messages etc.
          <br>
          <br>
            There is a Windows API routine, FreeConsole() that does something similar to free_console(). <br>
            You should use free_console(), because it lets the interpreter know that there is no longer a console.
          <br>
          <br>
            While developing Edita/Edix, I often have some diagnostic output to a console (ie one exists). When running a program, 
            a call to free_console() "dis-associates" the existing parent console, with a new one opened as needed. For this reason
            you may find that several of my demo programs start with free_console(), so that any output does not quietly get shown
            on the existing console, hidden in the background. Otherwise, of course, it has no effect.
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
              via :%opFreeCons / ffree_console() in builtins\VM\pfileioN.e (an autoinclude).
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="clear_screen.htm">clear_screen</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
