<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gBox</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          <br>
          <a href="gdx.htm">gdx</a> h = gBox(<a href="integer.htm">integer</a> box_type,
                                             <a href="gdx.htm">gdx</a> children={}, 
                                             <a href="string.htm">string</a> attributes="",
                                             <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
          <br>
          <i>-- or --</i>
          <br>
          <a href="gdx.htm">gdx</a> h = gHbox(<a href="gdx.htm">gdx</a> children={}, 
                                              <a href="string.htm">string</a> attributes="",
                                              <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
          <br>
          <i>-- or --</i>
          <br>
          <a href="gdx.htm">gdx</a> h = gVbox(<a href="gdx.htm">gdx</a> children={}, 
                                              <a href="string.htm">string</a> attributes="",
                                              <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
          <br>
          <i>-- or --</i>
          <br>
          <a href="gdx.htm">gdx</a> h = gFrame(<a href="gdx.htm">gdx</a> children={}, 
                                               <a href="string.htm">string</a> attributes="",
                                               <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a container for composing elements, horizontally or vertically, and optionally with frame decorations.
<!--
            It is a box that arranges the elements it contains from left to right.
-->
            <br>
            <br>
            box_type: one or more of XPG_HBOX(=0), XPG_VBOX(=1), XPG_FRAME(=2).<br>
            children: list of the elements that will be placed in the box.<!-- It can be empty.--><br>
            For more information on the attributes and args parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.<br>
            Note that <i>no</i> <a href="g_paranormal.htm">paranormalisation</a> of any kind is performed on these functions.
            <br>
            <br>
<!-- ??
            It does not have a native representation.
-->
            The gBox() function is really an internal routine, but grouping all the subtypes on this one single page certainly helps 
            reduce repetitive duplication.<br>
            A gHbox(...) is the same as a gBox(XPG_HBOX,...)<br>
            A gVbox(...) is the same as a gBox(XPG_VBOX,...)<br>
            A gFrame(...) is the same as a gBox(XPG_FRAME[+XPG_HBOX],...) or a gBox(XPG_FRAME+XPG_VBOX,...) when
            <a href="#VBOX">VBOX</a> is set<br>
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupVbox.htm">IupVbox</a>,
          <a href="IupZbox.htm">IupZbox</a>
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
<!--
            The box can be created with no elements and filled dynamically using <a href="IupAppend.htm">IupAppend</a>() or <a href="IupInsert.htm">IupInsert</a>().
            <br>
            <br>
-->
DEV...<br><br>
            The box will NOT expand its children, it will allow its children to expand according to the space left in the box parent. 
            So for the expansion to occur, the children must be expandable with <a href="common.htm#EXPAND">EXPAND</a>!=NO, and there must be room in the box parent.
            <br>
            <br>
            When translating C code, note that internally Phix only uses the C function IupHboxv, which accepts a single null-terminated list, 
            and does not use the variable-parameter C IupHbox function. It is perfectly legal (in Phix) to specify an empty list ({}) for the 
            children parameter, but not NULL. Also note that C code requires a trailing NULL, whereas in pGUI it makes no difference whether 
            one is present (at the end of the sequence) or not - and obviously the C code <code>IupHbox(NULL);</code> should just become
            <code>IupHbox()</code>.
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            
         </td>
        </tr>
        <tr>
         <td>
          ALIGNMENT<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable) Vertically aligns the elements. Possible values: "ATOP", "ACENTER", "ABOTTOM". Default: "ATOP".
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            (non inheritable) The default value is "YES". See the documentation of the attribute for <a href="common.htm#EXPAND">EXPAND</a> inheritance.
         </td>
        </tr>
        <tr>
         <td>
          EXPANDCHILDREN
         </td>
         <td>
            (non inheritable) forces all children to expand vertically and to fully occupy its space available inside the box. Default: "NO". 
            This has the same effect as setting <a href="common.htm#EXPAND">EXPAND</a>=VERTICAL on each child. (since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          GAP<a href="notpgui.htm#IupHbox"><span style="color:orange; font-size:75%;"><sup>?</sup></span></a>,
         CGAP
         </td>
         <td>
            Defines a horizontal space in pixels between the children, CGAP is in the same units of the <a href="common.htm#SIZE">SIZE</a> attribute for the width. Default: "0". (CGAP since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          NGAP, NCGAP
         </td>
         <td>
            (non inheritable) Same as GAP but are non inheritable. (since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          HOMOGENEOUS
         </td>
         <td>
            (non inheritable) forces all children to get equal horizontal space. The space width will be based on the largest child. Default: "NO". Notice that this does not changes the children size, only the available space for each one of them to expand. (since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          MARGIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>,
         CMARGIN
         </td>
         <td>
            Defines a margin in pixels, CMARGIN is in the same units of the <a href="common.htm#SIZE">SIZE</a> attribute. Its value has the format "widthxheight", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: "0x0" (no margin). (CMARGIN since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          NMARGIN<a href="notpgui.htm#IupHbox"><span style="color:orange; font-size:75%;"><sup>?</sup></span></a>,
         NCMARGIN
         </td>
         <td>
            (non inheritable) Same as MARGIN but are non inheritable. (since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          NORMALIZESIZE<a href="notpgui.htm#IupHbox"><span style="color:orange; font-size:75%;"><sup>?</sup></span></a>
         </td>
         <td>
            (non inheritable) normalizes all children natural size to be the biggest natural size among them. All natural width will be set to the biggest width, and all natural height will be set to the biggest height according to is value. Can be NO, HORIZONTAL, VERTICAL or BOTH. Default: "NO". Same as using IupNormalizer. (since 3.0)
         </td>
        </tr>
        <tr>
         <td>
          ORIENTATION
         </td>
         <td>
            (read-only, non inheritable): Returns "HORIZONTAL". (since 3.28)
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#SIZE">SIZE</a><span style="color:lime;"><sup>+</sup></span></a> / 
          <a href="common.htm#RASTERSIZE">RASTERSIZE</a><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable) Defines the width of the box. 
            When consulted behaves as the standard <a href="common.htm#SIZE">SIZE</a>/<a href="common.htm#RASTERSIZE">RASTERSIZE</a> attributes. 
            The standard format "wxh" can also be used, but height will be ignored (since 3.3).
         </td>
        </tr>
        <tr>
         <td>
          VBOX
         </td>
         <td>
            1 for vertically-arranged children, 0 when horizontally-arranged.
         </td>
        </tr>
<!--
        <tr>
         <td>
          <a href="common.htm#WID">WID</a>
         </td>
         <td>
            (read-only) returns -1 if mapped.
         </td>
        </tr>
-->
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="common.htm#FONT">FONT</a><a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>, 
            <a href="common.htm#NAME">NAME</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#CLIENTSIZE">CLIENTSIZE</a>, 
            <a href="common.htm#CLIENTOFFSET">CLIENTOFFSET</a>,
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            (at Children)
         </td>
        </tr>
        <tr>
         <td>
          EXPANDWEIGHT
         </td>
         <td>
            (non inheritable) (at children only) If a child defines the expand weight, then it is used to multiply the free space used for expansion. (since 3.1) 
         </td>
        </tr>
        <tr>
         <td>
          <a href="common.htm#FLOATING">FLOATING</a>
         </td>
         <td>
            (non inheritable) (at children only) If a child has FLOATING=YES then its size and position will be ignored by the layout processing. Default: "NO". (since 3.0)
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
          Effectively amalgamates, simplifies, and unifies several pGUI containers, namely 
          <a href="IupHbox.htm">IupHbox</a>(),
          <a href="IupVbox.htm">IupVbox</a>(), and
          <a href="IupFrame.htm">IupFrame</a>().<br>
          There is however as yet no attempt to emulate any of the features of 
          <a href="IupBackgroundBox.htm">IupBackgroundBox</a>(),
          <a href="IupCbox.htm">IupCbox</a>(),
          <a href="IupDetachBox.htm">IupDetachBox</a>(),
          <a href="IupExpander.htm">IupExpander</a>(),
          <a href="IupGridBox.htm">IupGridBox</a>(),
          <a href="IupFlowBox.htm">IupFlowBox</a>(),
          <a href="IupMultiBox.htm">IupMultiBox</a>()[??],
          <a href="IupSbox.htm">IupSbox</a>()[??],
          <a href="IupScrollBox.htm">IupScrollBox</a>()[??], and
          <a href="IupZbox.htm">IupZbox</a>() - however they are all potential candidates, with the 3 marked ?? at the head of that queue.
          <br>
          <br>
          It is planned, but not yet implemented, that <a href="IupNormalizer.htm">IupNormalizer</a>() functionality will/may become part
          of this (set of) containers, rather than the (admittedly potentially more flexible and layout/hierarchy-agnostic) pGUI component.
          There may or may not be a new (say) NGSET attribute on child elements to fine-tune behaviour in that regard, perhaps with said
          being set to (say) "NAMED_ONLY" (or not) on the container itself also playing a role.
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
