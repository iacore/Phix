<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gDropDown</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include xpGUI.e
            <br>
            <br>
            <a href="gdx.htm">gdx</a> id = gDropDown([<a href="sequence.htm">sequence</a> options={},]
                                                    [<a href="rtn.htm">rtn</a> changed=NULL,] 
                                                     <a href="string.htm">string</a> attributes=""
                                                     <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates an interface element that is a simple text-only dropdown selector.
            <br>
            <br>
            options: a sequence of text strings to populate the dropdown. It can be empty. It will set the <a href="#OPTIONS">OPTIONS</a> attribute.<br>
            changed: a procedure which is invoked when the selection is changed, see <a href="#CHANGED">CHANGED</a> below.<br>
            For more information on the attributes and args parameters see <a href="gSetAttributes.htm">gSetAttributes</a>().<br>
            This is a <a href="g_paranormal.htm">paranormalised function</a> <small>(see <a href="#tech" onclick="opentech()">technicalia</a>).</small>
            <br>
            <br>
            Returns the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="gButton.htm">gButton</a>,
          <a href="gCheckbox.htm">gCheckbox</a>,
          <a href="gCheckbox.htm#gRadio">gRadio</a>,
          <a href="gLabel.htm">gLabel</a>,
          <a href="gList.htm">gList</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--
            <center><small><i>(image taken after manually selecting two on the left, initially blank)</i></small></center>
            <br>
-->
          <div style="float:left;">
<!--eucode>
-- demo\xpGUI\gDropDown.exw
include xpGUI.e

procedure changed(gdx id)
    ?{"changed",gGetAttribute(id,"VALINT"),
                gGetAttribute(id,"VALSTR")}
end procedute

gdx drop1 = gDropDown({"one","two","three"},changed),
    drop2 = gDropDown({"one","two","three"},changed),
    hbox = gHbox({drop1,drop2},"MARGIN=13x13"),
    dlg = gDialog(hbox,"gDropDown",`SIZE=240x80`)
gSetAttribute(drop2,"VALINT",3) -- (else it's blank)
gShow(dlg)
gMainLoop()
</eucode-->
<pre>
<font color="#000080"><i>-- demo\xpGUI\gDropDown.exw</i></font>
<font color="#008080">include</font><font color="#000000"> xpGUI.e
</font>
<font color="#008080">procedure</font><font color="#000000"> changed</font><font color="#0000FF">(</font><font color="#7060A8">gdx</font><font color="#000000"> id</font><font color="#0000FF">)
    ?{</font><font color="#008000">"changed"</font><font color="#0000FF">,</font><font color="#7060A8">gGetAttribute</font><font color="#800000">(</font><font color="#000000">id</font><font color="#0000FF">,</font><font color="#008000">"VALINT"</font><font color="#800000">)</font><font color="#0000FF">,</font>
<font color="#7060A8">                gGetAttribute</font><font color="#800000">(</font><font color="#000000">id</font><font color="#0000FF">,</font><font color="#008000">"VALSTR"</font><font color="#800000">)</font><font color="#0000FF">}</font>
<font color="#008080">end</font><font color="#000000"> procedute
</font>
<font color="#7060A8">gdx</font><font color="#000000"> drop1</font><font color="#0000FF"> =</font><font color="#7060A8"> gDropDown</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"one"</font><font color="#0000FF">,</font><font color="#008000">"two"</font><font color="#0000FF">,</font><font color="#008000">"three"</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#000000">changed</font><font color="#0000FF">),</font>
<font color="#000000">    drop2</font><font color="#0000FF"> =</font><font color="#7060A8"> gDropDown</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"one"</font><font color="#0000FF">,</font><font color="#008000">"two"</font><font color="#0000FF">,</font><font color="#008000">"three"</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#000000">changed</font><font color="#0000FF">),</font>
<font color="#000000">    hbox</font><font color="#0000FF"> =</font><font color="#7060A8"> gHbox</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">drop1</font><font color="#0000FF">,</font><font color="#000000">drop2</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000">"MARGIN=13x13"</font><font color="#0000FF">),</font>
<font color="#000000">    dlg</font><font color="#0000FF"> =</font><font color="#7060A8"> gDialog</font><font color="#0000FF">(</font><font color="#000000">hbox</font><font color="#0000FF">,</font><font color="#008000">"gDropDown"</font><font color="#0000FF">,</font><font color="#008000">`SIZE=240x80`</font><font color="#0000FF">)</font>
<font color="#7060A8">gSetAttribute</font><font color="#0000FF">(</font><font color="#000000">drop2</font><font color="#0000FF">,</font><font color="#008000">"VALINT"</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">)</font><font color="#000080"><i> -- (else it&rsquo;s blank)</i></font>
<font color="#7060A8">gShow</font><font color="#0000FF">(</font><font color="#000000">dlg</font><font color="#0000FF">)</font>
<font color="#7060A8">gMainLoop</font><font color="#0000FF">()</font>
</pre>
          </div>
          <img alt="gDropDown" style="float:right;" src="images/gDropDown.png" width="240" height="80"/>
          <div class="clear"></div>
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
          <br>
          <a name=EDITABLE></a>
         </td>
        </tr>
        <tr>
         <td>
          EDITABLE
         </td>
         <td>
            (creation only) Specifies whether the user can type in a new value (<a href="logicops.htm#tf">true</a>/"YES") or 
            only select one of the given options (the default, <a href="logicops.htm#tf">false</a>/"NO").
            Note that when true there is no implicit validation or checking whether the entered value is or is not one of the specified options, 
            and no facility for automatically "adding" the entered item, instead that would have to be done explicitly (by replacing the lot).<br>
          <a name=OPTIONS></a>
         </td>
        </tr>
        <tr>
         <td>
          OPTIONS
         </td>
         <td>
            (write only) A list of text strings to populate the dropdown. Same as the first parameter on creation.<br>
            This can also be called later to purge the dropdown and re-populate it with an entirely different set of options.<br>
          <a name=VALINT></a>
         </td>
        </tr>
        <tr>
         <td>
          VALINT
         </td>
         <td>
            Get/Set the selected item as a (1-based) pseudo-index into OPTIONS. Returns NULL/0 if no entry is selected.<br>
          <a name=VALSTR></a>
         </td>
        </tr>
        <tr>
         <td>
          VALSTR
         </td>
         <td>
            (read only) Return the selected item (from OPTIONS) as a string, or "" if no entry is selected.<br>
         </td>
        </tr>
<!--
--        <a name=ALIGNMENT></a>
--      <tr>
--       <td>
--        ALIGNMENT
--       </td>
--       <td>
--          (non inheritable): horizontal and vertical alignment. <br>
--          Possible values: "ALEFT", "ACENTER" and "ARIGHT",  combined to "ATOP", "ACENTER" and "ABOTTOM". Default: "ACENTER:ACENTER". <br>
--          Partial values are also accepted, like "ARIGHT" or ":ATOP", the other value will be used from the current alignment. <br>
--          In Motif, vertical alignment is restricted to "ACENTER". <br>
--          In GTK, horizontal alignment for multiple lines will align only the text block.
--          <br>
--       </td>
--      </tr>
//        <a name=BGCOLOR></a>
//      <tr>
//       <td>
//        <a href="gSetAttribute.htm#BGCOLOR">BGCOLOR</a><a href="notpgui.htm#IupButton"><span style="color:orange; font-size:75%;"><sup>?</sup></span></a>
//       </td>
//       <td>
//          Background color. <br>
//          If text and image are not defined, set the button size, otherwise the natural size will be very small. <br>
//          In Windows, the BGCOLOR attribute is ignored if text or image is defined. <br>
//          Default: the global attribute <a href="gGetGlobal.htm#DLGBGCOLOR">DLGBGCOLOR</a>. <br>
//          BGCOLOR is ignored when FLAT=YES because it will be used the background from the native parent. 
//          <br>
//       </td>
//      </tr>
//      <tr>
//       <td>
//        <a href="gSetAttribute.htm#FGCOLOR">FGCOLOR</a>
//       </td>
//       <td>
//          Text color. Default: the global attribute <a href="gGetGlobal.htm#DLGFGCOLOR">DLGFGCOLOR</a>.
//       </td>
//      </tr>
//      <tr>
//       <td>
//?       PADDING
//       </td>
//       <td>
//          internal margin. Works just like the MARGIN attribute of the <a href="IupHbox.htm">IupHbox</a> and <a href="IupVbox.htm">IupVbox</a> containers, 
//          but uses a different name to avoid inheritance problems. Default value: "0x0".<br>
//          Value can be DEFAULTBUTTONPADDING, so the global attribute of this name will be used instead.
//       </td>
//      </tr>
//      <tr>
//       <td>
//        CPADDING
//       </td>
//       <td>
//          same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute.
//       </td>
//      </tr>
        <tr>
         <td>
          SPACING
         </td>
         <td>
            (creation only) defines the spacing between the image associated and the button&rsquo;s text. Default: 2.
            <br>
         </td>
        </tr>
        <tr>
         <td>
          CSPACING
         </td>
         <td>
            same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute.
            <br>
         </td>
        </tr>
-->
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="gSetAttribute.htm#ACTIVE">ACTIVE</a>, 
            <a href="gSetAttribute.htm#CANFOCUS">CANFOCUS</a>, 
            <a href="gSetAttribute.htm#FONT">FONT</a>, 
<!--        <a href="gSetAttribute.htm#NAME">NAME</a>, -->
            <a href="gSetAttribute.htm#EXPAND">EXPAND</a>, 
<!--            <a href="gGetAttribute.htm#POSITION">POSITION</a>, -->
<!--            <a href="gGetAttribute.htm#SCREENPOSITION">SCREENPOSITION</a>, -->
<!--            <a href="gSetAttribute.htm#MINSIZE">MINSIZE</a>, -->
<!--            <a href="gSetAttribute.htm#MAXSIZE">MAXSIZE</a>,-->
<!--        <a href="gSetAttribute.htm#WID">WID</a>, -->
            <a href="gSetAttribute.htm#TIP">TIP</a>, 
            <a href="gGetAttribute.htm#SIZE">SIZE</a>,
<!--            <a href="gSetAttribute.htm#RASTERSIZE">RASTERSIZE</a>,-->
<!--        <a href="gSetAttribute.htm#ZORDER">ZORDER</a>,-->
            <a href="gSetAttribute.htm#VISIBLE">VISIBLE</a>.
         </td>
        </tr>

        <tr>
         <td>
          <b>Handlers:</b>
         </td>
         <td>
          <br>
          <a name=CHANGED></a>
         </td>
        </tr>
        <tr>
         <td>
          CHANGED
         </td>
         <td>
            Event generated when the selection or entry is changed.
            <br>
            <br>
            procedure changed(<a href="gdx.htm">gdx</a> id)<br>
            id: identifier of the element (dropdown) that activated the event.
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
<!--
//          <a href="gSetHandler.htm#MAP_CB">MAP_CB</a>,
//          <a href="gSetHandler.htm#UNMAP_CB">UNMAP_CB</a>,
//          <a href="gSetHandler.htm#DESTROY_CB">DESTROY_CB</a>,
-->
<!--
            <a href="gSetHandler.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="gSetHandler.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="gSetHandler.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="gSetHandler.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
-->
<!--            <a href="gSetHandler.htm#HELP_CB">HELP_CB</a> -->
            <a href="gSetHandler.htm#KEY">KEY</a>: All common handlers are supported.<br>
          <a name=tech></a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            As this is a <a href="g_paranormal.htm">paranormalised function</a>, and with no expectation that you should attempt to memorise 
            this lot, except maybe "qraa", you can assume that all of the following are potentially perfectly valid, with the fairly obvious 
            restrictions that any parameters <i>must</i> be in strict qraa-order, and no args without attributes:
            <br>
            <br>
<small>
<!--eucode>
                        gDropDown()
                        gDropDown(changed)
                        gDropDown(changed, attributes)
                        gDropDown(changed, attributes, args)
                        gDropDown(attributes, args)
                        gDropDown(attributes)
                        gDropDown(options)
                        gDropDown(options, changed)
                        gDropDown(options, attributes)
                        gDropDown(options, attributes, args)
                        gDropDown(options, changed, attributes)
                        gDropDown(options, changed, attributes, args)  -- (the full set)
</eucode-->
<pre>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">()</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">changed</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">options</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">options</font><font color="#0000FF">,</font><font color="#000000"> changed</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">options</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">options</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">options</font><font color="#0000FF">,</font><font color="#000000"> changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gDropDown</font><font color="#0000FF">(</font><font color="#000000">options</font><font color="#0000FF">,</font><font color="#000000"> changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">) </font><font color="#000080"><i> -- (the full set)</i></font>
</pre>
</small>
            <br>
            Note that in practice options and changed are actually defined as <a href="object.htm">object</a>, and attributes as
            a <a href="sequence.htm">sequence</a> rather than a string, but they are all manually and thoroughly verified to 
            be of the documented types, after being repositioned via xpGUI.e/paranormalise_qraa().
         </td>
        </tr>
       </table>
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
