<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gFrame</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include xpGUI.e
            <br>
            <br>
            <a href="gdx.htm">gdx</a> id = gFrame(<a href="gdx.htm">gdx</a> child, 
                                                 [<a href="string.htm">nullable_string</a> title=NULL, ]
                                                  <a href="string.htm">string</a> attributes="",
                                                  <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a native container, which draws a frame with a title around its child.<br>
            Sometimes also known as a GroupBox.
            <br>
            <br>
            child: Identifier of an interface element (/subtree of such) which will be surrounded by the frame.<br>
            title: Text to be shown on the label, can be NULL. Sets the <a href="#TITLE">TITLE</a> attribute.<br>
            For more information on the attributes and args parameters see <a href="gSetAttributes.htm">gSetAttributes</a>.<br>
            This is a <a href="g_paranormal.htm">paranormalised function</a>.  <small>(see <a href="#tech" onclick="opentech()">technicalia</a>)</small>
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupFlatFrame.htm">IupFlatFrame</a>
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            <p align="center"><img alt="gFrame" src="images/gFrame.png" width="240" height="80"/></p>
<!--eucode>
-- demo\xpGUI\gFrame.exw
include xpGUI.e
gdx frame = gFrame(NULL,`gFrame`,`SIZE=110x40`),
    dialog = gDialog(frame,"gFrame","SIZE=240x80")
gShow(dialog)
gMainLoop()
</eucode-->
<pre>
<font color="#000080"><i>-- demo\xpGUI\gFrame.exw</i></font>
<font color="#008080">include</font><font color="#000000"> xpGUI.e</font>
<font color="#7060A8">gdx</font><font color="#000000"> frame</font><font color="#0000FF"> =</font><font color="#7060A8"> gFrame</font><font color="#0000FF">(</font><font color="#004600">NULL</font><font color="#0000FF">,</font><font color="#008000">`gFrame`</font><font color="#0000FF">,</font><font color="#008000">`SIZE=110x40`</font><font color="#0000FF">),</font>
<font color="#000000">    dialog</font><font color="#0000FF"> =</font><font color="#7060A8"> gDialog</font><font color="#0000FF">(</font><font color="#000000">frame</font><font color="#0000FF">,</font><font color="#008000">"gFrame"</font><font color="#0000FF">,</font><font color="#008000">"SIZE=240x80"</font><font color="#0000FF">)</font>
<font color="#7060A8">gShow</font><font color="#0000FF">(</font><font color="#000000">dialog</font><font color="#0000FF">)</font>
<font color="#7060A8">gMainLoop</font><font color="#0000FF">()</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            A child of NULL <i>is</i> permitted, for the trivial demo above and perhaps to ease development, but it is <i>not</i> optional.
<!--
            <br>
            <br>
            In Windows, a Frame with <a href="#TITLE">TITLE</a>==NULL is not the same control as one with TITLE!=NULL. <br>
            When TITLE==NULL it does not have Visual Styles and uses a sharp rectangle border. <br>
            When TITLE!=NULL it has Visual Styles and the border is a rounded rectangle. <br>
            To always use Visual Styles set the title to "" before mapping, but be aware that a vertical space for the title will be always reserved at the top border.
-->
<!--
//          <br>
//          <br>
//          The frame can be created with no elements and filled dynamically using <a href="IupAppend.htm">IupAppend</a>() or <a href="IupInsert.htm">IupInsert</a>(). 
-->
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
         </td>
        </tr>
<!--
//      <tr>
//       <td>
//?       <a href="common.htm#BGCOLOR">BGCOLOR</a>
//       </td>
//       <td>
//          ignored, transparent in all systems. Will use the background color of the native parent. <br>
//          Except if <a href="#TITLE">TITLE</a> is not defined and BGCOLOR is defined before map (can be changed later), then the frame will have a color background.
//       </td>
//      </tr>
//      <tr>
//       <td>
//?       CHILDOFFSET
//       </td>
//       <td>
//          Allow to specify a position offset for the child. Available for native containers only. <br>
//          It will not affect the natural size, and allows to position controls outside the client area. <br>
//          Format "dxxdy", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0. (since 3.14)
//       </td>
//      </tr>
-->
<!--
        <tr>
         <td>
?         <a href="gSetAttribute.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            (non inheritable) The default value is "YES".
         </td>
        </tr>
-->
<!--
//      <tr>
//       <td>
//?       <a href="common.htm#FGCOLOR">FGCOLOR</a><a href="notpgui.htm#IupFrame"><span style="color:orange; font-size:75%;"><sup>?</sup></span></a>
//       </td>
//       <td>
//          Text title color. Not available in Windows when using Windows Visual Styles. <br>
//          Default: the global attribute <a href="gGetGlobal.htm#DLGFGCOLOR">DLGFGCOLOR</a>.
//       </td>
//      </tr>
//      <tr>
//       <td>
//        SUNKEN
//       </td>
//       <td>
//          When not using a title, the frame line defines a sunken area (lowered area). Valid values: YES or NO. Default: NO.
//       </td>
//      </tr>
-->
        <tr>
         <td>
          <a href="gSetAttribute.htm#TITLE">TITLE</a>
         </td>
         <td>
            (non inheritable) Text the user will see at the top of the frame. May need a <a href="gRedraw.ntm">gRedraw</a>() when changed.
            <br>
            <br>
            GTK reduces the top margin when title is NULL, whereas WinAPI does not, since Visual Styles always reserves that vertical space.<br>
            <small>(pGUI resorted to completely disabling the Windows Visual Styles for NULL at creation, which looked ugly and made things worse in my opinion.)<br></small>
            Aside: there is no deliberate intention to support flipping between text/NULL post-<a href="gShow.htm">gShow</a>(), ymmv.
<!-- (fixed)
            While it can be NULL on creation, for the benefit of <a href="g_paranormal.htm">paranormalisation</a> and with the intention of setting it later, 
            actually displaying a gFrame with a null title is <i>not</i> supported, and the layout/size will simply be wrong.
-->
<!--            If not defined before creation it cannot be added later, to be changed it must be at least "x" during creation. -->
         </td>
        </tr>
        <tr>
         <td>
            also
         </td>
         <td>
            <a href="gSetAttribute.htm#ACTIVE">ACTIVE</a>, 
            <a href="gSetAttribute.htm#EXPAND">EXPAND</a>,
            <a href="gSetAttribute.htm#FONT">FONT</a>, 
<!--        <a href="gSetAttribute.htm#NAME">NAME</a>, -->
<!--?           <a href="gGetAttribute.htm#POSITION">POSITION</a>, -->
<!--            <a href="gGetAttribute.htm#SCREENPOSITION">SCREENPOSITION</a>, -->
            <a href="gGetAttribute.htm#CLIENTSIZE">CLIENTSIZE</a>,
<!--            <a href="gGetAttribute.htm#CLIENTOFFSET">CLIENTOFFSET</a>, -->
            <a href="gSetAttribute.htm#MARGIN">MARGIN</a>, 
            <a href="gSetAttribute.htm#MINSIZE">MINSIZE</a>, 
            <a href="gSetAttribute.htm#MAXSIZE">MAXSIZE</a>,
            <a href="gSetAttribute.htm#SIZE">SIZE</a>,
<!--            <a href="gSetAttribute.htm#RASTERSIZE">RASTERSIZE</a>,-->
<!--            <a href="gSetAttribute.htm#ZORDER">ZORDER</a>, -->
            <a href="gSetAttribute.htm#VISIBLE">VISIBLE</a>.<br>
          <a name=tech></a>
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>Callbacks:</b>
         </td>
         <td>
//          <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>: common callbacks are supported.
         </td>
        </tr>
-->
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            As this is a <a href="g_paranormal.htm">paranormalised function</a>, and with no expectation that you should memorise this lot,
            except maybe "ctaa", you can assume that all of the following are potentially perfectly valid, with the fairly obvious restrictions 
            that any parameters <i>must</i> be in strict ctaa-order, and no args without attributes:
            <br>
            <br>
<small>
<!--eucode>
                        gFrame(child)
                        gFrame(child, title)
                        gFrame(child, attributes)               -- (see last note)
                        gFrame(child, attributes, args)
                        gFrame(child, title, attributes)
                        gFrame(child, title, attributes, args)  -- (the full set)
</eucode-->
<pre>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> title</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)              </font><font color="#000080"><i> -- (see last note)</i></font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> title</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> title</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">) </font><font color="#000080"><i> -- (the full set)</i></font>
</pre>
</small>
            <br>
            Note that in practice title is actually defined as <a href="object.htm">object</a> and attributes as <a href="sequence.htm">sequence</a>, 
            but verified to be of the documented types, after being repositioned via xpGUI.e/paranormalise_taa(). Also note the child is non-optional,
            although it can be NULL, and takes no part in the paranormalisation handling.
            <br>
            <br>
            Also note that child, which should normally be a gHbox or gVbox, is <i>not</i> optional, and not passed to paranormalise_taa().
            <br>
            <br>
            Finally also note that gFrame(child,attributes) is distinguished from gFrame(child,title) by the presence of an '=' character,
            see <a href="g_paranormal.htm#eqch">here</a>.
         </td>
        </tr>
       </table>
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
