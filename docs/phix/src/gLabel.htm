<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gLabel</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include xpGUI.e
            <br>
            <br>
            <a href="gdx.htm">gdx</a> id = gLabel([<a href="string.htm">nullable_string</a> title=NULL, ]
                                                  <a href="string.htm">string</a> attributes="", 
                                                  <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a label interface element, which displays a separator, a static text string, or an image.
<!--            Creates a label interface element, which displays static text, or a separator.-->
            <br>
            <br>
            title: Text to be shown on the label, <!--It can be NULL.--> sets the <a href="#TITLE">TITLE</a> attribute.<br>
            For more information on the attributes and args parameters see <a href="gSetAttributes.htm">gSetAttributes</a>.<br>
            This is a <a href="g_paranormal.htm">paranormalised function</a>.  <small>(see <a href="#tech" onclick="opentech()">technicalia</a>)</small>
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
<!-- MARGIN, FONTSTYLE ?? -->
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="gImage.htm">gImage</a>,
          <a href="gButton.htm">gButton</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            <p align="center"><img alt="gLabel" src="images/gLabel.png" width="240" height="80"/></p>
<!--eucode>
-- demo\xpGUI\gLabel.exw
include xpGUI.e

gdx lbl = gLabel(`This is a label`),
    box = gHbox({lbl},"MARGIN=13x13"),
    dlg = gDialog(label,`gLabel`,`SIZE=240x80`)
gShow(dlg)
gMainLoop()
</eucode-->
<pre>
<font color="#000080"><i>-- demo\xpGUI\gLabel.exw</i></font>
<font color="#008080">include</font><font color="#000000"> xpGUI.e
</font>
<font color="#7060A8">gdx</font><font color="#000000"> lbl</font><font color="#0000FF"> =</font><font color="#7060A8"> gLabel</font><font color="#0000FF">(</font><font color="#008000">`This is a label`</font><font color="#0000FF">),</font>
<font color="#000000">    box</font><font color="#0000FF"> =</font><font color="#7060A8"> gHbox</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">lbl</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000">"MARGIN=13x13"</font><font color="#0000FF">),</font>
<font color="#000000">    dlg</font><font color="#0000FF"> =</font><font color="#7060A8"> gDialog</font><font color="#0000FF">(</font><font color="#000000">label</font><font color="#0000FF">,</font><font color="#008000">`gLabel`</font><font color="#0000FF">,</font><font color="#008000">`SIZE=240x80`</font><font color="#0000FF">)</font>
<font color="#7060A8">gShow</font><font color="#0000FF">(</font><font color="#000000">dlg</font><font color="#0000FF">)</font>
<font color="#7060A8">gMainLoop</font><font color="#0000FF">()</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            Labels with images, texts or line separators cannot change their behavior after being mapped. <br>
            But after being mapped the image can be changed for another image, and the text for another text.
            <br>
            <br>
            Drag & Drop attributes and handlers are supported.
            <br>
            <br>
            Some examples can be seen in demo\xpGUI\sample.exw
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            DEV: few if any of these have been tested/implemented...
         </td>
        </tr>
        <tr>
         <td>
          <a href="gSetAttribute.htm#ACTIVE">ACTIVE</a>
         </td>
         <td>
            The only difference between an active label and an inactive one is its visual feedback. Possible values: "YES"/true, "NO"/false. Default: true.
         </td>
        </tr>
<!--
        <tr>
         <td>
?         ALIGNMENT
         </td>
         <td>
            (non inheritable) horizontal and vertical alignment. <br>
            Possible values: "ALEFT", "ACENTER" and "ARIGHT", combined to "ATOP", "ACENTER" and "ABOTTOM". <br>
            Default: "ALEFT:ACENTER". <br>
            Partial values are also accepted, like "ARIGHT" or ":ATOP", the other value will be used from the current alignment. <br>
            In Motif, vertical alignment is restricted to "ACENTER". (vertical alignment since 3.0)
         </td>
        </tr>
-->
<!--
//      <tr>
//       <td>
//?       <a href="gSetAttribute.htm#BGCOLOR">BGCOLOR</a>
//       </td>
//       <td>
//          ignored, transparent in all systems. Will use the background color of the native parent.
//       </td>
//      </tr>
-->
<!-- (on a label?? a gBox would be way better...)
//      <tr>
//       <td>
//?       DROPFILESTARGET
//       </td>
//       <td>
//          [Windows and GTK Only] (non inheritable) Enable or disable the drop of files. <br>
//          Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled. (since 3.0)
//       </td>
//      </tr>
-->
<!--
        <tr>
         <td>
?         ELLIPSIS
         </td>
         <td>
            [Windows and GTK only] add an ellipsis: "..." to the text if there is not enough space to render the entire string. <br>
            Can be "YES" or "NO". Default: "NO". (since 3.0) (GTK 2.6)
         </td>
        </tr>
-->
<!-- DEV maybe resurect...
        <tr>
         <td>
?         <a href="gSetAttribute.htm#FGCOLOR">FGCOLOR</a>
         </td>
         <td>
            Text color. Default: the global attribute <a href="gGetGlobal.htm#DLGFGCOLOR">DLGFGCOLOR</a>.
         </td>
        </tr>
-->
<!-- DEV resurrect... erm, why??  We may as well just force the use of a gCanvas. -->
<!--
        <tr>
         <td>
?         IMAGE
         </td>
         <td>
            (non inheritable) Image name. <br>
            If set before map defines the behavior of the label to contain an image. <br>
            The natural size will be size of the image in pixels. <br>
[DEV?]
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. 
            See also <a href="gImage.htm">gImage</a>.
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         IMINACTIVE
         </td>
         <td>
            (non inheritable) [GTK and Motif only] Image name of the element when inactive. <br>
            If it is not defined then the IMAGE is used and the colors will be replaced by a modified version of the background color creating the disabled effect. <br>
            GTK will also change the inactive image to look like other inactive objects.
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
          MARKUP
         </td>
         <td>
            [GTK only] allows the title string to contains pango markup commands. <br>
            Works only if a mnemonic is NOT defined in the title. <br>
            Can be "YES" or "NO". Default: "NO". 
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         SEPARATOR
         </td>
         <td>
            (creation only) (non inheritable) Turns the label into a line separator. <br>
            Possible values: "HORIZONTAL" or "VERTICAL". <br>
            When changed before mapping the <a href="gSetAttribute.htm#EXPAND">EXPAND</a> attribute is set to "HORIZONTALFREE" or "VERTICALFREE" accordingly.<br>
         </td>
        </tr>
-->
        <tr>
         <td>
          <a href="gSetAttribute.htm#TITLE">TITLE</a>
         </td>
         <td>
            (non inheritable) Label&rsquo;s text. <br>
            If SEPARATOR is not defined before map, then the default behavior is to contain a text. <br>
            The label behavior cannot be changed after map. <br>
            The natural size will be larger enough to include all the text in the selected font, even using multiple lines. <br>
            Note that an <a href="gRedraw.htm">gRedraw</a>() may be required after changing the title for all characters to be shown.<br>
            The '\n' character is accepted for line change. The "&" character can be used to define a mnemonic, the next character will be used as key. <br>
            Use "&&" to show the "&" character instead of defining a mnemonic. <br>
            The next control from the label will be activated from any control in the dialog using the "Alt+key" combination. (mnemonic support since 3.0)
         </td>
        </tr>
<!-- ??
        <tr>
         <td>
?         WORDWRAP
         </td>
         <td>
            [Windows and GTK only] enables or disable the wrapping of lines that does not fits in the label. <br>
            Can be "YES" or "NO". Default: "NO". Can only set WORDWRAP=YES if ALIGNMENT=ALEFT. (since 3.0)
         </td>
        </tr>
-->
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="gSetAttribute.htm#FONT">FONT</a>, 
<!--            <a href="gSetAttribute.htm#NAME">NAME</a>,  -->
            <a href="gSetAttribute.htm#EXPAND">EXPAND</a>, 
<!--            <a href="gGetAttribute.htm#POSITION">POSITION</a>, -->
<!--            <a href="gGetAttribute.htm#SCREENPOSITION">SCREENPOSITION</a>, -->
            <a href="gSetAttribute.htm#MARGIN">MARGIN</a>, 
<!--            <a href="gSetAttribute.htm#MINSIZE">MINSIZE</a>, -->
<!--            <a href="gSetAttribute.htm#MAXSIZE">MAXSIZE</a>, -->
            <a href="gSetAttribute.htm#SIZE">SIZE</a>,
            <a href="gSetAttribute.htm#TIP">TIP</a>, 
<!--            <a href="gSetAttribute.htm#RASTERSIZE">RASTERSIZE</a>,-->
<!--            <a href="gSetAttribute.htm#ZORDER">ZORDER</a>, -->
            <a href="gSetAttribute.htm#VISIBLE">VISIBLE</a>.<br>
          <a name=tech></a>
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>Handlers:</b>
         </td>
         <td>
         </td>
        </tr>
//          <a name=BUTTON_CB></a>
//      <tr>
//       <td>
//        <a href="gSetHandler.htm#BUTTON_CB">BUTTON_CB</a>
//       </td>
//       <td>
//          Action generated when any mouse button is pressed or released. (since 3.3)
//       </td>
//      </tr>
-- (add MOUSEMOVE to "also" in preference and if you want)
//      <tr>
//       <td>
//        <a href="gSetHandler.htm#MOTION_CB">MOTION_CB</a>
//       </td>
//       <td>
//          Action generated when the mouse is moved. (since 3.20)
//       </td>
//      </tr>
        <tr>
         <td>
          DROPFILES_CB
         </td>
         <td>
            [Windows and GTK Only] Action generated when one or more files are dropped in the element. (since 3.3)
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
//          <a href="gSetHandler.htm#DESTROY_CB">DESTROY_CB</a>,
            <a href="gSetHandler.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="gSetHandler.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>: common handlers are supported.
         </td>
        </tr>
-->
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            As this is a <a href="g_paranormal.htm">paranormalised function</a>, and with no expectation that you should memorise this lot,
            except maybe "taa", you can assume that all of the following are potentially perfectly valid, with the fairly obvious restrictions 
            that any parameters <i>must</i> be in strict taa-order, and no args without attributes:
            <br>
            <br>
<small>
<!--eucode>
                        gLabel()
                        gLabel(title)
                        gLabel(attributes)              -- (see 2nd note)
                        gLabel(attributes, args)
                        gLabel(title, attributes)
                        gLabel(title, attributes, args) -- (the full set)
</eucode-->
<pre>
<font color="#7060A8">                        gLabel</font><font color="#0000FF">()</font>
<font color="#7060A8">                        gLabel</font><font color="#0000FF">(</font><font color="#000000">title</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gLabel</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">)             </font><font color="#000080"><i> -- (see 2nd note)</i></font>
<font color="#7060A8">                        gLabel</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gLabel</font><font color="#0000FF">(</font><font color="#000000">title</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gLabel</font><font color="#0000FF">(</font><font color="#000000">title</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font><font color="#000080"><i> -- (the full set)</i></font>
</pre>
</small>
            <br>
            Note that in practice attributes is actually defined as <a href="sequence.htm">sequence</a>, but verified to 
            be of the documented string type, after being repositioned via xpGUI.e/paranormalise_taa().
            <br>
            <br>
            Also note that gLabel(attributes) is distinguished from gLabel(title) by the presence of an '=' character,
            see <a href="g_paranormal.htm#eqch">here</a>.
<!--
            <br>
            <br>
            While <a href="IupLabel.htm">IupLabel</a>() allowed an image to be set via an "IMAGE" attribute, in xpGUI you should just
???         use a <a href="gImage.htm">gImage</a>() directly instead.
-->
         </td>
        </tr>
       </table>
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
