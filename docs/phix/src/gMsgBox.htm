<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gMsgBox</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include xpGUI.e
            <br>
            <br>
            gMsgBox(<a href="gdx.htm">gdx</a> parent, 
                    <a href="string.htm">string</a> title, msg,
                    <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
            <small><br><i>-- or --</i><br></small>
?           gMsgBoxA(<a href="gdx.htm">gdx</a> parent, 
                     <a href="rtn.htm">rtn</a> handler,
                     <a href="string.htm">string</a> attributes,
                     <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
            <small>[ or a new paranormalise_ptmraa() routine? ]</small>
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            INCOMPLETE:<br>
?           Does not resize or reposition or reparent correctly on subsequent invocations.<br>
?           The OK button is not right-aligned. The popup is not [yet / properly or in fact at all] modal.<br>
?           Parameters not finalised, no serious attempt at wordwrap or any icons or other attributes as yet.<br>
?           Multiple buttons (plus a callback to handle which clicked) would be one obviously desired enhancement.<br>
<!--
?           "title, msg" may (somehow) become "[title,] [msg,] [attributes]", with several additional rules such as: 
            &gt;=1 must exist, if &lt;3 and [$] contains '=' it is attributes and must contain "TITLE="/"MSG=": none
            if two other strings provided, one only if one other string provided (ie being sufficient to distinguish 
            "title, attributes" from "msg, attributes"), or both if no other string provided, if [$] does not contain 
            '=' then it must be a "title, msg" case and both must exist, if args!={} it applies to the last of the 
            three we have decided has been passed, ... alternatively I might keep the above with no attributes and any 
            args always applying to msg, <i>and</i> gMsgBoxA(handler,attributes[,args]) with no separate title/msg, and 
            both "TITLE=" and "MSG=" being mandatory in attributes.
-->
?           As yet there is no such routine as gMsgBoxA(), but planned that attributes <i>must</i> contain "MSG=" and
            optionally "TITLE=" (both quoted when needed), and (say) `BUTTONS="OK,Cancel,Abort"`.
            <br> 
            <br> 
            Shows a modal dialog containing a message with (by default) an OK button. 
            <br>
            <br>
            parent: Identifier of the dialog to use as a parent, primarily to control focus when the message box is closed. Can be NULL.<br>
            title: Text to be shown on the popup window&rsquo;s header.<br>
            msg: Text to be shown on the label, a msg=sprintf(msg,args) occurs when args!={}.<br>
            handler: A procedure to be invoked when a button is clicked, see <a href="#handler">below</a>.
?           For more information on the attributes and args parameters see <a href="gSetAttributes.htm">gSetAttributes</a>().<br>
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Not yet supported....
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
          <div style="float:left;">
<!--eucode>
--? see demo\xpGUI\gTreeView.exw for a better example (when F1|2 pressed)
include xpGUI.e
gMsgBox(NULL,`gMsgBox`,`This is a simple %s window.`,{`message box`})
gMainLoop()
</eucode-->
<pre>
<font color="#000080"><i>--? see demo\xpGUI\gTreeView.exw for a better example (when F1|2 pressed)</i></font>
<font color="#008080">include</font><font color="#000000"> xpGUI.e</font>
<font color="#7060A8">gMsgBox</font><font color="#0000FF">(</font><font color="#004600">NULL</font><font color="#0000FF">,</font><font color="#008000">`gMsgBox`</font><font color="#0000FF">,</font><font color="#008000">`This is a simple %s window.`</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#008000">`message box`</font><font color="#800000">}</font><font color="#0000FF">)</font>
<font color="#7060A8">gMainLoop</font><font color="#0000FF">()</font>
</pre>
          </div>
          <img alt="gMsgBox" style="float:right;" src="images/gMsgBox.png" width="236" height="103"/>
          <div class="clear"></div>
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
          This is <i>not</i> <a href="g_paranormal.htm">paranormalised</a>, in particular "no parent" requires an explicit NULL.
          <br>
          <br>
?         b1 is set as the "DEFAULTENTER". The "DEFAULTESC" is set to the last non-NULL of b1, b2, and b3.
          <br>
          <br>
?         Returns 1, 2 or 3 to indicate which button was selected.
          <br>
         </td>
        </tr>
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
?           Not yet implemented, expected to be settable via attributes parameter only, non-readable.
         </td>
        </tr>
        <tr>
         <td>
          <a href="gDialog.htm#TITLE">TITLE</a>
         </td>
         <td>
            (optional) The popup title. Default: "Error".
            <br>
         </td>
        </tr>
        <tr>
         <td>
          MSG
         </td>
         <td>
            (not optional) The main/central text of the popup.
            <br>
            <a name=BUTTONS></a>
         </td>
        </tr>
        <tr>
         <td>
          BUTTONS
         </td>
         <td>
            (optional) A comma-delimited string containing the text of any button(s) to be shown. Default: "OK".
            <br>
            <a name=handler></a>
         </td>
        </tr>

<!--
        <tr>
         <td>
            also
         </td>
         <td>
            <a href="gSetAttribute.htm#ACTIVE">ACTIVE</a>, 
            <a href="gSetAttribute.htm#EXPAND">EXPAND</a>,
            <a href="gSetAttribute.htm#FONT">FONT</a>, 
            <a href="gSetAttribute.htm#MARGIN">MARGIN</a>, 
            <a href="gSetAttribute.htm#MINSIZE">MINSIZE</a>, 
            <a href="gSetAttribute.htm#MAXSIZE">MAXSIZE</a>,
            <a href="gGetAttribute.htm#SIZE">SIZE</a>,
            <a href="gSetAttribute.htm#VISIBLE">VISIBLE</a>.<br>
          <a name=tech></a>
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Handlers:</b>
         </td>
         <td>
          <br>
<!--          <a name=HANDLER></a>-->
         </td>
        </tr>
        <tr>
         <td>
<!-- (An application does not get the gdx back, so it cannot set a handler on it) --> 
          <small>(via param only)</small>
         </td>
         <td>
            procedure handler(<a href="integer.htm">integer</a> btn)<br>
            btn: a 1-based index corresponding to <a href="#BUTTONS">BUTTONS</a>.
            <br>
            <br>
            The popup is automatically closed <i>before</i> the handler is invoked. <!--Should NULL be (explicitly) specified, there is
            of course no way to determine which button was pressed.--> A common handler can be used for multiple popups, as long as it
            can determine what btn means in the current context (via some saved state should need be).
            <br>
<!--          <a name=tech></a> -->
         </td>
        </tr>

<!--
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            As this is a <a href="g_paranormal.htm">paranormalised function</a>, and with no expectation that you should memorise this lot,
<br><i><small>(to be completed)</small></i>
-->
<!--
            except maybe "ctaa", you can assume that all of the following are potentially perfectly valid, with the fairly obvious restrictions 
            that any parameters <i>must</i> be in strict ctaa-order, and no args without attributes:
            <br>
            <br>
<small>
<X!X--eucode>
                        gFrame(child)
                        gFrame(child, title)
                        gFrame(child, attributes)               -- (see last note)
                        gFrame(child, attributes, args)
                        gFrame(child, title, attributes)
                        gFrame(child, title, attributes, args)  -- (the full set)
</eucode--X>
<pre>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> title</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)              </font><font color="#000080"><i> -- (see last note)</i></font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> title</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gFrame</font><font color="#0000FF">(</font><font color="#000000">child</font><font color="#0000FF">,</font><font color="#000000"> title</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">) </font><font color="#000080"><i> -- (the full set)</i></font>
</pre>
</small>
            <br>
            Note that in practice title is actually defined as <a href="object.htm">object</a> and attributes as <a href="sequence.htm">sequence</a>, 
            but verified to be of the documented types, after being repositioned via xpGUI.e/paranormalise_taa(). Also note the child is non-optional,
            although it can be NULL, and takes no part in the paranormalisation handling.
            <br>
            <br>
            Also note that child, which is typically a gHbox or gVbox, is <i>not</i> optional, and not passed to paranormalise_taa().
            <br>
            <br>
            Finally note that gFrame(child,attributes) is distinguished from gFrame(child,title) by the presence of an '=',
            see <a href="g_paranormal.htm#eqch">here</a>.
            <br>
            <br>
            PS: <a href="pGUI.htm">pGUI</a> resorted to completely disabling the Windows Visual Styles (on Windows) for TITLE=NULL at creation, 
            which looked ugly and made things worse in my opinion, so xpGUI does <i>not</i> replicate that.
-->
<!--
         </td>
        </tr>
-->
       </table>
<!--
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
-->
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
