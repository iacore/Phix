<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gSlider</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include xpGUI.e
            <br>
            <br>
            <small>
            <a href="gdx.htm">gdx</a> id = gSlider([<a href="string.htm">nullable_string</a> orientation=NULL, ]
                                                   [<a href="rtn.htm">rtn</a> value_changed=NULL, ] 
                                                    <a href="string.htm">string</a> attributes="", 
                                                    <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
            </small>
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates a slider control, which selects a value within a limited interval. Also known as a scale or trackbar in some native systems, 
            and pGUI called it an <a href="IupValuator.htm">IupValuator</a> or IupVal.
            <br>
            <br>
            orientation: optional orientation of slider. Can be NULL (defaults to HORIZONTAL), see <a href="#ORIENTATION">ORIENTATION</a> below.<br>
            value_changed: a procedure identifier, see <a href="#VALUE_CHANGED">VALUE_CHANGED</a> below.<br>
            For more information on the attributes and args parameters see <a href="gSetAttributes.htm">gSetAttributes</a>().<br>
            This is a <a href="g_paranormal.htm">paranormalised function</a> <small>(see <a href="#tech" onclick="opentech()">technicalia</a>).</small>
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupFlatValutor.htm">IupFlatValutor</a>,
          <a href="IupGLValutor.htm">IupGLValutor</a>
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
          <div style="float:left;">
<!--eucode>
-- demo\xpGUI\gSlider.exw
include xpGUI.e
constant title = "Slider"

procedure value_changed(gdx id)
    gdx dlg = gGetDialog(id)
    atom v = gGetAttribute(id,"VALUE")
    gSetAttribute(dlg,"TITLE","%s:%g",{title,v})
end procedure

gdx slider = gSlider(value_changed,"SIZE=220x30"),
    vbox = gVbox({slider},"MARGIN=9x9"),
    window = gDialog(vbox,title,`SIZE=240x80`)
gShow(window)
gMainLoop()
</eucode-->
<pre>
<font color="#000080"><i>-- demo\xpGUI\gSlider.exw</i></font>
<font color="#008080">include</font><font color="#000000"> xpGUI.e</font>
<font color="#008080">constant</font><font color="#000000"> title</font><font color="#0000FF"> =</font><font color="#008000"> "Slider"
</font>
<font color="#008080">procedure</font><font color="#000000"> value_changed</font><font color="#0000FF">(</font><font color="#7060A8">gdx</font><font color="#000000"> id</font><font color="#0000FF">)</font>
<font color="#7060A8">    gdx</font><font color="#000000"> dlg</font><font color="#0000FF"> =</font><font color="#7060A8"> gGetDialog</font><font color="#0000FF">(</font><font color="#000000">id</font><font color="#0000FF">)</font>
<font color="#004080">    atom</font><font color="#000000"> v</font><font color="#0000FF"> =</font><font color="#7060A8"> gGetAttribute</font><font color="#0000FF">(</font><font color="#000000">id</font><font color="#0000FF">,</font><font color="#008000">"VALUE"</font><font color="#0000FF">)</font>
<font color="#7060A8">    gSetAttribute</font><font color="#0000FF">(</font><font color="#000000">dlg</font><font color="#0000FF">,</font><font color="#008000">"TITLE"</font><font color="#0000FF">,</font><font color="#008000">"%s:%g"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#000000">title</font><font color="#0000FF">,</font><font color="#000000">v</font><font color="#800000">}</font><font color="#0000FF">)</font>
<font color="#008080">end procedure
</font>
<font color="#7060A8">gdx</font><font color="#000000"> slider</font><font color="#0000FF"> =</font><font color="#7060A8"> gSlider</font><font color="#0000FF">(</font><font color="#000000">value_changed</font><font color="#0000FF">,</font><font color="#008000">"SIZE=220x30"</font><font color="#0000FF">),</font>
<font color="#000000">    vbox</font><font color="#0000FF"> =</font><font color="#7060A8"> gVbox</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">slider</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000">"MARGIN=9x9"</font><font color="#0000FF">),</font>
<font color="#000000">    window</font><font color="#0000FF"> =</font><font color="#7060A8"> gDialog</font><font color="#0000FF">(</font><font color="#000000">vbox</font><font color="#0000FF">,</font><font color="#000000">title</font><font color="#0000FF">,</font><font color="#008000">`SIZE=240x80`</font><font color="#0000FF">)</font>
<font color="#7060A8">gShow</font><font color="#0000FF">(</font><font color="#000000">window</font><font color="#0000FF">)</font>
<font color="#7060A8">gMainLoop</font><font color="#0000FF">()</font>
</pre>
          </div>
          <img alt="gSlider" style="float:right;" src="images/gSlider.png" width="240" height="80"/>
          <div class="clear"></div>
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            In Motif, after the user clicks the handler a KILLFOCUS will be ignored when the control loses its focus.
            <br>
            <br>
            Keyboard Mapping<br>
            This is the default mapping when INVERTED has the default value, or ORIENTATION=HORIZONTAL+INVERTED=NO.
            <br>
            <br>
            Keys Action for HORIZONTAL <br>
            Right Arrow move right, increment by one step <br>
            Left Arrow move left, decrement by one step <br>
            Ctrl+Right Arrow or PgDn move right, increment by one page step <br>
            Ctrl+Left Arrow or PgUp move left, decrement by one page step <br>
            Home move all left, set to minimum <br>
            End move all right, set to maximum 
            <br>
            <br>
            This is the default mapping when INVERTED has the default value, or ORIENTATION=VERTICAL+INVERTED=YES.
            <br>
            <br>
            Keys Action for VERTICAL <br>
            Up Arrow move up, increment by one step <br>
            Down Arrow move down, decrement by one step <br>
            Ctrl+Up Arrow or PgUp move up, increment by one page step <br>
            Ctrl+Down Arrow or PgDn move down, decrement by one page step <br>
            Home move all up, set to maximum <br>
            End move all down, set to minimum 
            <br>
            <br>
            Visually all the keys move to the same direction independent from the INVERTED attribute.
            <br>
            <br>
            Semantically all the keys change the value depending on the INVERTED attribute.
            <br>
            <br>
            This behavior differs slightly from the native controls (Home and End keys are different). But it is the same in all systems.
            <br>
            <br>
            Invokes the C function IupVal. In pGUI, <nobr>IupVal()</nobr> and <nobr>IupValuator()</nobr> are identical; use whichever you prefer. 
            I felt there was something a little ambiguous about "IupVal" (eg value/valid), whereas "IupValuator" should cause fewer false assumptions.
            <br>
            <br>
            An example can be seen in demo\xpGUI\sample.exw
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            
         </td>
        </tr>
<!--        
//      <tr>
//       <td>
//        <a href="gSetAttribute.htm#BGCOLOR">BGCOLOR</a>
//       </td>
//       <td>
//          transparent in all systems except in Motif. It will use the background color of the native parent.
//       </td>
//      </tr>
-->
        <tr>
         <td>
?         INVERTED
         </td>
         <td>
            Invert the minimum and maximum positions on screen. 
            When INVERTED=YES maximum is at top and left (minimum is bottom and right), when INVERTED=NO maximum is at bottom and right (minimum is top and left). 
            The initial value depends on ORIENTATION passed as parameter on creation, if ORIENTATION=VERTICAL default is YES, if ORIENTATION=HORIZONTAL default is NO. (since 3.0)
         </td>
        </tr>
        <tr>
         <td>
?         MAX<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            The maximum value, default 100. 
<!--            When changed the display will not be updated until VALUE is set. [??] -->
         </td>
        </tr>
        <tr>
         <td>
?         MIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            The minimum value, default 0. 
<!--            When changed the display will not be updated until VALUE is set. [??] -->
         </td>
        </tr>
<!--
        <tr>
         <td>
          PAGESTEP<a href="notpgui.htm#IupValuator"><span style="color:orange; font-size:75%;"><sup>?</sup></span></a>
         </td>
         <td>
            Controls the increment for pagedown and pageup keys. It is not the size of the increment. 
            The increment size is "pagestep*(max-min)", so it must be 0&lt;pagestep&lt;1. Default is "0.1".
         </td>
        </tr>
-->
        <tr>
         <td>
?         <a href="gGetAttribute.htm#SIZE">SIZE</a>
         </td>
         <td>
            (non inheritable) The initial size is 100 pixels along the major axis, and the handler normal size on the minor axis. 
            If there are ticks then they are added to the natural size on the minor axis. The handler can be smaller than the normal size. 
            Set to NULL to allow the automatic layout use smaller values.
         </td>
        </tr>
<!--
        <tr>
         <td>
          SHOWTICKS
         </td>
         <td>
            [Windows and Motif Only] The number of tick marks along the valuator trail. 
            Minimum value is "2". Default is "0", in this case the ticks are not shown. 
            It can not be changed to 0 from a non zero value, or vice-versa, after the control is mapped. GTK does not support ticks.
         </td>
        </tr>
        <tr>
         <td>
          STEP<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            Controls the increment for keyboard control and the mouse wheel. It is not the size of the increment. 
            The increment size is "step*(max-min)", so it must be 0&lt;step&lt;1. Default is "0.01".
         </td>
        </tr>
        <tr>
         <td>
          TICKSPOS
         </td>
         <td>
            [Windows Only] (creation only) Allows to position the ticks in both sides (BOTH) or in the reverse side (REVERSE). 
            Default: NORMAL. 
            The normal position for horizontal orientation is at the top of the control, and for vertical orientation is at the left of the control. 
            In Motif, the ticks position is always normal. (since 3.0)
         </td>
        </tr>
-->
        <tr>
         <td>
?         ORIENTATION<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable) Informs whether the valuator is "VERTICAL" or "HORIZONTAL". 
            Vertical valuators are bottom to up, and horizontal valuators are left to right variations of min to max (but can be inverted using INVERTED). 
            Default: "HORIZONTAL".
         </td>
        </tr>
        <tr>
         <td>
          VALUE
         </td>
         <td>
<!--            (non inheritable) Contains -->
            A number between MIN and MAX, indicating the current position, default 0.
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
            <a href="gSetAttribute.htm#ACTIVE">ACTIVE</a>, 
            <a href="gSetAttribute.htm#CANFOCUS">CANFOCUS</a>, 
            <a href="gSetAttribute.htm#EXPAND">EXPAND</a>, 
            <a href="gSetAttribute.htm#FONT">FONT</a>, 
<!--            <a href="gSetAttribute.htm#NAME">NAME</a>, -->
<!--?           <a href="gGetAttribute.htm#POSITION">POSITION</a>, -->
<!--?           <a href="gGetAttribute.htm#SCREENPOSITION">SCREENPOSITION</a>, -->
            <a href="gSetAttribute.htm#MINSIZE">MINSIZE</a>, 
            <a href="gSetAttribute.htm#MAXSIZE">MAXSIZE</a>,
            <a href="gSetAttribute.htm#TIP">TIP</a>, 
            <a href="gGetAttribute.htm#SIZE">SIZE</a>,
<!--            <a href="gSetAttribute.htm#ZORDER">ZORDER</a>,-->
            <a href="gSetAttribute.htm#VISIBLE">VISIBLE</a>. 
         </td>
        </tr>
        <tr>
         <td>
          <b>Handlers:</b>
         </td>
         <td>
          <br>
          <a name=VALUE_CHANGED></a>
         </td>
        </tr>
        <tr>
         <td>
          <a href="gSetHandler.htm#VALUE_CHANGED">VALUE_CHANGED</a>
         </td>
         <td>
            Called after the value was interactively changed by the user.
            <br>
            <br>
            procedure value_changed(<a href="gdx.htm">gdx</a> id)<br>
            id: identifier of the element that activated the event.
<!--
            <br>
            <br>
            [PL: moved from notes:] This control replaces the old IupVal implemented in the additional controls. 
            <br>
            The old handlers are still supported but called only if the VALUE_CHANGED handler is not defined. 
            <br>
            The MOUSEMOVE_CB handler is only called when the user moves the handler using the mouse. <br>
            The BUTTON_PRESS_CB handler is called only when the user press a key that changes the position of the handler. <br>
            The BUTTON_RELEASE_CB handler is called only when the user releases the mouse button after moving the handler.
-->
         </td>
        </tr>
        <tr>
         <td>
          also
         </td>
         <td>
<!--            <a href="gSetHandler.htm#DESTROY_CB">DESTROY_CB</a>, -->
<!--
            <a href="gSetHandler.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="gSetHandler.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="gSetHandler.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="gSetHandler.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
-->
<!--            <a href="gSetHandler.htm#HELP_CB">HELP_CB</a> -->
            <a href="gSetHandler.htm#KEY">KEY</a>: All common handlers are supported.<br>
          <a name=tech></a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            As this is a <a href="g_paranormal.htm">paranormalised function</a>, and with no expectation that you should attempt to memorise 
            this lot, except maybe "ovaa", you can assume that all of the following are potentially perfectly valid, with the fairly obvious 
            restrictions that any parameters <i>must</i> be in strict ovaa-order, and no args without attributes:
            <br>
            <br>
<small>
<!--eucode>
                        gSlider()
                        gSlider(value_changed)
                        gSlider(value_changed, attributes)
                        gSlider(value_changed, attributes, args)
                        gSlider(attributes, args)
                        gSlider(attributes)                      -- (see 2nd note)
                        gSlider(orientation)
                        gSlider(orientation, value_changed)
                        gSlider(orientation, attributes)
                        gSlider(orientation, attributes, args)
                        gSlider(orientation, value_changed, attributes)
                        gSlider(orientation, value_changed, attributes, args)  -- (the full set)
</eucode-->
<pre>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">()</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">value_changed</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">value_changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">value_changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">)                     </font><font color="#000080"><i> -- (see 2nd note)</i></font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">orientation</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">orientation</font><font color="#0000FF">,</font><font color="#000000"> value_changed</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">orientation</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">orientation</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">orientation</font><font color="#0000FF">,</font><font color="#000000"> value_changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gSlider</font><font color="#0000FF">(</font><font color="#000000">orientation</font><font color="#0000FF">,</font><font color="#000000"> value_changed</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">) </font><font color="#000080"><i> -- (the full set)</i></font>
</pre>
</small>
            <br>
            Note that in practice orientation and value_changed are actually defined as <a href="object.htm">object</a>, and 
            attributes as a <a href="sequence.htm">sequence</a> rather than a string, but they are all manually and thoroughly 
            verified to be of the documented types, after being repositioned via xpGUI.e/paranormalise_traa() [which is shared 
            with <a href="gButton.htm">gButton</a>, etc].
            <br>
            <br>
            Note that gSlider(attributes) is distinguished from gSlider(orientation) by the presence of an '=' character,
            see <a href="g_paranormal.htm#eqch">here</a>, though since you&rsquo;d never actually want an '=' in the ORIENTATION
            that probably doesn&rsquo;t really apply.
         </td>
        </tr>
       </table>
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
