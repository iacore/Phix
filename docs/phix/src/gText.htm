<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gText</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            include xpGUI.e
            <br>
            <br>
            <a href="gdx.htm">gdx</a> id = gText([<a href="rtn.htm">rtn</a> value_changed=NULL,] 
                                                 <a href="string.htm">string</a> attributes="",
                                                 <a href="html/glossary.htm#dwordseq">dword_seq</a> args={})
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Creates an editable single line text input field.
            <br>
            <br>
            value_changed: (optional) a procedure to be invoked when the contents are changed, see <a href="#VALUE_CHANGED">VALUE_CHANGED</a> below.<br>
            For more information on the attributes and args parameters see <a href="gSetAttributes.htm">gSetAttributes</a>().<br>
            This is a <a href="g_paranormal.htm">paranormalised function</a>.  <small>(see <a href="#tech" onclick="opentech()">technicalia</a>)</small>
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="gList.htm">gList</a>, 
          <a href="gCanvas.htm#gCanvasText">gCanvasText</a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
          <div style="float:left;">
<!--eucode>
-- demo\xpGUI\gText.exw
include xpGUI.e
gdx txt = gText(`VALUE="one two three"`),
    hbx = gHbox({txt},"MARGIN=13x13"),
    dlg = gDialog(hbx,"gText","SIZE=240x80")
gShow(dlg)
gMainLoop()
</eucode-->
<pre>
<font color="#000080"><i>-- demo\xpGUI\gText.exw</i></font>
<font color="#008080">include</font><font color="#000000"> xpGUI.e</font>
<font color="#7060A8">gdx</font><font color="#000000"> txt</font><font color="#0000FF"> =</font><font color="#7060A8"> gText</font><font color="#0000FF">(</font><font color="#008000">`VALUE="one two three"`</font><font color="#0000FF">),</font>
<font color="#000000">    hbx</font><font color="#0000FF"> =</font><font color="#7060A8"> gHbox</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">txt</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000">"MARGIN=13x13"</font><font color="#0000FF">),</font>
<font color="#000000">    dlg</font><font color="#0000FF"> =</font><font color="#7060A8"> gDialog</font><font color="#0000FF">(</font><font color="#000000">hbx</font><font color="#0000FF">,</font><font color="#008000">"gText"</font><font color="#0000FF">,</font><font color="#008000">"SIZE=240x80"</font><font color="#0000FF">)</font>
<font color="#7060A8">gShow</font><font color="#0000FF">(</font><font color="#000000">dlg</font><font color="#0000FF">)</font>
<font color="#7060A8">gMainLoop</font><font color="#0000FF">()</font>
</pre>
          </div>
          <img alt="gText" style="float:right;" src="images/gText.png" width="240" height="80"/>
          <div class="clear"></div>
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
<X!--
            When MULTILINE=YES the Enter key will add a new line, and the Tab key will insert a Tab. 
//          So the "DEFAULTENTER" button will not be processed when the element has the keyboard focus, also to change focus to the next element press 
            &lt;Ctrl&gt;+&lt;Tab&gt;.
            <br>
            <br>
            In Windows, if you press a Ctrl+key combination that is not supported by the control, then a beep is sound.
            <br>
            <br>
--X>
            When using UTF-8 strings in GTK be aware that all attributes are indexed by characters, NOT by byte index, because some characters in UTF-8 can use more than one byte. 
            This also applies to Windows if FORMATTING=YES depending on the Windows codepage (for example East Asian codepage where some characters take two bytes).
            <br>
            <br>
            Internal Drag&Drop support is enabled by default. But in Windows the internal Drag&Drop is enabled only if FORMATTING=YES. 
            In GTK the internal Drag&Drop can NOT be disabled, so it will conflict with the Drag & Drop attributes and handlers.
            <br>
            <br>
            Navigation, Selection and Clipboard Keys
            <br>
            Here is a list of the common keys for all drivers. Other keys are available depending on the driver.
            <ul>
            <li>Arrows - move by individual characters/lines </li>
            <li>Ctrl+Arrows - move by words/paragraphs </li>
            <li>Home/End - move to begin/end line </li>
            <li>Ctrl+Home/End - move to begin/end text </li>
            <li>PgUp/PgDn - move vertically by pages </li>
            <li>Ctrl+PgUp/PgDn - move horizontally by pages </li>
            <li>Shift+Arrows - select charaters </li>
            <li>Ctrl+A - select all </li>
            <li>Del - delete the character at right </li>
            <li>Backspace - delete the character at left </li>
            <li>Ctrl+C - copy </li>
            <li>Ctrl+X - cut </li>
            <li>Ctrl+V - paste </li>
            </ul>
<X!--
//          <a name=IupMultiLine></a>
//          <br>
//          An IupMultiLine is just an IupText with MULTILINE=YES.
//          <br>
--X>
            <br>
            Some examples can be seen in demo\xpGUI\sample.exw
         </td>
        </tr>
-->
<!--
            <a name=aux></a>
        <tr>
         <td>
          <b>Auxiliary Functions</b>
         </td>
         <td>
?           <a href="integer.htm">integer</a> pos = <b>IupTextConvertLinColToPos</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin, col)<br>
            Converts a (lin, col) character positioning into an absolute position. <br>
            lin and col starts at 1, pos starts at 0. For single line controls pos is always "col-1".
            <br>
            <br>
            <a href="integer.htm">integer</a> {lin,col} = <b>IupTextConvertPosToLinCol</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> pos)<br>
            Converts an absolute position into a (lin, col) character positioning. <br>
            lin and col starts at 1, pos starts at 0. For single line controls lin is always 1, and col is always "pos+1".
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Attributes:</b>
         </td>
         <td>
            
         </td>
        </tr>
<!--
        <tr>
         <td>
?         ALIGNMENT
         </td>
         <td>
            [Windows and GTK Only] (non inheritable) text alignment. <br>
            Possible values: "ALEFT", "ARIGHT", "ACENTER". Default: "ALEFT". <br>
            In Motif, text is always left aligned.
         </td>
        </tr>
        <tr>
         <td>
?         APPEND<a href="notpgui.htm#IupText"><span style="color:orange; font-size:75%;"><sup>?</sup></span></a>
         </td>
         <td>
            (write-only) Inserts a text at the end of the current text. 
            In the Multiline, if APPENDNEWLINE=YES, a "\n" character will be automatically inserted before 
            the appended text if the current text is not empty(APPENDNEWLINE default is YES). 
            Ignored if set before map.
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
          <a href="gSetAttribute.htm#BGCOLOR">BGCOLOR</a>
         </td>
         <td>
            Background color of the control. <X!X--Default: the global attribute <a href="gGetGlobal.htm#TXTBGCOLOR">TXTBGCOLOR</a>.--X>
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         BORDER
         </td>
         <td>
            (creation only) Shows a border around the text. Default: "YES".
         </td>
        </tr>
        <tr>
         <td>
?         PROPAGATEFOCUS
         </td>
         <td>
            (non inheritable) enables the focus handler forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)
         </td>
        </tr>
        <tr>
         <td>
?         CARET
         </td>
         <td>
            (non inheritable) Character position of the insertion point. Its format depends in MULTILINE=YES. The first position, lin or col, is "1".
            <br>
            <br>
            For multiple lines: a string with the "lin,col" format, where lin and col are integer numbers corresponding to the caret&rsquo;s position.
            <br>
            <br>
            For single line: a string in the "col" format, where col is an integer number corresponding to the caret&rsquo;s position.
            <br>
            <br>
            When lin is greater than the number of lines, the caret is placed at the last line. <br>
            When col is greater than the number of characters in the given line, the caret is placed after the last character of the line.
            <br>
            <br>
            If the caret is not visible the text is scrolled to make it visible.
            <br>
            <br>
            In Windows, if the element does not have the focus the returned value is the position of the first character of the current selection. <br>
            The caret is only displayed if the element has the keyboard focus, but its position can be changed even if not visible. <br>
            When changed it will also change the selection but the text will be scrolled only when it receives the focus.
            <br>
            <br>
            See the Notes above if using UTF-8 strings in GTK.
         </td>
        </tr>
        <tr>
         <td>
?         CARETPOS
         </td>
         <td>
            (non inheritable) Also the character position of the insertion point, but using a zero based character unique index "pos". <br>
            Useful for indexing the VALUE string. See the Notes above if using UTF-8 strings in GTK. (since 3.0)
         </td>
        </tr>
//      <tr>
//       <td>
//?       CHANGECASE
//       </td>
//       <td>
//          (non inheritable) Change case according to given conversion. <br>
//          Can be UPPER, LOWER, TOGGLE, or TITLE. <br>
//          TITLE case change first letter of words separated by spaces to upper case others to lower case, 
//          but first letter is changed only if word has more than 3 characters, for instance: "Best of the World". <br>
//          Supports Latin-1 encoding only, even when using UTF-8. Does not depend on current locale. (since 3.28)
//       </td>
//      </tr>
//      <tr>
//       <td>
//?       CLIPBOARD
//       </td>
//       <td>
//          (write-only) clear, cut, copy or paste the selection to or from the clipboard. Values: "CLEAR", "CUT", "COPY" or "PASTE". <br>
//          In Windows UNDO is also available, and REDO is available when FORMATTING=YES. (since 3.0)
//       </td>
//      </tr>
//      <tr>
//       <td>
//?       COUNT
//       </td>
//       <td>
//          (read-only) returns the number of characters in the text, including the line breaks. (since 3.5)
//       </td>
//      </tr>
        <tr>
         <td>
?         CUEBANNER
         </td>
         <td>
            [Windows and GTK Only] (non inheritable) a text that is displayed when there is no text at the control. <br>
            It works as a textual cue, or tip to prompt the user for input. <br>
            Valid only for MULTILINE=NO, and works only when Visual Styles are enabled.
         </td>
        </tr>
        <tr>
         <td>
?         DROPFILESTARGET
         </td>
         <td>
            [Windows and GTK Only] (non inheritable) Enable or disable the drop of files. <br>
            Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled.
         </td>
        </tr>
-->
<!--
//      <tr>
//       <td>
//?       <a href="gSetAttribute.htm#FGCOLOR">FGCOLOR</a>
//       </td>
//       <td>
//          Text color. Default: the global attribute <a href="gGetGlobal.htm#TXTFGCOLOR">TXTFGCOLOR</a>.
//       </td>
//      </tr>
-->
<!--
        <tr>
         <td>
?         FILTER
         </td>
         <td>
            [Windows Only] (non inheritable) allows a custom filter to process the characters: <br>
            Can be LOWERCASE, UPPERCASE or NUMBER (only numbers allowed).
         </td>
        </tr>
        <tr>
         <td>
?         FORMATTING
         </td>
         <td>
            [Windows and GTK Only] (non inheritable) When enabled allow the use of text formatting attributes. <br>
            In GTK is always enabled, but only when MULTILINE=YES. Default: NO.<br>
            (See below)
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         INSERT
         </td>
         <td>
            (write-only) Inserts a text in the caret&rsquo;s position, also replaces the current selection if any. <br>
            Ignored if set before map.
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         LINECOUNT
         </td>
         <td>
            (read-only) returns the number of lines in the text. When MULTILINE=NO returns always 1.
         </td>
        </tr>
        <tr>
         <td>
?         LINEVALUE
         </td>
         <td>
            (read-only) returns the text of the line where the caret is. It does not include the "\n" character. <br>
            When MULTILINE=NO returns the same as VALUE.
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         LOADRTF
         </td>
         <td>
            (write-only) [Windows Only]: loads formatted text from a Rich Text Format file given its filename. <br>
            The attribute LOADRTFSTATUS is set to OK or FAILED after the file is loaded. (since 3.28)
         </td>
        </tr>
        <tr>
         <td>
?         SAVERTF
         </td>
         <td>
            (write-only) [Windows Only]: saves formatted text to a Rich Text Format file given its filename.<br>
            The attribute SAVERTFSTATUS is set to OK or FAILED after the file is saved. (since 3.28)
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         MASK<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable) Defines a mask that will filter interactive text input.
         </td>
        </tr>
        <tr>
         <td>
?         MULTILINE
         </td>
         <td>
            (creation only) (non inheritable) allows the edition of multiple lines. <br>
            In single line mode some characters are invalid, like "\t", "\r" and "\n". Default: NO. <br>
            When set to Yes will also reset the SCROLLBAR attribute to Yes.
         </td>
        </tr>
        <tr>
         <td>
?         NC
         </td>
         <td>
            Maximum number of characters allowed for keyboard input, larger text can still be set using attributes. <br>
            The maximum value is the limit of the VALUE attribute. <br>
            The "0" value is the same as maximum. <br>
            Default: maximum.
         </td>
        </tr>
        <tr>
         <td>
?         NOHIDESEL
         </td>
         <td>
            [Windows Only] do not hide the selection when the control loses its focus. Default: Yes.
         </td>
        </tr>
        <tr>
         <td>
?         OVERWRITE
         </td>
         <td>
            [Windows and GTK Only] (non inheritable) turns the overwrite mode ON or OFF. <br>
            Works only when FORMATTING=YES.
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         PASSWORD
         </td>
         <td>
            (creation only) [Windows and GTK Only] (non inheritable) Hide the typed character using an "*". Default: "NO".
         </td>
        </tr>
        <tr>
         <td>
?         READONLY
         </td>
         <td>
            Allows the user only to read the contents, without changing it. <br>
            Restricts keyboard input only, text value can still be changed using attributes. <br>
            Navigation keys are still available. Possible values: "YES", "NO". Default: NO.
         </td>
        </tr>
        <tr>
         <td>
?         SCROLLBAR
         </td>
         <td>
            (creation only) Valid only when MULTILINE=YES. <br>
            Associates an automatic horizontal and/or vertical scrollbar to the multiline. <br>
            Can be: "VERTICAL", "HORIZONTAL", "YES" (both) or "NO" (none). Default: "YES". <br>
            For all systems, when SCROLLBAR!=NO the natural size will always include its size even if the native system hides the scrollbar. <br>
            If AUTOHIDE=YES scrollbars are visible only if they are necessary, by default AUTOHIDE=NO. <br>
            In Windows when FORMATTING=NO, AUTOHIDE is not supported.
         </td>
        </tr>
        <tr>
         <td>
?         SCROLLTO
         </td>
         <td>
            (non inheritable, write only) Scroll the text to make the given character position visible. <br>
            It uses the same format and reference of the CARET attribute ("lin:col" or "col" starting at 1). <br>
            In Windows, when FORMATTING=Yes "col" is ignored.
         </td>
        </tr>
        <tr>
         <td>
?         SCROLLTOPOS
         </td>
         <td>
            (non inheritable, write only) Scroll the text to make the given character position visible. <br>
            It uses the same format and reference of the CARETPOS attribute ("pos" starting at 0).
         </td>
        </tr>
        <tr>
         <td>
?         SELECTEDTEXT
         </td>
         <td>
            (non inheritable) Selection text. Returns NULL if there is no selection. <br>
            When changed replaces the current selection. <br>
            Similar to INSERT, but does nothing if there is no selection.
         </td>
        </tr>
        <tr>
         <td>
?         SELECTION
         </td>
         <td>
            (non inheritable) Selection interval in characters. Returns NULL if there is no selection. <br>
            Its format depends in MULTILINE=YES. The first position, lin or col, is "1".
            <br>
            <br>
            For multiple lines: a string in the "lin1,col1:lin2,col2" format, where lin1, col1, lin2 and col2 
            are integer numbers corresponding to the selection&rsquo;s interval. <br>
            col2 correspond to the character after the last selected character.
            <br>
            <br>
            For single line: a string in the "col1:col2" format, where col1 and col2 are integer numbers 
            corresponding to the selection&rsquo;s interval. <br>
            col2 correspond to the character after the last selected character.
            <br>
            <br>
            In Windows, when changing the selection the caret position is also changed.
            <br>
            <br>
            The values ALL and NONE are also accepted independently of MULTILINE.
            <br>
            <br>
            See the Notes above if using UTF-8 strings in GTK. 
         </td>
        </tr>
        <tr>
         <td>
?         SELECTIONPOS
         </td>
         <td>
            (non inheritable) Same as SELECTION but using a zero based character index "pos1:pos2". <br>
            Useful for indexing the VALUE string. <br>
            The values ALL and NONE are also accepted. <br>
            See the Notes above if using UTF-8 strings in GTK.
         </td>
        </tr>
-->
        <tr>
         <td>
          <a href="gGetAttribute.htm#SIZE">SIZE</a>
         </td>
         <td>
            (non inheritable) Since the contents can be changed by the user, the Natural Size is not affected by the text contents.
            <br>
            <br>
            The (natural) size defaults to sufficient for about 20 characters under the default font, or (not guaranteed) about 158x22 pixels
            under GTK2, 168x34 under GTK3, and 151x20 under WinAPI. While the natural width does not change, the natural height <i>does</i>
            respect <a href="gSetAttribute.htm#FONT">FONT</a> changes, with said height preserved by (say) gSetAttribute(id,"SIZE",250).
<!--            Use VISIBLECOLUMNS and VISIBLELINES to control the Natural Size. -->
            <br>
         </td>
        </tr>
<!--
--DEV gSpin():
          <a name=SPIN></a>
        <tr>
         <td>
?         SPIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable, creation only) enables a spin control attached to the element. Default: NO. <br>
            The spin increments and decrements an integer number. <br>
            The editing in the element is still available.
            <br>
            <br>
            For an example, or rather four, see demo\pGUI\boids3d.exw.
         </td>
        </tr>
        <tr>
         <td>
?         SPINVALUE
         </td>
         <td>
            (non inheritable) the current value of the spin. <br>
            The value is limited to the minimum and maximum values.
         </td>
        </tr>
        <tr>
         <td>
?         SPINMAX<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable) the maximum value. Default: 100.
         </td>
        </tr>
        <tr>
         <td>
?         SPINMIN<a href="notpgui.htm"><span style="color:lime;"><sup>+</sup></span></a>
         </td>
         <td>
            (non inheritable) the minimum value. Default: 0.
         </td>
        </tr>
        <tr>
         <td>
?         SPININC
         </td>
         <td>
            (non inheritable) the increment value. Default: 1.
         </td>
        </tr>
        <tr>
         <td>
?         SPINALIGN
         </td>
         <td>
            (creation only) the position of the spin. Can be LEFT or RIGHT. Default: RIGHT. In GTK is always RIGHT.
         </td>
        </tr>
        <tr>
         <td>
?         SPINWRAP
         </td>
         <td>
            (creation only) if the position reach a limit it continues from the opposite limit. Default: NO.
         </td>
        </tr>
//      <tr>
//       <td>
//?       SPINAUTO
//       </td>
//       <td>
//          (creation only) enables the automatic update of the text contents. Default: YES. <br>
//          Use SPINAUTO=NO and the VALUE attribute during SPIN_CB to control the text contents when the spin is incremented.
//          <br>
//          <br>
//          In Windows, the increment is multiplied by 5 after 2 seconds and multiplied by 20 after 5 seconds of a spin button pressed. <br>
//          In GTK, the increment change is progressively accelerated when a spin button is pressed.
//       </td>
//      </tr>
--/gSpin>...
-->
<!--
        <tr>
         <td>
?         TABSIZE
         </td>
         <td>
            [Windows and GTK Only] Valid only when MULTILINE=YES. <br>
            Controls the number of characters for a tab stop. Default: 8.
         </td>
        </tr>
-->
        <tr>
         <td>
          VALUE
         </td>
         <td>
            (non inheritable) Text displayed to or entered/modified by the user. <br>
<!--            The '\n' character indicates a new line, valid only when MULTILINE=YES. <br>
            After the element is mapped and if there is no text will return the empty string "".-->
         </td>
        </tr>
<!--
        <tr>
         <td>
?         VALUEMASKED
         </td>
         <td>
            (non inheritable) (write-only) sets VALUE but first checks if it is validated by MASK. <br>
            If not does nothing. (since 3.4)
         </td>
        </tr>
        <tr>
         <td>
?         VISIBLECOLUMNS
         </td>
         <td>
            Defines the number of visible columns for the Natural Size, this means that will act also as minimum number of visible columns. <br>
            It uses a wider character size then the one used for the <a href="gGetAttribute.htm#SIZE">SIZE</a> attribute so strings will fit better 
            without the need of extra columns. <br>
            As for <a href="gGetAttribute.htm#SIZE">SIZE</a> you can set to NULL after map to use it as an initial value. Default: 5
         </td>
        </tr>
        <tr>
         <td>
?         VISIBLELINES
         </td>
         <td>
            When MULTILINE=YES defines the number of visible lines for the Natural Size, this means that will act also as minimum number of visible lines. <br>
            As for <a href="gGetAttribute.htm#SIZE">SIZE</a> you can set to NULL after map to use it as an initial value. Default: 1
         </td>
        </tr>
        <tr>
         <td>
?         WORDWRAP
         </td>
         <td>
            (creation only) Valid only when MULTILINE=YES. <br>
            If enabled will force a word wrap of lines that are greater than the with of the control, 
            and the horizontal scrollbar will be removed. Default: NO.
         </td>
        </tr>
-->
        <tr>
         <td>
          Also
         </td>
         <td>
            <a href="gSetAttribute.htm#ACTIVE">ACTIVE</a>, 
            <a href="gSetAttribute.htm#BGCOLOR">BGCOLOR</a>,
            <a href="gSetAttribute.htm#CANFOCUS">CANFOCUS</a>, 
            <a href="gSetAttribute.htm#FONT">FONT</a>, 
<!--        <a href="gSetAttribute.htm#NAME">NAME</a>, -->
            <a href="gSetAttribute.htm#EXPAND">EXPAND</a>, 
<!--?           <a href="gSetAttribute.htm#PADDING">PADDING</a>, -->
<!--            <a href="gGetAttribute.htm#POSITION">POSITION</a>, -->
<!--            <a href="gGetAttribute.htm#SCREENPOSITION">SCREENPOSITION</a>, -->
            <a href="gSetAttribute.htm#MARGIN">MARGIN</a>, 
            <a href="gSetAttribute.htm#MINSIZE">MINSIZE</a>, 
            <a href="gSetAttribute.htm#MAXSIZE">MAXSIZE</a>,
<!--            <a href="gSetAttribute.htm#WID">WID</a>, -->
            <a href="gGetAttribute.htm#SIZE">SIZE</a>,
            <a href="gSetAttribute.htm#TIP">TIP</a>, 
<!--            <a href="gSetAttribute.htm#RASTERSIZE">RASTERSIZE</a>,-->
<!--            <a href="gSetAttribute.htm#ZORDER">ZORDER</a>,-->
            <a href="gSetAttribute.htm#VISIBLE">VISIBLE</a>.
            <br>
            <br>
?           Drag & Drop attributes are supported. See Notes above.
         </td>
        </tr>
<!--
        <tr>
         <td>
          <b>Formatting:</b>
         </td>
         <td>
            (only applies when FORMATTING is YES)
         </td>
        </tr>
        <tr>
         <td>
          ADDFORMATTAG
         </td>
         <td>
            [write only] (non inheritable) <br>
            Name of a format tag element to be added to the IupText. The name is associated in C using IupSetHandle. <br>
            The name association must be done before setting the attribute. It will set the ADDFORMATTAG_HANDLE with the associated handle.<br>
         </td>
        </tr>
        <tr>
         <td>
          ADDFORMATTAG_HANDLE
         </td>
         <td>
            [write only] (non inheritable) <br>
            Handle of a format tag element to be added to the IupText. <br>
            The tag element will be automatically destroyed when the IupText is mapped. <br>
            If the IupText is already mapped, the format tag is immediately destroyed when the attribute is set. <br>
            The format tag can NOT be reused.
         </td>
        </tr>
        <tr>
         <td>
          REMOVEFORMATTING
         </td>
         <td>
            [write only] (non inheritable) <br>
            Removes the formatting of the current selection if Yes or NULL, and from all text if ALL is used.<br>
            <a name=formattag></a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Format Tag:</b>
         </td>
         <td>
            The format tag element is a simple <a href="IupUser.htm">IupUser</a> element with some known attributes that 
            will be interpreted when the tag is updated in the native system. 
            <br>
            <br>
            The formatting depends on the existing text, so if VALUE attribute is set, all formatting is lost. <br>
            You must set it again for the new text.
            <br>
            <br>
            If the FONT attribute of the IupText is set then it will affect the format of all characters in the text.
            <br>
            <br>
            The default values can not be dynamically changed.
         </td>
        </tr>
        <tr>
         <td>

         </td>
         <td>
            General Format Tag Attributes
         </td>
        </tr>
        <tr>
         <td>
          BULK
         </td>
         <td>
            flag that means this tag is composed by several tags as its children. <br>
            Used to optimize format tag modifications. Default: NO. (since 3.3)
         </td>
        </tr>
        <tr>
         <td>
          CLEANOUT
         </td>
         <td>
            when BULK=Yes is used to clear all the formatting at start. Default: NO. (since 3.3)
         </td>
        </tr>
        <tr>
         <td>
          SELECTION/SELECTIONPOS
         </td>
         <td>
            same as the IupText SELECTION/SELECTIONPOS attributes. <br>
            If not defined the IupText attribute will be used. <br>
            If the IupText attribute is also not defined then the current position will receive the format, 
            so new text inserted or typed will be formatted with the tag (this is not working in GTK). <br>
            Different tags that use the same selection interval are combined. <br>
            Setting these attributes here will not change the current setting in IupText (since 3.3).
         </td>
        </tr>
        <tr>
         <td>
          UNITS
         </td>
         <td>
            [Windows Only]: 
            By default all distance units are integers in pixels, but in Windows you can also specify 
            integer units in TWIPs (one twip is 1/1440 of an inch). <br>
            Can be TWIP or PIXELS. Default: PIXELS.
         </td>
        </tr>
        <tr>
         <td>

         </td>
         <td>
            Paragraph Format Tag Attributes
         </td>
        </tr>
        <tr>
         <td>
          ALIGNMENT
         </td>
         <td>
            Can be JUSTIFY, RIGHT, CENTER and LEFT. Default: LEFT.
         </td>
        </tr>
        <tr>
         <td>
          INDENT
         </td>
         <td>
            paragraph indentation, the distance between the margin and the paragraph. <br>
            In Windows the right indentation, and the indentation of the second and subsequent 
            lines (relative to the indentation of the first line) can be independently set 
            using the INDENTRIGHT and INDENTOFFSET attributes, but only when INDENT is set.
         </td>
        </tr>
        <tr>
         <td>
          LINESPACING
         </td>
         <td>
            the distance between lines of the same paragraph. <br>
            In Windows, the values SINGLE, ONEHALF and DOUBLE can be used.
         </td>
        </tr>
        <tr>
         <td>
          NUMBERING
         </td>
         <td>
            [Windows Only]: 
            Can be <br>
            BULLET (bullet symbol), <br>
            ARABIC (arabic numbers - 1,2,3...), <br>
            LCLETTER (lowercase letters - a,b,c...), <br>
            UCLETTER (uppercase letters - A,B,C...), <br>
            LCROMAN (lowercase Roman numerals - i,ii,iii...), <br>
            UCROMAN (uppercase Roman numerals - I,II,III...), and <br>
            NONE. <br>
            Default: NONE.
         </td>
        </tr>
        <tr>
         <td>
          NUMBERINGSTYLE
         </td>
         <td>
            [Windows Only]: 
            Can be <br>
            RIGHTPARENTESES "a)", <br>
            PARENTESES "(a)", <br>
            PERIOD "a.", <br>
            NONUMBER (it will skip the numbering or bullet for the item) and <br>
            NONE "". <br>
            Default: NONE.
         </td>
        </tr>
        <tr>
         <td>
          NUMBERINGTAB
         </td>
         <td>
            [Windows Only]: Minimum distance from a paragraph numbering or bullet to the paragraph text.
         </td>
        </tr>
        <tr>
         <td>
          SPACEAFTER
         </td>
         <td>
            distance left empty above the paragraph.
         </td>
        </tr>
        <tr>
         <td>
          SPACEBEFORE
         </td>
         <td>
            distance left empty below the paragraph.
         </td>
        </tr>
        <tr>
         <td>
          TABSARRAY
         </td>
         <td>
            a sequence of tab positions and alignment up to 32 tabs. <br>
            It uses the format:"pos align pos align pos align...". <br>
            Position is the distance relative to the left margin and alignment can be LEFT, CENTER, RIGHT and DECIMAL. <br>
            In GTK only LEFT is currently supported. <br>
            When DECIMAL alignment is used, the text is aligned according to a decimal point or period in the text, it is normally used to align numbers.
         </td>
        </tr>

        <tr>
         <td>

         </td>
         <td>
            Character Format Tag Attributes
         </td>
        </tr>
//      <tr>
//       <td>
//        BGCOLOR
//       </td>
//       <td>
//          string containing a color in the format "rrr ggg bbb" for the background of the text.
//       </td>
//      </tr>
        <tr>
         <td>
          DISABLED
         </td>
         <td>
            [Windows Only]: Can be YES or NO. Default NO. Set the visual appearance to disabled.
         </td>
        </tr>
//      <tr>
//       <td>
//        FGCOLOR
//       </td>
//       <td>
//          string containing a color in the format "rrr ggg bbb" for the text.
//       </td>
//      </tr>
        <tr>
         <td>
          FONTSCALE
         </td>
         <td>
//          a size scale relative to the selected or current size. <br>
            Values greatter than 1 will increase the font. <br>
            Values smaller than 1 will shrink the font. Default: 1.0. <br>
            The following values are also accepted: <br>
            "XX-SMALL" (0.58), <br>
            "X-SMALL" (0.64), <br>
            "SMALL" (0.83), <br>
            "MEDIUM" (1.0), <br>
            "LARGE" (1.2), <br>
            "X-LARGE" (1.44), <br>
            "XX-LARGE" (1.73).
         </td>
        </tr>
        <tr>
         <td>
          FONTFACE
         </td>
         <td>
            the face name of the font.
         </td>
        </tr>
        <tr>
         <td>
          FONTSIZE
         </td>
         <td>
            the size of the font in pixels or points. Pixel size uses negative values.
         </td>
        </tr>
        <tr>
         <td>
          ITALIC
         </td>
         <td>
            Can be YES or NO. Default NO.
         </td>
        </tr>
        <tr>
         <td>
          LANGUAGE
         </td>
         <td>
            [GTK Only]: A text with a description of the text language. <br>
            The same value can be used in the "SYSTEMLANGUAGE" global attribute.
         </td>
        </tr>
        <tr>
         <td>
          RISE
         </td>
         <td>
            the distance, positive or negative from the base line. <br>
            Can also use the values SUPERSCRIPT and SUBSCRIPT, but this values will also reduce the size of the font.
         </td>
        </tr>
        <tr>
         <td>
          SMALLCAPS
         </td>
         <td>
            [GTK Only]: Can be YES or NO. Default NO. (Does not work always, depends on the font)
         </td>
        </tr>
        <tr>
         <td>
          PROTECTED
         </td>
         <td>
            Can be YES or NO. Default NO. When set to YES the selected text can NOT be edited.
         </td>
        </tr>
        <tr>
         <td>
          STRETCH
         </td>
         <td>
            [GTK Only]: Can be EXTRA_CONDENSED, CONDENSED, SEMI_CONDENSED, NORMAL, SEMI_EXPANDED, EXPANDED and EXTRA_EXPANDED. Default NORMAL. <br>
            (Does not work always, depends on the font)
         </td>
        </tr>
        <tr>
         <td>
          STRIKEOUT
         </td>
         <td>
            Can be YES or NO. Default NO.
         </td>
        </tr>
        <tr>
         <td>
          UNDERLINE
         </td>
         <td>
            Can be SINGLE, DOUBLE, DOTTED or NONE. Default NONE. DOTTED is supported only in Windows.
         </td>
        </tr>
        <tr>
         <td>
          WEIGHT
         </td>
         <td>
            Can be EXTRALIGHT, LIGHT, NORMAL, SEMIBOLD, BOLD, EXTRABOLD and HEAVY. Default: NORMAL.
            <a name=example></a>
         </td>
        </tr>
-->
<!--
        <tr>
         <td>

         </td>
         <td>
            Examples
         </td>
        </tr>
        <tr>
         <td>

         </td>
         <td>
<X!X--eucode>
Ihandle formattag
IupSetAttribute(text, "FORMATTING", "YES")

formattag = IupUser()
IupSetAttribute(formattag, "ALIGNMENT", "CENTER")
IupSetAttribute(formattag, "SPACEAFTER", "10")
IupSetAttribute(formattag, "FONTSIZE", "24")
IupSetAttribute(formattag, "SELECTION", "3,1:3,50")
IupSetAttribute(text, "ADDFORMATTAG_HANDLE", formattag)

formattag = IupUser()
IupSetAttribute(formattag, "BGCOLOR", "255 128 64")
IupSetAttribute(formattag, "UNDERLINE", "SINGLE")
IupSetAttribute(formattag, "WEIGHT", "BOLD")
IupSetAttribute(formattag, "SELECTION", "3,7:3,11")
IupSetAttribute(text, "ADDFORMATTAG_HANDLE", formattag)
    
formattag = IupUser()
IupSetAttribute(formattag, "ITALIC", "YES")
IupSetAttribute(formattag, "STRIKEOUT", "YES")
IupSetAttribute(formattag, "SELECTION", "2,1:2,12")
IupSetAttribute(text, "ADDFORMATTAG_HANDLE", formattag)
</eucode--X>
<pre>
<font color="#7060A8">Ihandle</font><font color="#000000"> formattag</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">text</font><font color="#0000FF">,</font><font color="#008000"> "FORMATTING"</font><font color="#0000FF">,</font><font color="#008000"> "YES"</font><font color="#0000FF">)
</font>
<font color="#000000">formattag</font><font color="#0000FF"> =</font><font color="#7060A8"> IupUser</font><font color="#0000FF">()</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "ALIGNMENT"</font><font color="#0000FF">,</font><font color="#008000"> "CENTER"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "SPACEAFTER"</font><font color="#0000FF">,</font><font color="#008000"> "10"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "FONTSIZE"</font><font color="#0000FF">,</font><font color="#008000"> "24"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "SELECTION"</font><font color="#0000FF">,</font><font color="#008000"> "3,1:3,50"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">text</font><font color="#0000FF">,</font><font color="#008000"> "ADDFORMATTAG_HANDLE"</font><font color="#0000FF">,</font><font color="#000000"> formattag</font><font color="#0000FF">)
</font>
<font color="#000000">formattag</font><font color="#0000FF"> =</font><font color="#7060A8"> IupUser</font><font color="#0000FF">()</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "BGCOLOR"</font><font color="#0000FF">,</font><font color="#008000"> "255 128 64"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "UNDERLINE"</font><font color="#0000FF">,</font><font color="#008000"> "SINGLE"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "WEIGHT"</font><font color="#0000FF">,</font><font color="#008000"> "BOLD"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "SELECTION"</font><font color="#0000FF">,</font><font color="#008000"> "3,7:3,11"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">text</font><font color="#0000FF">,</font><font color="#008000"> "ADDFORMATTAG_HANDLE"</font><font color="#0000FF">,</font><font color="#000000"> formattag</font><font color="#0000FF">)</font>
<font color="#C0C0C0">    </font>
<font color="#000000">formattag</font><font color="#0000FF"> =</font><font color="#7060A8"> IupUser</font><font color="#0000FF">()</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "ITALIC"</font><font color="#0000FF">,</font><font color="#008000"> "YES"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "STRIKEOUT"</font><font color="#0000FF">,</font><font color="#008000"> "YES"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">formattag</font><font color="#0000FF">,</font><font color="#008000"> "SELECTION"</font><font color="#0000FF">,</font><font color="#008000"> "2,1:2,12"</font><font color="#0000FF">)</font>
<font color="#7060A8">IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">text</font><font color="#0000FF">,</font><font color="#008000"> "ADDFORMATTAG_HANDLE"</font><font color="#0000FF">,</font><font color="#000000"> formattag</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
            When FORMATTING=YES in Windows or GTK (formatting attributes are set to a formatag object that it is a <a href="IupUser.htm">IupUser</a>):
            <br>
            <br>
<table align="center">
        <tbody>
    <tr>
                <td><pre>
"ALIGNMENT" = "CENTER"
"SPACEAFTER" = "10"
"FONTSIZE" = "24"
"SELECTION" = "3,1:3,50"
"ADDFORMATTAG"
"BGCOLOR" = "255 128 64"
"UNDERLINE" = "SINGLE"
"WEIGHT" = "BOLD"
"SELECTION" = "3,7:3,11"
"ADDFORMATTAG"
"ITALIC" = "YES"
"STRIKEOUT" = "YES"
"SELECTION" = "2,1:2,12"
"ADDFORMATTAG"</pre>
                </td>
                <td>
      <img src="images/iuptext_formatting.png"/>
                </td>
        </tr>
  </tbody>
</table>
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Handlers:</b>
         </td>
         <td>
            <br>
          <a name=VALUE_CHANGED></a>
         </td>
        </tr>
        <tr>
         <td>
          <a href="gSetHandler.htm#VALUE_CHANGED">VALUE_CHANGED</a>
         </td>
         <td>
            Called after the value was interactively changed by the user <small>(and on initial setup, and sometimes on focus/for no obvious reason)</small>.
            <br>
            <br>
            function value_changed(<a href="gdx.htm">gdx</a> id)<br>
            id: identifier of the element that activated the event.
            <br>
         </td>
        </tr>
<!--
--DEV use KEY for this instead??
          <a name=ACTION></a>
        <tr>
         <td>
?         ACTION
         </td>
         <td>
            Event generated when the text is edited, but before its value is actually changed. Can be generated when using the keyboard, undo system or from the clipboard.
            <br>
            <br>
            function action_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> c, <a href="atom.htm">atom</a> pNewValue)<br>
            ih: identifier of the element that activated the event.<br>
            c: valid alpha numeric character or 0.<br>
            pNewValue: Represents the new text value (char*).
            <br>
            <br>
            Returns: <a href="gSetHandler.htm#XPG_CLOSE">XPG_CLOSE</a> will be processed, but the change will be ignored. <br>
            If <a href="gSetHandler.htm#XPG_IGNORE">XPG_IGNORE</a>, the system will ignore the new value. <br>
            If c is valid and returns a valid alpha numeric character, this new character will be used instead. <br>
            The VALUE attribute can be changed only if <a href="gSetHandler.htm#XPG_IGNORE">XPG_IGNORE</a> is returned.
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         <a href="gSetHandler.htm#CLICK">CLICK</a>
         </td>
         <td>
            Event generated when any mouse button is pressed or released. 
<X!X--          Use <a href="IupConvertXYToPos.htm">IupConvertXYToPos</a>() to convert (x,y) coordinates in character positioning. (since 3.0)--X>
         </td>
        </tr>
-->
<!--
        <tr>
         <td>
?         CARET_CB
         </td>
         <td>
            Event generated when the caret/cursor position is changed. 
            <br>
            <br>
            function caret_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> lin, col, pos)<br>
            ih: identifier of the element that activated the event.<br>
            lin, col: line and column number (start at 1).<br>
            pos: 0 based character position.
            <br>
            <br>
            For single line controls lin is always 1, and pos is always "col-1".
         </td>
        </tr>
        <tr>
         <td>
?         DROPFILES_CB
         </td>
         <td>
            [Windows and GTK Only] Event generated when one or more files are dropped in the element. (since 3.0)
         </td>
        </tr>
-->
<!-- (add MOUSEMOVE to "also" in preference and if you want)
//      <tr>
//       <td>
//?       <a href="gSetHandler.htm#MOTION_CB">MOTION_CB</a>
//       </td>
//       <td>
//          Event generated when the mouse is moved. 
//          Use <a href="IupConvertXYToPos.htm">IupConvertXYToPos</a>() to convert (x,y) coordinates in character positioning. (since 3.0)
//       </td>
//      </tr>
-->
<!--
        <tr>
         <td>
?         SPIN_CB
         </td>
         <td>
            Event generated when a spin button is pressed. Valid only when SPIN=YES. <br>
            When this handler is invoked the <a href="#ACTION">ACTION</a> handler is not called. <br>
            The VALUE attribute can be changed during this handler only if SPINAUTO=NO. (since 3.0)
            <br>
            <br>
            function spin_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> pos)<br>
            ih: identifier of the element that activated the event.<br>
            pos: the value of the spin (after it was incremented).
            <br>
            <br>
<X!X--DEV test me--X>
            Returns: <a href="gSetHandler.htm#XPG_IGNORE">XPG_IGNORE</a> is processed.
            <X!X-- in Windows and Motif.--X>
         </td>
        </tr>
-->
        <tr>
         <td>
          also
         </td>
         <td>
<!--
//          <a href="gSetHandler.htm#MAP_CB">MAP_CB</a>,
//          <a href="gSetHandler.htm#UNMAP_CB">UNMAP_CB</a>,
//          <a href="gSetHandler.htm#DESTROY_CB">DESTROY_CB</a>, 
-->
            <a href="gSetHandler.htm#CLICK">CLICK</a>,
<!--
?           <a href="gSetHandler.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="gSetHandler.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="gSetHandler.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="gSetHandler.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
-->
            <a href="gSetHandler.htm#KEY">KEY</a>: All common handlers are supported. 
<!--            <a href="gSetHandler.htm#HELP_CB">HELP_CB</a> -->
<!--
            <br>
            <br>
?           Drag & Drop handlers are supported. See Notes above.<br>
-->
          <a name=tech></a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            As this is a <a href="g_paranormal.htm">paranormalised function</a>, and with no expectation that you should memorise this lot,
            except maybe "raa", you can assume that all of the following are potentially perfectly valid, with the fairly obvious restrictions 
            that any parameters <i>must</i> be in strict raa-order, and no args without attributes:
            <br>
            <br>
<small>
<!--eucode>
                        gText()
                        gText(rid)
                        gText(attributes)
                        gText(attributes, args)
                        gText(rid, attributes)
                        gText(rid, attributes, args)    -- (the full set)
</eucode-->
<pre>
<font color="#7060A8">                        gText</font><font color="#0000FF">()</font>
<font color="#7060A8">                        gText</font><font color="#0000FF">(</font><font color="#000000">rid</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gText</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gText</font><font color="#0000FF">(</font><font color="#000000">attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gText</font><font color="#0000FF">(</font><font color="#000000">rid</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">)</font>
<font color="#7060A8">                        gText</font><font color="#0000FF">(</font><font color="#000000">rid</font><font color="#0000FF">,</font><font color="#000000"> attributes</font><font color="#0000FF">,</font><font color="#000000"> args</font><font color="#0000FF">)   </font><font color="#000080"><i> -- (the full set)</i></font>
</pre>
</small>
            <br>
            Note that in practice rid is actually defined as <a href="object.htm">object</a>, and attributes as
            a <a href="sequence.htm">sequence</a> rather than a string, but verified to be of the documented types, 
            after being repositioned via xpGUI.e/paranormalise_raa().
         </td>
        </tr>
       </table>
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
