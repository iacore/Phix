<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">get_proper_dir</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
         <a href="string.htm">string</a> path = get_proper_dir(<a href="string.htm">string</a> filepath, 
                                                               <a href="integer.htm#bool">bool</a> remove_slash=<a href="logicops.htm">false</a>)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>Return the full directory path of the supplied file with the name removed.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Implemented by hand in p2js.js - see <a href="#tech" onclick="opentech()">technicalia</a> below. 
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            Result includes a trailing path separator, unless the optional parameter remove_slash is 1.<br>
            Note that when a directory is specified the presence or otherwise of a separator at the end of the input string 
            directly affects the output, as shown in the example below.
            <br>
            <br>
            Both forwardslash ('/') and backslash ('\\') are supported on all platforms, and converted appropriately in the output.
            <br>
            <br>
            Also as shown below, get_proper_dir(".") may sometimes be a slightly better alternative to <a href="current_dir.htm">current_dir</a>().
            <br>
            <br>
            The result should not be taken as confirmation of the actual existence of a directory.
         </td>
        </tr>
        <tr>
         <td>
          <b>Examples:</b>
         </td>
         <td>
<small>
<!--eucode>
constant fullpath = `C:\Program Files (x86)\Phix\p.exw`
printf(1,"`%s`\n",get_proper_dir(fullpath))     -- prints `C:\Program Files (x86)\Phix\`
printf(1,"`%s`\n",get_proper_dir("p.exw"))      -- prints `C:\Program Files (x86)\Phix\`        (`` on p2js)
printf(1,"`%s`\n",get_proper_dir("demo"))       -- prints `C:\Program Files (x86)\Phix\`        (   ""     )
printf(1,"`%s`\n",get_proper_dir(`demo\`))      -- prints `C:\Program Files (x86)\Phix\demo\`   (demo\ p2js)
printf(1,"`%s`\n",get_proper_dir("."))          -- prints `C:\Program Files (x86)\Phix\`        (`` on p2js)
printf(1,"`%s`\n",get_proper_dir(".",true))     -- prints `C:\Program Files (x86)\Phix`         (   ""     )
printf(1,"`%s`\n",current_dir())                -- prints `C:\Program Files (x86)\Phix`         ( not p2js )
</eucode-->
<pre>
<font color="#008080">constant</font><font color="#000000"> fullpath</font><font color="#0000FF"> =</font><font color="#008000"> `C:\Program Files (x86)\Phix\p.exw`</font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"`%s`\n"</font><font color="#0000FF">,</font><font color="#5E005E">get_proper_dir</font><font color="#800000">(</font><font color="#000000">fullpath</font><font color="#800000">)</font><font color="#0000FF">)    </font><font color="#000080"><i> -- prints `C:\Program Files (x86)\Phix\`</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"`%s`\n"</font><font color="#0000FF">,</font><font color="#5E005E">get_proper_dir</font><font color="#800000">(</font><font color="#008000">"p.exw"</font><font color="#800000">)</font><font color="#0000FF">)     </font><font color="#000080"><i> -- prints `C:\Program Files (x86)\Phix\`        (`` on p2js)</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"`%s`\n"</font><font color="#0000FF">,</font><font color="#5E005E">get_proper_dir</font><font color="#800000">(</font><font color="#008000">"demo"</font><font color="#800000">)</font><font color="#0000FF">)      </font><font color="#000080"><i> -- prints `C:\Program Files (x86)\Phix\`        (   ""     )</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"`%s`\n"</font><font color="#0000FF">,</font><font color="#5E005E">get_proper_dir</font><font color="#800000">(</font><font color="#008000">`demo\`</font><font color="#800000">)</font><font color="#0000FF">)     </font><font color="#000080"><i> -- prints `C:\Program Files (x86)\Phix\demo\`   (demo\ p2js)</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"`%s`\n"</font><font color="#0000FF">,</font><font color="#5E005E">get_proper_dir</font><font color="#800000">(</font><font color="#008000">"."</font><font color="#800000">)</font><font color="#0000FF">)         </font><font color="#000080"><i> -- prints `C:\Program Files (x86)\Phix\`        (`` on p2js)</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"`%s`\n"</font><font color="#0000FF">,</font><font color="#5E005E">get_proper_dir</font><font color="#800000">(</font><font color="#008000">"."</font><font color="#0000FF">,</font><font color="#004600">true</font><font color="#800000">)</font><font color="#0000FF">)    </font><font color="#000080"><i> -- prints `C:\Program Files (x86)\Phix`         (   ""     )</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"`%s`\n"</font><font color="#0000FF">,</font><font color="#5E005E">current_dir</font><font color="#800000">()</font><font color="#0000FF">)               </font><font color="#000080"><i> -- prints `C:\Program Files (x86)\Phix`         ( not p2js )</i></font>
</pre>
</small>
            <br>
            The use of a <a href="procedures.htm#namedparams">named parameter</a> when setting remove_slash is recommended, 
            to make the intent clear and the code easier to read.
            As previously noted above only compatible/consistent under p2js when a full path is provided.
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\pgetpath.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="get_proper_path.htm">get_proper_path</a>,
          <a href="current_dir.htm">current_dir</a><br>
          <a name=tech></a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
          Note that while desktop/Phix invokes <a href="get_proper_path.htm">get_proper_path</a>(), under pwa/p2js that&rsquo;s a null-op, 
          so obviously that call was omitted from the manual translation/rewrite, which I did in preference to including builtins\find.js 
          either for each and every program, or as a special condition whenever get_proper_dir() was being invoked.<br>
          So 12 lines of JavaScript by hand was just the better/faster/simpler fix. Also note that get_proper_path("p.exw") yields the full
          path on desktop/Phix but "" (the empty string) under pwa/p2js, they are only compatible/consistent when a full path is provided. 
          As with <a href="get_proper_path.htm">get_proper_path</a>(), implemented so that builtins\file_utils.e can be auto-transpiled, 
          since there is no particular reason not to given all routines in that file are (deliberately) just string/number manipulation.
         </td>
        </tr>
       </table>
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
