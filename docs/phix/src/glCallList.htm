<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">glCallList</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          include opengl.e
          <br>
          <br>
          glCallList(<a href="integer.htm">integer</a> list)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            The glCallList function executes a display list.
            <br>
            <br>
            list: The integer name of the display list to be executed.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span></a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>Remarks</b>
         </td>
         <td>
            Invoking the glCallList function begins execution of the named display list. <br>
            The functions saved in the display list are executed in order, just as if you called them without using a display list. <br>
            If list has not been defined as a display list, glCallList is ignored.
            <br>
            <br>
            The glCallList function can appear inside a display list. <br>
            To avoid the possibility of infinite recursion, a limit is placed on the nesting level during display-list execution. <br>
            This limit is at least 64, however, it depends on the implementation.
            <br>
            <br>
            The OpenGL state is not saved and restored across a call to glCallList. <br>
            Thus, changes made to the OpenGL state during the execution of a display list remain after execution of the display list is completed. <br>
            To preserve the OpenGL state across glCallList calls, use glPushAttrib, glPopAttrib, 
            <a href="glPushMatrix.htm"><span class="illegal">glPushMatrix</span></a>, and 
            <a href="glPushMatrix.htm"><span class="illegal">glPopMatrix</span></a>.
            <br>
            <br>
            You can execute display lists between a call to <a href="glBegin.htm"><span class="illegal">glBegin</span></a>() and the corresponding call to 
            <a href="glBegin.htm"><span class="illegal">glEnd</span></a>(), as long as the display list includes only functions that are allowed in this interval.
            <br>
            <br>
            The following functions retrieve information related to glCallList:<br>
            <a href="glGet.htm">glGet</a> with argument GL_MAX_LIST_NESTING<br>
            glIsList
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="glGetError.htm">glGetError</a>,
          <a href="glBegin.htm"><span class="illegal">glBegin</span></a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="glBegin.htm"><span class="illegal">glEnd</span></a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="glGet.htm">glGet</a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="glPushMatrix.htm"><span class="illegal">glPopMatrix</span></a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="glPushMatrix.htm"><span class="illegal">glPushMatrix</span></a>
<br>DEV
See also
--glBegin
glCallLists
glDeleteLists
--glEnd
glGenLists
--glGet
glIsList
glNewList
glPopAttrib
--glPopMatrix
glPushAttrib
--glPushMatrix
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
