<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">glNewList</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          include opengl.e
          <br>
          <br>
          glNewList(<a href="integer.htm">integer</a> list, mode)
        <br>
          <i>-- and --</i>
        <br>
          glEndList()
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            create or replace a display list
          <br>
          <br>
            list: Specifies the display-list name.<br>
            mode: Specifies the compilation mode, which can be GL_COMPILE or GL_COMPILE_AND_EXECUTE.
          <br>
          <br>
            Display lists are groups of GL commands that have been stored for subsequent execution. <br>
            Display lists are created with glNewList. <br>
            All subsequent commands are placed in the display list, in the order issued, until glEndList is called.
            <br>
            <br>
            glNewList has two arguments. <br>
            The first argument, list, is a positive integer that becomes the unique name for the display list. <br>
            Names can be created and reserved with glGenLists and tested for uniqueness with glIsList. <br>
            The second argument, mode, is a symbolic constant that can assume one of two values:<br>
            GL_COMPILE Commands are merely compiled.<br>
            GL_COMPILE_AND_EXECUTE Commands are executed as they are compiled into the display list.
            <br>
            <br>
            Certain commands are not compiled into the display list but are executed immediately, regardless of the display-list mode. <br>
            These commands are glAreTexturesResident, glColorPointer, glDeleteLists, glDeleteTextures, glDisableClientState, 
            glEdgeFlagPointer, glEnableClientState, glFeedbackBuffer, glFinish, glFlush, glGenLists, glCreateTexture, glIndexPointer, 
            glInterleavedArrays, glIsEnabled, glIsList, glIsTexture, glNormalPointer, glPopClientAttrib, glPixelStore, glPushClientAttrib, 
            glReadPixels, glRenderMode, glSelectBuffer, glTexCoordPointer, glVertexPointer, and all of the glGet commands.
            <br>
            <br>
            Similarly, glTexImage1D, <a href="glTexImage2D.htm">glTexImage2D</a>(), and glTexImage3D are executed immediately and not 
            compiled into the display list when their first argument is GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_1D, or GL_PROXY_TEXTURE_3D, 
            respectively.
            <br>
            <br>
            When the ARB_imaging extension is supported, glHistogram executes immediately when its argument is GL_PROXY_HISTOGRAM. <br>
            Similarly, glColorTable executes immediately when its first argument is GL_PROXY_COLOR_TABLE, 
            GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            <br>
            <br>
            For OpenGL versions 1.3 and greater, or when the ARB_multitexture extension is supported, glClientActiveTexture is not compiled 
            into display lists, but executed immediately.
            <br>
            <br>
            When glEndList is encountered, the display-list definition is completed by associating the list with the unique name list 
            (specified in the glNewList command). <br>
            If a display list with name list already exists, it is replaced only when glEndList is called.
         </td>
        </tr>
        <tr>
         <td>
          <b>Notes:</b>
         </td>
         <td>
            glCallList and glCallLists can be entered into display lists. <br>
            Commands in the display list or lists executed by glCallList or glCallLists are not included in the display list being created, 
            even if the list creation mode is GL_COMPILE_AND_EXECUTE.
            <br>
            <br>
            A display list is just a group of commands and arguments, so errors generated by commands in a display list must be generated 
            when the list is executed. <br>
            If the list is created in GL_COMPILE mode, errors are not generated until the list is executed.
         </td>
        </tr>

        <tr>
         <td>
          <b>Errors:</b>
         </td>
         <td>
            GL_INVALID_VALUE is generated if list is 0.<br>
            GL_INVALID_ENUM is generated if mode is not an accepted value.<br>
            GL_INVALID_OPERATION is generated if glEndList is called without a preceding glNewList, or if glNewList is called while a display list is being defined.<br>
            GL_INVALID_OPERATION is generated if glNewList or glEndList is executed between the execution of 
            <a href="glBegin.htm"><span class="illegal">glBegin</span></a> and the corresponding execution of <a href="glBegin.htm"><span class="illegal">glEnd</span></a>.<br>
            GL_OUT_OF_MEMORY is generated if there is insufficient memory to compile the display list. <br>
            If the GL version is 1.1 or greater, no change is made to the previous contents of the display list, if any, and no other change is made to the GL state. <br>
            (It is as if no attempt had been made to create the new display list.)
         </td>
        </tr>
        <tr>
         <td>
          <b>Associated Gets:</b>
         </td>
         <td>
            glIsList<br>
            glGet with argument GL_LIST_INDEX<br>
            glGet with argument GL_LIST_MODE
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="glLinkProgram.htm">W</a>,
          <a href="glLinkProgram.htm">X</a>,
          <a href="glEnable.htm">Y</a>,
          <a href="glGenLists.htm">glGenLists</a>
<br>
DEV 
See Also
glCallList, glCallLists, glDeleteLists, //glGenLists
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
