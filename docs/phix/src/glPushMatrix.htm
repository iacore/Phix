<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">glPushMatrix</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          include opengl.e
          <br>
          <br>
          <span class="illegal">glPushMatrix</span>()
          <br>
          <br>
          ...
          <br>
          <br>
          <span class="illegal">glPopMatrix</span>()
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            <b>Deprecated</b>, specifically not supported on WebGL. <br>
            While still supported on desktop/Phix, these routines have been coloured 
            <span class="illegal">illegal</span> to indicate they cannot be handled by 
            <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js</b></span></a>.
            <br>
            <br>
            The <span class="illegal">glPushMatrix</span> and <span class="illegal">glPopMatrix</span> procedures 
            push and pop the current matrix stack.
            <br>
            <br>
            It is an error to push a full matrix stack, or to pop a matrix stack that contains only a single matrix.<br>
            In either case, the error flag is set and no other change is made to the OpenGL state.
            <br>
            <br>
            These routines do not return a value, however <a href="glGetError.htm">glGetError</a>() can return GL_STACK_OVERFLOW if 
            <span class="illegal">glPushMatrix</span> was called while the current matrix stack was full, and GL_STACK_UNDERFLOW if 
            <span class="illegal">glPopMatrix</span> was called while the current matrix stack contained only a single matrix.<br>
            If either routine is called between <a href="glBegin.htm"><span class="illegal">glBegin</span></a>() and 
            <a href="glBegin.htm"><span class="illegal">glEnd</span></a>(), 
            <a href="glGetError.htm">glGetError</a>() will return <a href="glGetError.htm">GL_INVALID_OPERATION</a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>Remarks</b>
         </td>
         <td>
            There is a stack of matrices for each of the matrix modes. <br>
            In GL_MODELVIEW mode, the stack depth is at least 32. <br>
            In the other two modes, GL_PROJECTION and GL_TEXTURE, the depth is at least 2. <br>
            The current matrix in any mode is the matrix on the top of the stack for that mode.<br>
            The <span class="illegal">glPushMatrix</span> function pushes the current matrix stack down by one, duplicating the current matrix. <br>
            That is, after a <span class="illegal">glPushMatrix</span> call, the matrix on the top of the stack is identical to the one below it. <br>
            The <span class="illegal">glPopMatrix</span> function pops the current matrix stack, replacing the current matrix with the one below it on the stack. <br>
            Initially, each of the stacks contains one matrix, an identity matrix.
            <br>
            <br>
            The following functions retrieve information related to <span class="illegal">glPushMatrix</span> and <span class="illegal">glPopMatrix</span>:<br>
            <a href="glGet.htm">glGet</a> with argument GL_MATRIX_MODE<br>
            <a href="glGet.htm">glGet</a> with argument GL_MODELVIEW_MATRIX<br>
            <a href="glGet.htm">glGet</a> with argument GL_PROJECTION_MATRIX<br>
            <a href="glGet.htm">glGet</a> with argument GL_TEXTURE_MATRIX<br>
            <a href="glGet.htm">glGet</a> with argument GL_MODELVIEW_STACK_DEPTH<br>
            <a href="glGet.htm">glGet</a> with argument GL_PROJECTION_STACK_DEPTH<br>
            <a href="glGet.htm">glGet</a> with argument GL_TEXTURE_STACK_DEPTH<br>
            <a href="glGet.htm">glGet</a> with argument GL_MAX_MODELVIEW_STACK_DEPTH<br>
            <a href="glGet.htm">glGet</a> with argument GL_MAX_PROJECTION_STACK_DEPTH<br>
            <a href="glGet.htm">glGet</a> with argument GL_MAX_TEXTURE_STACK_DEPTH<br>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="glBegin.htm"><span class="illegal">glBegin</span></a>,
          <a href="glBegin.htm"><span class="illegal">glEnd</span></a>,
          <a href="glFrustum.htm">glFrustum</a>,
          <a href="glGetError.htm">glGetError</a>,
          <a href="glLoadIdentity.htm">glLoadIdentity</a>,
          <a href="glMatrixMode.htm"><span class="illegal">glMatrixMode</span></a>,
          <a href="glOrtho.htm">glOrtho</a>,
          <a href="glRotate.htm">glRotate</a>,
          <a href="glScale.htm">glScale</a>,
          <a href="glTranslate.htm">glTranslate</a>,
          <a href="glViewport.htm">glViewport</a>
<br>DEV
See also
--glBegin
--glEnd
--glFrustum
--glLoadIdentity
glLoadMatrix
--glMatrixMode
glMultMatrix
--glOrtho
//glRotate
//glScale
//glTranslate
//glViewport

         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
