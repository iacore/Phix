<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">glTexParameteri</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          include opengl.e
          <br>
          <br>
          glTexParameteri(<a href="integer.htm">integer</a> target, pname, param)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Sets texture parameters.<br>
            Note: This has been simplified by removing all "mipmap" handling (since I don&rsquo;t have any examples of that). <br>
            The C routines glTexParameterf(), glTexParameterfv(), and glTexParameteriv() are not currently wrapped ("").
            <br>
            <br>
            target: The target texture, which must be either GL_TEXTURE_1D or GL_TEXTURE_2D.<br>
            <table>
            <tr><th>pname</th><th>param</th></tr>
            <td>GL_TEXTURE_MIN_FILTER/GL_TEXTURE_MAG_FILTER</td>    <td>GL_NEAREST/GL_LINEAR</td></tr>
            <td>GL_TEXTURE_WRAP_S/GL_TEXTURE_WRAP_T</td>            <td>GL_CLAMP/GL_REPEAT</td></tr>
            </table>
          <br>
          <br>
          No error is returned, but on failure the following error codes can be retrieved by <a href="glGetError.htm">glGetError</a>():<br>
          <a href="glGetError.htm">GL_INVALID_ENUM</a>- target/pname/param unacceptable.<br>
          <a href="glGetError.htm">GL_INVALID_OPERATION</a> - 
          <a href="glBegin.htm"><span class="illegal">glBegin</span></a>/<a href="glBegin.htm"><span class="illegal">glEnd</span></a> in progress.
         </td>
        </tr>
        <tr>
         <td>
          <b>Remarks</b>
         </td>
         <td>
            Texture mapping is a technique that applies an image onto an object&rsquo;s surface as if the image were a decal or cellophane shrink-wrap. <br>
            The image is created in texture space, with an (s, t) coordinate system. <br>
            A texture is a one- or two-dimensional image and a set of parameters that determine how samples are derived from the image.
            <br>
            <br>
            The glTexParameter function assigns the value or values in params to the texture parameter specified as pname. <br>
            The target parameter defines the target texture, either GL_TEXTURE_1D or GL_TEXTURE_2D.
            <br>
            <br>
            As more texture elements are sampled in the minification process, fewer aliasing artifacts will be apparent. <br>
            While the GL_NEAREST and GL_LINEAR minification functions can be faster than the other four, they sample only one or four texture elements 
            to determine the texture value of the pixel being rendered and can produce moire patterns or ragged transitions. <br>
            The default value of GL_TEXTURE_MIN_FILTER is GL_NEAREST_MIPMAP_LINEAR.
            <br>
            <br>
            Suppose that texturing is enabled (by calling glEnable with argument GL_TEXTURE_1D or GL_TEXTURE_2D) and GL_TEXTURE_MIN_FILTER is set to one 
            of the functions that requires a mipmap. If either the dimensions of the texture images currently defined (with previous calls to glTexImage1D 
            or <a href="glTexImage2D.htm">glTexImage2Dc</a>) do not follow the proper sequence for mipmaps, or there are fewer texture images defined than 
            are needed, or the set of texture images have differing numbers of texture components, then it is as if texture mapping were disabled. <br>
            Linear filtering accesses the four nearest texture elements only in 2-D textures. <br>
            In 1-D textures, linear filtering accesses the two nearest texture elements.
            <br>
            <br>
            The following function retrieves information related to glTexParameterf, glTexParameteri, glTexParameterfv, and glTexParameteriv.<br>
            glGetTexParameter
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="glBegin.htm"><span class="illegal">glBegin</span></a>,
          <a href="glBindTexture.htm">glBindTexture</a>,
          <a href="glTexImage2D.htm">glTexImage2Dc</a>,
          <a href="glBegin.htm"><span class="illegal">glEnd</span></a>
<br>
[DEV]See also
//glBegin
//glBindTexture
glCopyPixels
glCopyTexImage1D
glCopyTexImage2D
glCopyTexSubImage2D
glDrawPixels
//glEnd
glGetTexParameter
glPixelStore
glPixelTransfer
glPrioritizeTextures
glTexEnv
glTexGen
glTexImage1D
//glTexImage2D
glTexSubImage1D
glTexSubImage2D


         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
