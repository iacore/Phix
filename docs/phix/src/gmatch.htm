<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gmatch</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include builtins\regex.e
          <br>
          <br>
          <a href="string.htm">string</a> res = gmatch(<a href="sequence.htm">sequence</a> re, 
                                                       <a href="string.htm">string</a> target, res)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Draft - this is a very simple routine that took very little time or effort (or thought) to write, and may
            change in later releases.
            <br>
            <br>
            Applies the regular expression re (in string or pre-compiled format) to target and returns res with any
            substitutions for \1 to \9, or -1 if no match could be found. 
            <br>
            <br>
            re: a regular expression such as "a(b*)" or the result of applying regex_compile() to such a string.<br>
            target: a string to be matched against the regular expression.<br>
            res: a string containing \1 to \9 that should be replaced with the results of any match.
            <br>
            <br>
            Returns: an updated res or -1 if no match could be found. <br>
            <small><i>Aside: probably better to return target rather than -1, but improvements really should be 
            driven by those using this in anger, which simply ain&rsquo;t me.<br>
            To achieve what Java manages with {`_(.+)_`,`&lt;em&gt;$1&lt;/em&gt;`} this (currently) needs 
            {`(.*)__(.+)__(.*)`,`\1&lt;em&gt;\2&lt;/em&gt;\3`}, but I&rsquo;m not dead set on that, specifically
            the extra outer groups, nor would I be against additional control flags or more than two of these 
            little helper functions.</i></small>
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
?gmatch(`(\w+) changed to (\w+)`,"red changed to green",`\2 <- \1`) -- yields "green <- red"
</eucode-->
<pre>
<font color="#000000"></font><font color="#0000FF">?</font><font color="#5E005E">gmatch</font><font color="#0000FF">(</font><font color="#008000">`(\w+) changed to (\w+)`</font><font color="#0000FF">,</font><font color="#008000">"red changed to green"</font><font color="#0000FF">,</font><font color="#008000">`\2 &lt;- \1`</font><font color="#0000FF">)</font><font color="#000080"><i> -- yields "green &lt;- red"</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="gsub.htm">gsub</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            Future versions may also permit \0 in res, if that would be useful.
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
