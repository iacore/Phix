<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Transpilation to C</h1>
      <div id="mainSection">
        I (Pete Lomax) am perfectly willing to help out, but simply refuse to even start on this without any help.
        <br>
        <br>
        Phix already has a tried and tested <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js</b></span></a> which emits JavaScript, 
        and it is not unreasonable to extend that to emit C.
<!-- erm, this simply didn't end up sounding anything like how I wanted/imagined it would... might go back in, reworded.
         Note that JavaScript is a typeless language, with obvious impliciations,
        specifically no run-time typechecks, and I see little reason not to effectively treat C the same/as a typeless target and quite
        probably limited to (say) void*|int|double|char* only. Ah/erm, well we //could// emit all those implicit typechecks, but it was
        simply all too late and would have been no help anyway in JavaScript, so...
-->
        <br>
        <br>
        As a first step I might suggest comparing some of the Phix/builtin files with their auto-generated Phix/pwa/builtin counterparts. <br>
        With your extensive knowledge and experience of the C programming language, create the C equivalent of one of the simpler files, <br>
        making minimal changes where practical, ie resist any temptation to insert comments or shuffle things about unnecessarily. <br>
        Also write a C test harness (or existing sample) to prove it works, and try to maintain a reasonably similar include hierarchy.
        <br>
        <br>
        You may also want to tap (say) "JavaScript to C transpiler" into your favourite search engine, if for nothing else to collect some 
        ideas for any additional C routines that might be needed. 
        Should you think it is a good idea to have a new and separate (say) sequence.c file, then do that.
        <br>
        <br>
        One thing I rely on is that JavaScript can have a '$' in names, so I can create a few useful "globals" that cannot possibly clash 
        with any in Phix, but I have simply no idea whether a similar trick would be at all posible in C.
        <br>
        <br>
        Once I have a suitable and sufficient collection of such examples, that I can actually compile and see working, then I can/will 
        start/assist updates to p2js (which maybe would eventually deserve to be renamed, but more likely will be merged into the main
        phix compiler/interpreter/transpiler in version 2.0.0).
        <br>
        <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
