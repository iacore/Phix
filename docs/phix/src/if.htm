<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">If Statement</h1>
      <div id="mainSection">
        An <b>if statement</b> tests a condition to see if it is 0 (<a href="logicops.htm">false</a>) or non-zero (<a href="logicops.htm">true</a>) and 
        then executes the appropriate series of statements. There may be optional <b>elsif</b> and <b>else</b> clauses. e.g.
<!--eucode>
    if a<b then
        x = 1
    end if
    if a=9 and find(0,s) then
        x = 4
        y = 5
    else
        z = 8
    end if
    if char='a' then
        x = 1
    elsif char='b'
       or char='B' then
        x = 2
    elsif char='c' then
        x = 3
    else
        x = -1
    end if
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">    if</font><font color="#000000"> a</font><font color="#0000FF">&lt;</font><font color="#000000">b</font><font color="#008080"> then
</font><font color="#000000">        x</font><font color="#0000FF"> =</font><font color="#000000"> 1
</font><font color="#008080">    end if
    if</font><font color="#000000"> a</font><font color="#0000FF">=</font><font color="#000000">9</font><font color="#008080"> and</font><font color="#7060A8"> find</font><font color="#0000FF">(</font><font color="#000000">0</font><font color="#0000FF">,</font><font color="#000000">s</font><font color="#0000FF">)</font><font color="#008080"> then
</font><font color="#000000">        x</font><font color="#0000FF"> =</font><font color="#000000"> 4
        y</font><font color="#0000FF"> =</font><font color="#000000"> 5
</font><font color="#008080">    else
</font><font color="#000000">        z</font><font color="#0000FF"> =</font><font color="#000000"> 8
</font><font color="#008080">    end if
    if</font><font color="#000000"> char</font><font color="#0000FF">=</font><font color="#008000">'a'</font><font color="#008080"> then
</font><font color="#000000">        x</font><font color="#0000FF"> =</font><font color="#000000"> 1
</font><font color="#008080">    elsif</font><font color="#000000"> char</font><font color="#0000FF">=</font><font color="#008000">'b'
</font><font color="#008080">       or</font><font color="#000000"> char</font><font color="#0000FF">=</font><font color="#008000">'B'</font><font color="#008080"> then
</font><font color="#000000">        x</font><font color="#0000FF"> =</font><font color="#000000"> 2
</font><font color="#008080">    elsif</font><font color="#000000"> char</font><font color="#0000FF">=</font><font color="#008000">'c'</font><font color="#008080"> then
</font><font color="#000000">        x</font><font color="#0000FF"> =</font><font color="#000000"> 3
</font><font color="#008080">    else
</font><font color="#000000">        x</font><font color="#0000FF"> = -</font><font color="#000000">1
</font><font color="#008080">    end if</font>
</pre>
        Notice that <b>elsif</b> is a contraction of <b>else if</b>, but it is cleaner because it does not require an
        <b>end if</b> to go with it. There is just one <b>end if</b> for the entire <b>if</b> statement, even when there are many
        <b>elsifs</b> contained in it.
       <br>
       <br>
        Obviously, "end if" (likewise end for/while/switch/function/procedure/type) is more typing than "}", but meaningful compiler 
        error messages easily make up for that. 
        <br>
        <br>
        In other words the compiler says when it was expecting "end if" but found "end while", however no compiler could ever say 
        it found "}" when expecting "}", because they are the exact same indistinguishable thing! And I for one would sorely miss 
        not being told that what I thought was, and looks/is indented like an "end if" was quietly being treated as an "end while".
        
        <small>
        <dl>
        <dt></dt>
        <dd>
        True story: I once dropped a single "}" sometime during a marathon refactoring (ten days with no compiling until every last class updated) 
        of a large C++ program - the compiler then threw me a meaningless error in a completely unrelated file, and it took <b>another three whole 
        days</b> just to track that compilation error down. There is gibberish, utter gibberish, and then whatever it was that compiler spat out 
        at me. Obviously it got really, <i>really</i>, <i><b>really</b></i> confused by mixing "}" up, and I shudder to think what horrors it 
        could potentially have unleashed had it somehow managed to complete the compilation quietly. 
        Having half-decent syntax colouring in the code editor of the IDE I was forced to use might well have helped, but finding out that the 
        compiler did not even count/check that brackets balanced properly in every source file was a real shocker for me.</dd>
        </dl>
        </small>
        The <b>if</b> and <b>elsif</b> conditions are tested using <a href="shortcircuit.htm">short-circuit evaluation</a>.
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
