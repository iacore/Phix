<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">interface</h1>
      <div id="mainSection">
        <!-- dev: add a 3rd image once it's working in the browser! -->
<!--        <div class="parent">
          <div class="child">-->
        <img border="0" src="images/p2js-mt.png"/>
        <br>
        <br>
        The first time you run pwa/p2js <!--?(and always in the browser)?--> you should get a placeholder text as shown above.
<br><small>[BUG: The automated tests are being added when they should not, and killing that placeholder text...]</small>
        <br>
        <br>
        Subsequent runs start on whatever file was open the last time it was closed, as shown in the following image.
        <br>
        <br>
<!--          </div>
          <div class="child">-->
        <img border="0" src="images/p2js-hw.png"/>
<!--          </div>
        </div>
        <div style="clear:both;height:1px;"> </div>-->
        <br>
        <br>
        The online repl has an additional output panel (image below to be updated, right now it&rsquo;s just pwa/js/poc/drop.html)
        <br>
        <br>
        <img border="0" src="images/p2js-or.png"/>
        <br>
        <br>
        Note the main area is <b><i>not</i></b> a full-fledged editor: this is designed to work both on the desktop and in the browser.
        <!-- (as shown below)--><br>
        In particular it has <i>no save function</i>, you&rsquo;ll have to make do with Ctrl C, and the syntax colouring is both a somewhat slow 
        single-shot-whole-file affair (you can/must key Ctrl S to re-apply, see also <a href="#tech" onclick="opentech()">technicalia</a> below), 
        and completely generic - it colours JavaScript and Phix code in exactly the same manner and does not attempt anything at all on any html 
        fragments.<br>
        I will also state that showing line numbers is decidedly non-trivial and completely beyond my abilities. (xpGUI should fix that)
        <br>
        <br>
        The Choose File button opens a standard file dialog.<br>
        To the right of that is a dropdown of recent files (desktop only, in the browser it is just a label).<br>
<small>[actually... the online version should ask the server for a directory listing...]</small><br>
        Top right is a source type selector which should be set automatically on open/drop but needs manual setting for paste/type.<br>
        Setting the source type dropdown automatically mirrors in the output dropdown at the bottom of the screen, ie phix&lt;==&gt;js/html.<br>
        The main text area has the limitations above, also notice how <a href="IupMainLoop.htm"><span class="illegal">IupMainLoop</span></a>() is coloured red, to 
        remind/warn you it cannot be invoked in the browser, in this case it&rsquo;s fine because of the enclosing platform() test.<br>
        The tokens and parse tree buttons can be hidden via the options, since they are only useful for development of pwa/p2js itself.<br>
        The [incomplete] violations button is intended to show [a summary of] unsupported or incompatible items.<br>
        The output dropdown fairly obviously controls what will be generated (changes do not alter the input dropdown, unlike vice versa).<br>
        Show opens a new window with the generated source, Copy places the generated source in the system clipboard.<br>
        Run is only possible for js/html output in the browser, on the desktop it can run phix or fire up the browser.<br>
        Options [will] include show/hide tokens/parse, preserve comments, minify, embed (aka all-in-one single file), etc.<br>
        Help shows a single short popup which can fairly obviously only scratch the surface of what is here and in the source code.<br>
        Exit is I would hope entirely self-explanatory.
        <br>
        <br>
        It is also [DEV will be] possible to run pwa/p2js in command-line mode without showing the gui, eg<br>
        <blockquote><code>p pwa\p2js -norun -src test.exw -out test.html</code></blockquote>
        The various command-line options are...
        <br>
        <br>
        TBC...
        <br>
        <br>
          <a name=tech></a>
       <table>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
          Note that the syntax colouring for the "Show" pop-up will interrupt/"stack" any still in progress on the main window, and 
          resume when it can, and possibly vice-versa. Also, while it is in progress, each "chunk" resets the mle to line 1 column 1, 
          preventing attempts to scroll. Obviously a proper editor would only bother to syntax colour what is actually on-screen, and 
          therefore be done in a flash, but that&rsquo;s just not possible with a simple mle using ADDFORMATTAG_HANDLE.<br>
          Even though, say, demo\pGUI\sample.exw is only just over 700 lines, it needs nearly 15,000 separate fragments,
          which is why it takes so long. The idle handler limits processing to 1000 at a time to keep the GUI responsive.<br>
          <small>Update: it should be significantly faster, near-instant in fact, using a <a href="gList.htm">gList</a>...<br>
          If/when this is ever ported to xpGUI, that should therefore be fixed.<br></small>
          The Ctrl S handling is only applicable to the main window, since the Show pop-up is read-only.
<!-- DOH, I only just explained exactly what this is!!!
          <br>
          <br>
          At the time of writing something makes it jump around like a madman, couldn&rsquo;t find it, bigger fish to fry... [DEV]
-->
         </td>
        </tr>
       </table>
        <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
