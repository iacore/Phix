<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">join_by</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          sequence res = join_by(sequence s, integer step, integer n, object step_pad="&nbsp&nbsp&nbsp", object n_pad="\n")
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            The join_by routine allows columnisation of results across the screen for easier reading.
            <br>
            <br>
            Best illustrated by example, join_by iteratively interleaves up to n (whole) blocks of size step with step_pad, 
            before joining that, plus any remainder, with n_pad.
            <br>
            <br>
            Segments are expected to be padded to a consistent length, before this routine is called, to achieve proper alignment.
            <br>
            <br>
            Note that n_pad is duplicated between each n-block, but only occurs once at the end, unless a trailing "" is supplied.
            <br>
            <br>
            Uses <a href="join.htm">join</a> internally. The default for step_pad is three spaces. Returns a string or sequence.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
sequence s = {"A","B","C","D","E","F","G","H","I","J","K","L"}
puts(1,join_by(s,3,2)&"=\n")
--  A   D
--  B   E
--  C   F
--
--  G   J
--  H   K
--  I   L
--  =
puts(1,join_by(s,2,3)&"=\n")
--  A   C   E
--  B   D   F
--
--  G   I   K
--  H   J   L
--  =
puts(1,join_by(s,3,4)&"=\n")
--puts(1,join_by(s,3,5)&"=\n")  -- same
--  A   D   G   J
--  B   E   H   K
--  C   F   I   L
--  =
puts(1,join_by(s,4,3)&"=\n")
--puts(1,join_by(s,4,4)&"=\n")  -- same
--  A   E   I
--  B   F   J
--  C   G   K
--  D   H   L
--  =
puts(1,join_by(s,2,5)&"=\n")    -- (see note)
--  A   C   E   G   I
--  B   D   F   H   J
--
--  K
--  L
--  =
puts(1,join_by(s,5,2)&"=\n")
--puts(1,join_by(s,5,3)&"=\n")  -- same (see note)
--  A   F
--  B   G
--  C   H
--  D   I
--  E   J
--
--  K
--  L
--  =
puts(1,join_by(s,1,4)&"=\n")
--  A   B   C   D
--
--  E   F   G   H
--
--  I   J   K   L
--  =
puts(1,join_by(s,1,6)&"=\n")
--  A   B   C   D   E   F
--
--  G   H   I   J   K   L
--  =
puts(1,join_by(s,1,5)&"=\n")
--  A   B   C   D   E
--
--  F   G   H   I   J
--
--  K   L
--  =
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">sequence</font><font color="#000000"> s</font><font color="#0000FF"> = {</font><font color="#008000">"A"</font><font color="#0000FF">,</font><font color="#008000">"B"</font><font color="#0000FF">,</font><font color="#008000">"C"</font><font color="#0000FF">,</font><font color="#008000">"D"</font><font color="#0000FF">,</font><font color="#008000">"E"</font><font color="#0000FF">,</font><font color="#008000">"F"</font><font color="#0000FF">,</font><font color="#008000">"G"</font><font color="#0000FF">,</font><font color="#008000">"H"</font><font color="#0000FF">,</font><font color="#008000">"I"</font><font color="#0000FF">,</font><font color="#008000">"J"</font><font color="#0000FF">,</font><font color="#008000">"K"</font><font color="#0000FF">,</font><font color="#008000">"L"</font><font color="#0000FF">}
</font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--  A   D
--  B   E
--  C   F
--
--  G   J
--  H   K
--  I   L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--  A   C   E
--  B   D   F
--
--  G   I   K
--  H   J   L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">,</font><font color="#000000">4</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--puts(1,join_by(s,3,5)&amp;"=\n")  -- same
--  A   D   G   J
--  B   E   H   K
--  C   F   I   L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">4</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--puts(1,join_by(s,4,4)&amp;"=\n")  -- same
--  A   E   I
--  B   F   J
--  C   G   K
--  D   H   L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)   </font><font color="#000080"><i> -- (see note)
--  A   C   E   G   I
--  B   D   F   H   J
--
--  K
--  L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--puts(1,join_by(s,5,3)&amp;"=\n")  -- same (see note)
--  A   F
--  B   G
--  C   H
--  D   I
--  E   J
--
--  K
--  L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">4</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--  A   B   C   D
--
--  E   F   G   H
--
--  I   J   K   L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">6</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--  A   B   C   D   E   F
--
--  G   H   I   J   K   L
--  =
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#5E005E">join_by</font><font color="#800000">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#800000">)</font><font color="#0000FF">&amp;</font><font color="#008000">"=\n"</font><font color="#0000FF">)
</font><font color="#000080"><i>--  A   B   C   D   E
--
--  F   G   H   I   J
--
--  K   L
--  =</i></font>
</pre>
            <br>
            Note how in the "heightwise" (step&gt;1) examples 5 and 6 the trailing (partial) n-blocks retain the step-pattern, 
            as of course does the last "widthwise" (step=1) example. Should you wish to "flatten" the trailing partial block
            in an otherwise heightwise invocation, I suggest you spilt s into n-wise whole sets and the rest, and invoke join_by 
            twice, with some different step & n on the partial block(s), which could have all manner of desired shapes for the 
            partial&gt;step cases, and therefore it is not really feasible to automate that reliably.
            <br>
            <br>
            The implementation can be found in builtins\pflatten.e and contains the (lightly tested and) commented-out changes 
            required to automatically output a trailing partial&lt;=step widthwise. There may also be some partial&lt;=(or&gt;)n 
            cases (where that differs from partial&lt;=(or&gt;)step) which merit a subtly different approach, and that is the 
            reason why I said lightly tested and left those changes commented-out.
            <br>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
            demo/rosetta/IQpuzzle.exw
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="join.htm">join</a>,
          <a href="columnize.htm">columnize</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
