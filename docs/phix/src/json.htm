<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">json</h1>
      <div id="mainSection">
        The file builtins\json.e (not an autoinclude) contains a simple json parser/printer/converter.
       <br>
       <br>
        Use
       <a href="parse_json.htm">parse_json</a>() to convert a string representation of a JSON object
        (see
       <a id="ext624" style="color:#9B5565" href="javascript:ExternalLink('ext624','http://json.org');">
        http://json.org
       </a> for a formal definition, such as it is) to an internal form suitable for further processing.<br>
        Details of the internal form can be found on the <a href="parse_json.htm">parse_json</a> page.
       <br>
       <br>
        Use
       <a href="print_json.htm">print_json</a>() to convert an internal form into a string representation 
        of a JSON object.
       <br>
       <br>
        Some examples can be found in demo/rosetta/JSON.exw.
       <br>
       <br>
        Note this does not enforce json string contents:
       <br>
        \-prefixes are not enforced (esp /)
       <br>
        \uHHHH by pure happy coincidence matches phix native format, no more.
       <br>
        Unicode as utf8 is considered sufficient; no utf-16 surrogate pair stuff.
       <br>
       <br>
       <h3>Performance note/disclaimer</h3>
        No particular effort has been made regarding performance. (Keeping things dirt-simple is deemed a better goal.)
       <br>
        I would strongly expect the actual conversion to be almost completely IO bound, 
        however for very large json objects that require significant processing, there 
        may be a case for indexing the internal form - but that should be reasonably
        straightforward and is deemed outside the responsibility of these routines. 
        It would also be fair to say that the trim_res argument is lazily implemented, 
        and it might be better not to add any whitespace in the first place, instead
        of trimming it away at the last moment.
       <br>
       <br>
       <h3>Compatibility note</h3>
        OpenEuphoria cannot distinguish between {} and "" and consequently may accept
        some things (specifically the first of those) as valid that Phix does not. 
        Phix will reject {12} as invalid, because it is not a <a href="string.htm">string</a>, whereas OE will treat it as "\x0C".
        Otherwise this component should run on both Phix and OpenEuphoria.
       <br>
       <br>
        The following constants are defined in builtins\json.e (see <a href="parse_json.htm">parse_json</a> for more details):
<!--eucode>
global constant JSON_OBJECT = -1,
                JSON_ARRAY = -2, 
                JSON_KEYWORD = -3,
                JSON_INVALID = -4
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global constant</font><font color="#000000"> JSON_OBJECT</font><font color="#0000FF"> = -</font><font color="#000000">1</font><font color="#0000FF">,
</font><font color="#000000">                JSON_ARRAY</font><font color="#0000FF"> = -</font><font color="#000000">2</font><font color="#0000FF">, 
</font><font color="#000000">                JSON_KEYWORD</font><font color="#0000FF"> = -</font><font color="#000000">3</font><font color="#0000FF">,
</font><font color="#000000">                JSON_INVALID</font><font color="#0000FF"> = -</font><font color="#000000">4</font>
</pre>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
