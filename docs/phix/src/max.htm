<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">max</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          <a href="object.htm">object</a> x1 = max(<a href="object.htm">object</a> x2, x3)
          <br>
          <i>-- or --</i>
          <br>
          <a href="object.htm">object</a> x1 = sq_max(<a href="object.htm">object</a> x2, x3)
          <br>
          <i>-- or --</i>
          <br>
          <a href="object.htm">object</a> x1 = max(<a href="sequence.htm">sequence</a> s1)
          <br>
          <i>-- or --</i>
          <br>
          <a href="object.htm">object</a> x1 = maxsq(<a href="sequence.htm">sequence</a> s1, 
                                                     <a href="integer.htm#bool">bool</a> return_index=<a href="logicops.htm">false</a>)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Returns the largest of x2 and x3, or the largest element in <a href="sequence.htm">sequence</a> s1.
            Atoms are considered to be less than sequences. Sequences are compared "alphabetically" (case sensitive, 
            ie 'a'&gt;'Z') starting with the first element until a difference is found.
            <br>
            <br>
            The sq_max(a,b) function applies max() to the <i>top-level</i> elements of a and b when they are in fact sequences,
            otherwise it applies an atom to all the elements of the other, or if they are both atoms it behaves identically 
            to max(a,b). Typically the result is a sequence, but it can be an atom if passed two atoms.
            Note that it is <i><b>not</b></i> recursive, and passing a single argument to sq_max() is not allowed.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
a = max(7,5)                            -- a is 7
b = max({7,5,3})                        -- b is 7
c = max("two","three")                  -- c is "two"
d = max({"one","two","three","four"})   -- d is "two"
s = sq_max(s,0)         -- no element of s is now < 0
</eucode-->
<pre>
<font color="#000000">a</font><font color="#0000FF"> =</font><font color="#5E005E"> max</font><font color="#0000FF">(</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">)                           </font><font color="#000080"><i> -- a is 7
</i></font><font color="#000000">b</font><font color="#0000FF"> =</font><font color="#5E005E"> max</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">}</font><font color="#0000FF">)                       </font><font color="#000080"><i> -- b is 7
</i></font><font color="#000000">c</font><font color="#0000FF"> =</font><font color="#5E005E"> max</font><font color="#0000FF">(</font><font color="#008000">"two"</font><font color="#0000FF">,</font><font color="#008000">"three"</font><font color="#0000FF">)                 </font><font color="#000080"><i> -- c is "two"
</i></font><font color="#000000">d</font><font color="#0000FF"> =</font><font color="#5E005E"> max</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"one"</font><font color="#0000FF">,</font><font color="#008000">"two"</font><font color="#0000FF">,</font><font color="#008000">"three"</font><font color="#0000FF">,</font><font color="#008000">"four"</font><font color="#800000">}</font><font color="#0000FF">)  </font><font color="#000080"><i> -- d is "two"
</i></font><font color="#000000">s</font><font color="#0000FF"> =</font><font color="#5E005E"> sq_max</font><font color="#0000FF">(</font><font color="#000000">s</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#0000FF">)        </font><font color="#000080"><i> -- no element of s is now &lt; 0</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\pmaths.e (an autoinclude), and psqop.e, and the technicalia dropdown, for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="smallest.htm">largest</a>,
          <a href="equal.htm">equal</a>,
          <a href="compare.htm">compare</a>,
          <a href="min.htm">min</a>,
          <a href="relops.htm">relational operators</a>,
          <a href="seqops.htm">sequence operations</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            max(s1) is an alias for maxsq(s1); the compiler automatically substitutes the function being called when only one parameter is passed.<br>
            Note that providing the return_index parameter prevents such a substitution, ie max(s,true) is just plain wrong, as is maxsq(x,y).<br>
            <small>(To clarify that, max(s,true) would <i>always</i> return s, when s is a sequence, as atoms are deemed less than sequences.)</small><br>
            Both routines are declared in builtins\pmaths.e (an auto-include). Some extra care must be taken with routine_id("max"), as obviously 
            no equivalent mapping occurs for the one or two parameter cases.
         <br>
         <br>
            The Euphoria version of max() only accepts a single argument and behaves as maxsq(flatten(s1)), whereas the Phix version is 
            <b><i>not</i></b> recursive. Unlike the Euphoria version, max(&lt;atom&gt;) generates a runtime error, as does max({}). <br>
            This function is only compatible with Euphoria when passed a single argument that is a non-empty and non-nested sequence of atoms. <br>
            Unlike several other functions the max() and sq_max() functions are not recursive. <br>
            Should you (for some strange reason) believe that max({"one","two","three"}) should yield 'w', or max({}) should yield -inf, then 
            may I politely suggest that you go away and write your own version of this routine.
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
