<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">pIUP</h1>
      <div id="mainSection">
        IUP is a multi-platform toolkit developed at Tecgraf/PUC-Rio for building graphical user interfaces. It offers 
        high performance via native interface elements and fast learning by the user, due to the simplicity of its API.
        <br>
        <br>
        pIUP is a simple wrapper (of the C version). The distribution includes all the required pre-built binaries: IUP, 
        CD and IM are all needed. I include 32 and 64 bit Windows versions, but only 32 bit Linux, since at the moment 
        I cannot test or support 64 bit Linux. A finished (precompiled) application that uses pIUP must also install the
        appropiate subdirectory containing the required dlls. Newer/other versions can, if required, be downloaded from:
        <ul>
        <li>CD - <a id="ext791" style="color:#9B5565" 
        href="javascript:ExternalLink('ext791','http://sourceforge.net/projects/canvasdraw/files/');">
        http://sourceforge.net/projects/canvasdraw/files/</a></li>
        <li>IM - <a id="ext792" style="color:#9B5565" 
        href="javascript:ExternalLink('ext792','http://sourceforge.net/projects/imtoolkit/files/');">
        http://sourceforge.net/projects/imtoolkit/files/</a></li>
        <li>IUP - <a id="ext793" style="color:#9B5565" 
        href="javascript:ExternalLink('ext793','http://sourceforge.net/projects/iup/files/');">
        http://sourceforge.net/projects/iup/files/</a></li>
        </ul>
        I went with the "dllw4" builds but feel free to try one of the others. Be advised that I found the downloads 
        to be very flakey, often incomplete, and strongly recommend verifying with eg the 7-zip "test" button.
        <br>
        <br>
        pIUP is (being) built from the ground up, testing and documenting each routine as it is added, hence there will 
        be many that are not yet available. Credit is due to Jeremy Cowgar and Greg Haberek; pIUP contains code cherry 
        picked from both.
        <br>
        <br>
        <table>
         <col style="width: 5%"/>
         <tr>
          <td valign=top>
           <a href="IupOpen.htm">
            <b>IupOpen</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>Initialise IUP
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="IupClose.htm">
            <b>IupClose</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>Shutdown IUP
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="IupAlarm.htm">
            <b>IupAlarm</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>Show a modal dialog containing a message and up to three buttons.
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="IupMessage.htm">
            <b>IupMessage</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>**Show a modal dialog containing a message and up to three buttons.
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="IupDialog.htm">
            <b>IupDialog</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>XXX
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="IupShow.htm">
            <b>IupShow</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>Displays a dialog.
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="set_struct_field.htm">
            <b>IupMainLoop</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>...VVV...set a named field in a structure previously allocated by <a href="allocate_struct.htm">allocate_struct</a>().
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="get_field_details.htm">
            <b>get_field_details</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>get the low level details of a named field in a structure previously defined by <a href="define_struct.htm">define_struct</a>().
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="get_struct_size.htm">
            <b>get_struct_size</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>get the total size of a structure previously defined by <a href="define_struct.htm">define_struct</a>().
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="set_unicode.htm">
            <b>set_unicode</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>set flags controlling the unicode-related behaviour of the cffi library routines.
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="define_cfunc.htm">
            <b>define_cfunc</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>parse a C function definition and obtain a routine id.
          </td>
         </tr>
         <tr>
          <td valign=top>
           <a href="define_cproc.htm">
            <b>define_cproc</b>
           </a>
          </td>
          <td width=10 align=center valign=top>-</td>
          <td>parse a C void function definition and obtain a routine id.
          </td>
         </tr>
        </table>
        <br>
        <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
