<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">puts / printf</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          puts(<a href="integer.htm">integer</a> fn, <a href="object.htm">object</a> x, cleanup=<a href="logicops.htm#tf">true</a>)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>Output, to file or device fn, a single byte (<a href="atom.htm">atom</a>) or <a href="sequence.htm">sequence</a>
             of bytes. The low order 8-bits of each value is actually sent
             out. If fn is the screen you will see text characters displayed.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported, for fn=1 or 2 and string x only. The new (1.0.2) optional third parameter is entirely for the benefit of puts() in p2js.js
          - it can only be set to <a href="logicops.htm#tf">false</a>, and apart from checking for that it is completely ignored by desktop/Phix 
          [that is, in pmain.e/ParamList()]. 
          The idea is to output valid html directly without the usual substitution, an example of that can be found in 
          demo\rosetta\Queen_Armies.exw, and of course you need to run that in a browser to get the benefit.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>When you output a <a href="sequence.htm">sequence</a> of bytes it must not have any (sub)sequences
             within it. It must be a <a href="atom.htm">atoms</a> only (typically ascii codes), or a <a href="string.htm">string</a>.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
puts(SCREEN, "Enter your first name: ")
</eucode-->
<pre>
<font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">SCREEN</font><font color="#0000FF">,</font><font color="#008000"> "Enter your first name: "</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
puts(output, 'A')  -- a single byte/character is written to output
</eucode-->
<pre>
<font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">output</font><font color="#0000FF">,</font><font color="#008000"> &rsquo;A&rsquo;</font><font color="#0000FF">) </font><font color="#000080"><i> -- a single byte/character is written to output</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
              via :%opPuts in builtins\VM\pfileioN.e (an autoinclude) - be warned however it is low-level complicated stuff that you do not need to know.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="printf.htm">printf</a>,
          <a href="gets.htm">gets</a>,
          <a href="open.htm">open</a>
          <br>
          puts1(s) is a low-level equivalent of puts(1,s), see builtins\puts1h.e (not an autoinclude) and builtins\VM\puts1.e (an autoinclude).
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
