<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">requires</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
           requires(<a href="object.htm">object</a> x, <a href="integer.htm#bool">bool</a> bQuiet = false)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Specifies the requirements needed for a particular source code file to be executed.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported. Obviously unlike desktop/phix there is no attempt to restart the browser in 64 bit mode.
          Valid settings for x to run in a browser are a suitable version string, or JS (aka 4), 6 (aka WIN/JS), 
          7 (aka WIN/LNX/JS), 8 (aka LNX/JS), or 32.
          Note that JavaScript is inherently a 32 bit system (cmiiw, afaik even 64-bit browsers all contain a 
          32-bit JS runtime), so requires(64) in a browser will <i>always</i> trigger a crash message.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            If x is a string, eg "0.8.2", it compares it (intelligently) against <a href="version.htm">version</a>() and
            displays a message and terminates execution when necessary.
            <br>
            <br>
            If x is an integer between 0 and 31, it compares it against <a href="platform.htm">platform</a>() and displays a message 
            and terminates execution when necessary. See <a href="#tech" onclick="opentech()">technicalia</a> for combinations.
            <br>
            <br>
            Otherwise x should be 32 or 64, which is compared against <a href="machine_bits.htm">machine_bits</a>() 
            and when necessary it uses bQuiet and <a href="get_interpreter.htm">get_interpreter</a>(true,{x},platform(),bPrefW) 
            to construct a suitable replacement commandline, which it then either offers to execute when bQuiet is
            false (or 2), or executes automatically when bQuiet is true (or 3), see examples and details below.
            In short, eg <code>requires(64)</code> is "let them know" whereas <code>requires(64,true)</code> is your 
            "just do it", see <a href="#tech" onclick="opentech()">technicalia</a> for the minutae.
            <br>
            <br>
            If no suitable interpreter can be found it displays an appropriate message instead.
            <br>
            <br>
            You can also invoke <code>requires(-machine_bits())</code> to trigger a similar "requires restart" prompt.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
requires("0.8.2")                           -- crashes on 0.8.1 and earlier
requires(WINDOWS)                           -- crashes on Linux
printf(1,"running %d-bit\n",machine_bits())
requires(96-machine_bits()) -- (toggle 32<==>64 [a rather daft thing to do!])

-- example output (forever in this rather silly little case):
--running 32-bit
--requires 64 bit: "C:\Program Files\Phix\p.exe" "C:\Program Files (x86)\Phix\test.exw"
--Press Escape to abandon, Enter to retry as above...
--running 64-bit
--requires 32 bit: "C:\Program Files (x86)\Phix\p.exe" "C:\Program Files (x86)\Phix\test.exw"
--Press Escape to abandon, Enter to retry as above...
</eucode-->
<pre>
<font color="#7060A8">requires</font><font color="#0000FF">(</font><font color="#008000">"0.8.2"</font><font color="#0000FF">)                          </font><font color="#000080"><i> -- crashes on 0.8.1 and earlier</i></font>
<font color="#7060A8">requires</font><font color="#0000FF">(</font><font color="#004600">WINDOWS</font><font color="#0000FF">)                          </font><font color="#000080"><i> -- crashes on Linux</i></font>
<font color="#7060A8">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"running %d-bit\n"</font><font color="#0000FF">,</font><font color="#7060A8">machine_bits</font><font color="#800000">()</font><font color="#0000FF">)</font>
<font color="#7060A8">requires</font><font color="#0000FF">(</font><font color="#000000">96</font><font color="#0000FF">-</font><font color="#7060A8">machine_bits</font><font color="#800000">()</font><font color="#0000FF">)</font><font color="#000080"><i> -- (toggle 32&lt;==&gt;64 [a rather daft thing to do!])

-- example output (forever in this rather silly little case):
--running 32-bit
--requires 64 bit: "C:\Program Files\Phix\p.exe" "C:\Program Files (x86)\Phix\test.exw"
--Press Escape to abandon, Enter to retry as above...
--running 64-bit
--requires 32 bit: "C:\Program Files (x86)\Phix\p.exe" "C:\Program Files (x86)\Phix\test.exw"
--Press Escape to abandon, Enter to retry as above...</i></font>
</pre>
            <br>
            Of course the more sensible requires(32) or requires(64) would only display 0 or 1 such steps.<br>
            While the prompt may be mildly annoying, and no-one in their right mind would ever code the above, 
            it is reasonably likely a main app might start off with requires(64) but then include a component 
            that says requires(32), or vice versa, and without the pause it would spawn alternately/madly and 
            in all probability completely lock up the machine. For focus reasons (specifically Edita/Edix) a
            requires() call does not terminate until after the freshly-spawned subprocess has terminated.
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\get_interpreter.e (an autoinclude) for details of the actual implementation, there is 
            also a hand-translated and simplified version in p2js.js
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="command_line.htm">command_line</a>,
          <a href="get_interpreter.htm">get_interpreter</a>,
          <a href="machine_bits.htm">machine_bits</a>,
          <a href="platform.htm">platform</a>,
          <a href="version.htm">version</a><br>
          <a name=tech></a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            Note that non-existent versions may be used, for instance bugfixes and tests for new features after 0.8.3 
            was released were prefixed with requires("0.8.4"), in case that was urgently needed, rather than and even 
            though the next version would (hopefully) be 1.0.0.
            <br>
            <br>
            Typically you would use <i>one</i> of the builtin constants such as WINDOWS, LINUX, or JS, however they are 
            not bit-fields so special literals must be used for any combinations. Examine the builtins/get_interpreter.e 
            source to be sure, but 0: always crash, 5: Windows or Linux (not js), 6: Windows or JavaScript (not Linux), 
            7: any/never crash and 8: Linux or JavaScript (not Windows) can also be used, which I think just about covers 
            every possible permutation.
            <br>
            <br>
            Of course requires(32/64) may have nothing to do with the actual code, but availability of pre-built dlls, for example.<br>
            It is perfectly possible to use a 32-bit compiler on a source containing format PE64|ELF64 and a requires(64) statement, 
            and vice versa, however some 64-bit constants may (rarely) end up getting cropped to 53 bits, so it is probably best to 
            avoid that sort of thing whenever possible. Originally, before I decided to construct an alternative commandline, requires()
            was substituted in the front-end at compiler time like <a href="version.htm">version</a>(), and that code has been left
            in but commented out: it may be possible to (partially) reinstate that to at least offer a warning (an outright ban would
            however cripple the compiler&rsquo;s own self-hosting, where such cross-compilation concerns happen to be one of the less 
            important things the "four rounds" mechanism described in <a href="Installation.htm">Installation</a> happens to solve).
            <br>
            <br>
            The bQuiet parameter is only used for an x of 32 or 64 and in fact has four possible settings:<br>
            0b00 (0/false): prompt and pass a bPrefW of -1,<br>
            0b01 (1/true): no prompt and pass a bPrefW of -1,<br>
            0b10 (2): prompt and pass a bPrefW of false, and <br>
            0b11 (3): no prompt and pass a bPrefW of false.<br>
            A bPrefW of -1 means pick a p.exe or pw.exe depending on whether command_line()[1] contains a 'w'.<br>
            A bPrefW of false (prefer p.exe over pw.exe), in other words a bQuiet of 2 over false, may be more appropriate 
            given that it has already opened a console window with a prompt, even when running a gui application, so that 
            any subsequent messages appear in that same window rather than opening up yet another one. There is possibly
            not much practical use for a bQuiet of 3, so that is probably best ignored, and indeed 2 is not particularly
            common either. False is probably the best option when publishing code, and it is obviously better to encourage
            long-term/frequent users to start it properly in the first place, while true can make working on it easier.<br>
            You should however <b><i>never</i></b> specify a bQuiet of true (or 3) in any re-usable component.
            <br>
            <br>
            Should requires() detect that a <code>requires(32)</code> has already passed when <code>requires(64,true)</code> 
            is attempted (or vice versa), then it will simply crash("would go bananas"), since otherwise it would quietly 
            spawn processes until you ran out of memory. Be warned you could easily defeat that by using you own checks
            on machine_bits(), should you for some reason feel it is about time to force a hard reboot. In other words it
            is generally a spectacularly bad idea to call requires(), in particular with (32|64), anywhere other than near 
            the start of a source file, and it should always be invoked <i>outside of any conditional statements</i>.
         </td>
        </tr>
       </table>
       <img id="Timg" src="images/sprites/tech.open.png" title="Expand/Shrink" alt="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
