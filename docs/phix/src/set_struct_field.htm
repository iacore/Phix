<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">set_struct_field</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include cffi.e<br>
          set_struct_field(<a href="integer.htm">integer</a> id, <a href="atom.htm">atom</a> pStruct, <a href="string.htm">atom_string</a> field, v)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            set a named field in a structure previously allocated by <a href="allocate_struct.htm">allocate_struct</a>().
            <br>
            <br>
            id: a result from <a href="define_struct.htm">define_struct</a>().<br>
            pStruct: a result from <a href="allocate_struct.htm">allocate_struct</a>().<br>
            field: a string name or, caveat emptor, a numeric index.<br>
            v: the value to be set.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            The parameter v should be an atom except for TCHAR[128] and similar fields. You may need to use 
            <a href="allocate_string.htm">allocate_[w]string</a>(),
            <a href="allocate_struct.htm">allocate_struct</a>(), or <a href="allocate.htm">allocate</a>() to set lpsz and other
            pointer members, and call <a href="free.htm">free</a>() once the memory is no longer needed.
            <br>
            <br>
            Note that it is your responsibility to pass short-enough strings in v, since cffi.e cannot check that for you, and only when 
            the target field is TCHAR[] or similar, and likewise add trailing zeroes (or &rsquo;\0&rsquo;) or spaces where needed.<br>
            Under set_unicode(1) a string in v is assumed to be utf8 and is converted to utf16. Additional steps may be required to 
            ensure any surrogate pairs that introduces do not make it exceed the available space.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
include cffi.e
constant idMBP = define_struct(...)
atom pMBP = allocate_struct(idMBP)
..
atom pTitle = allocate_string("title")
atom pCaption = allocate_string("caption")
set_struct_field(idMBP,pMBP,"lpszText",pTitle)
set_struct_field(idMBP,pMBP,"lpszCaption",pCaption)
set_struct_field(idMBP,pMBP,"dwStyle",MB_OK)
..
free(pCaption)
free(pTitle)
</eucode-->
<pre>
<font color="#008080">include</font><font color="#000000"> cffi.e</font>
<font color="#008080">constant</font><font color="#000000"> idMBP</font><font color="#0000FF"> =</font><font color="#5E005E"> define_struct</font><font color="#0000FF">(...)</font>
<font color="#004080">atom</font><font color="#000000"> pMBP</font><font color="#0000FF"> =</font><font color="#5E005E"> allocate_struct</font><font color="#0000FF">(</font><font color="#000000">idMBP</font><font color="#0000FF">)
..</font>
<font color="#004080">atom</font><font color="#000000"> pTitle</font><font color="#0000FF"> =</font><font color="#5E005E"> allocate_string</font><font color="#0000FF">(</font><font color="#008000">"title"</font><font color="#0000FF">)</font>
<font color="#004080">atom</font><font color="#000000"> pCaption</font><font color="#0000FF"> =</font><font color="#5E005E"> allocate_string</font><font color="#0000FF">(</font><font color="#008000">"caption"</font><font color="#0000FF">)</font>
<font color="#5E005E">set_struct_field</font><font color="#0000FF">(</font><font color="#000000">idMBP</font><font color="#0000FF">,</font><font color="#000000">pMBP</font><font color="#0000FF">,</font><font color="#008000">"lpszText"</font><font color="#0000FF">,</font><font color="#000000">pTitle</font><font color="#0000FF">)</font>
<font color="#5E005E">set_struct_field</font><font color="#0000FF">(</font><font color="#000000">idMBP</font><font color="#0000FF">,</font><font color="#000000">pMBP</font><font color="#0000FF">,</font><font color="#008000">"lpszCaption"</font><font color="#0000FF">,</font><font color="#000000">pCaption</font><font color="#0000FF">)</font>
<font color="#5E005E">set_struct_field</font><font color="#0000FF">(</font><font color="#000000">idMBP</font><font color="#0000FF">,</font><font color="#000000">pMBP</font><font color="#0000FF">,</font><font color="#008000">"dwStyle"</font><font color="#0000FF">,</font><font color="#004600">MB_OK</font><font color="#0000FF">)
..</font>
<font color="#7060A8">free</font><font color="#0000FF">(</font><font color="#000000">pCaption</font><font color="#0000FF">)</font>
<font color="#7060A8">free</font><font color="#0000FF">(</font><font color="#000000">pTitle</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="allocate_struct.htm">allocate_struct</a>,
          <a href="allocate_string.htm">allocate_string</a>,
          <a href="allocate.htm">allocate</a>,
          <a href="free.htm">free</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
