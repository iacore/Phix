<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">sm_close</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          include builtins\ipc.e
          <br>
          sm_close(<a href="object.htm">object</a> id)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            This routine releases a handle to a block of shared memory.
            <br>
            <br>
            id: can be either the address returned by <a href="sm_create.htm">sm_create</a>() or <a href="sm_open.htm">sm_open</a>(), 
            or the string-id used to identify the memory.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          <a href="notpgui.htm"><span class="illegal">Not supported</span></a>
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            Once an application calls sm_close(), that memory is no longer available to that application, but does not mean that the memory 
            is no longer available to other applications.
            <br>
            <br>
            Each application must call sm_close() to close its handle to the shared memory.<br>
            A block of shared memory will continue to exist until all handles to it have been closed.
         </td>
        </tr>
        <tr>
         <td>
          <b>See Also:</b>
         </td>
         <td>
          <a href="sm_create.htm">sm_create</a>,
          <a href="sm_open.htm">sm_open</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
