<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">sort</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          <font face = "Arial, Helvetica">
             sequence s2 = sort(sequence s1)
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Sort s1 into ascending order using a fast sorting algorithm. The
             elements of s1 can be any mix of atoms or sequences. Atoms come
             before sequences, and sequences are sorted "alphabetically" where
             the first elements are more significant than the later elements.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
x = 0 & sort({7,5,3,8}) & 0
-- x is set to {0, 3, 5, 7, 8, 0}
</eucode-->
<pre>
<font color="#000000">x</font><font color="#0000FF"> =</font><font color="#000000"> 0</font><font color="#0000FF"> &amp;</font><font color="#800080"> sort</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">,</font><font color="#000000">8</font><font color="#800000">}</font><font color="#0000FF">) &amp;</font><font color="#000000"> 0
</font><font color="#000080">-- x is set to {0, 3, 5, 7, 8, 0}</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
y = sort({"Smith", "Jones", "Doe", 5.5, 4, 6})
-- y is {4, 5.5, 6, "Doe", "Jones", "Smith"}
</eucode-->
<pre>
<font color="#000000">y</font><font color="#0000FF"> =</font><font color="#800080"> sort</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"Smith"</font><font color="#0000FF">,</font><font color="#008000"> "Jones"</font><font color="#0000FF">,</font><font color="#008000"> "Doe"</font><font color="#0000FF">,</font><font color="#000000"> 5.5</font><font color="#0000FF">,</font><font color="#000000"> 4</font><font color="#0000FF">,</font><font color="#000000"> 6</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#000080">-- y is {4, 5.5, 6, "Doe", "Jones", "Smith"}</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 3:</b>
         </td>
         <td>
<!--eucode>
database = sort({{"Smith",    95.0, 29},
                 {"Jones",   77.2, 31},
                 {"Clinton", 88.7, 44}})
-- The 3 database "records" will be sorted by the first "field"
-- i.e. by name. Where the first field (element) is equal it
-- will be sorted by the second field etc.
-- after sorting, database is:
               {{"Clinton", 88.7, 44},
                {"Jones",   77.2, 31},
                {"Smith",   95.0, 29}}
</eucode-->
<pre>
<font color="#000000">database</font><font color="#0000FF"> =</font><font color="#800080"> sort</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#800080">{</font><font color="#008000">"Smith"</font><font color="#0000FF">,   </font><font color="#000000"> 95.0</font><font color="#0000FF">,</font><font color="#000000"> 29</font><font color="#800080">}</font><font color="#0000FF">,
</font><font color="#800080">                 {</font><font color="#008000">"Jones"</font><font color="#0000FF">,  </font><font color="#000000"> 77.2</font><font color="#0000FF">,</font><font color="#000000"> 31</font><font color="#800080">}</font><font color="#0000FF">,
</font><font color="#800080">                 {</font><font color="#008000">"Clinton"</font><font color="#0000FF">,</font><font color="#000000"> 88.7</font><font color="#0000FF">,</font><font color="#000000"> 44</font><font color="#800080">}</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#000080">-- The 3 database "records" will be sorted by the first "field"
-- i.e. by name. Where the first field (element) is equal it
-- will be sorted by the second field etc.
-- after sorting, database is:
</font><font color="#0000FF">               {</font><font color="#800000">{</font><font color="#008000">"Clinton"</font><font color="#0000FF">,</font><font color="#000000"> 88.7</font><font color="#0000FF">,</font><font color="#000000"> 44</font><font color="#800000">}</font><font color="#0000FF">,
</font><font color="#800000">                {</font><font color="#008000">"Jones"</font><font color="#0000FF">,  </font><font color="#000000"> 77.2</font><font color="#0000FF">,</font><font color="#000000"> 31</font><font color="#800000">}</font><font color="#0000FF">,
</font><font color="#800000">                {</font><font color="#008000">"Smith"</font><font color="#0000FF">,  </font><font color="#000000"> 95.0</font><font color="#0000FF">,</font><font color="#000000"> 29</font><font color="#800000">}</font><font color="#0000FF">}</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="custom_sort.htm">custom_sort</a>,
          <a href="compare.htm">compare</a>,
          <a href="match.htm">match</a>,
          <a href="find.htm">find</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
