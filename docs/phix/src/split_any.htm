<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">split_any</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          <font face = "Arial, Helvetica"> 
            sequence res = split_any(sequence source, object delimiters=", \t|", bool no_empty=0, integer limit=0)
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Split a sequence on any of the specified delimiters into a number of sub-sequences.
          <br>
          <br>
            Returns a sequence, of sub-sequences of source. All instances of any of the specified delimiters are removed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This function may be applied to a string or a complex sequence.
            <br>
            <br>
            if delimiters is an atom this function behaves identically to <a href="split.htm">split</a>(). (For this routine to behave
            identically to <a href="split.htm">split</a>() with a non-atom delimiter, you need to pass a length-1 sequence with that
            non-atom value as the only element, to this routine.)
            <br>
            <br>
            If no_empty is false, any zero-length sub-sequences are not added to the result sequence. <br>
            Use this when leading, trailing, and duplicated delimiters are not significant.
            <br>
            <br>
            If limit is greater than 0, it specifies the maximum number of sub-sequences that will be created, otherwise there is no limit.
            <br>
            <br>
            The use of named parameters is advised when setting no_empty and/or limit.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
s = split_any("{one,two,three}","{,}",no_empty:=1) -- s is {"one","two","three"}
</eucode-->
<pre>
<font color="#000000">s</font><font color="#0000FF"> =</font><font color="#5E005E"> split_any</font><font color="#0000FF">(</font><font color="#008000">"{one,two,three}"</font><font color="#0000FF">,</font><font color="#008000">"{,}"</font><font color="#0000FF">,</font><font color="#000000">no_empty</font><font color="#0000FF">:=</font><font color="#000000">1</font><font color="#0000FF">)</font><font color="#000080"><i> -- s is {"one","two","three"}</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="join.htm">join</a>,
          <a href="flatten.htm">flatten</a>,
          <a href="columnize.htm">columnize</a>,
          <a href="split.htm">split</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
