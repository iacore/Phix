<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">CREATE TRIGGER</h1>
      <div id="mainSection">
       <p><b><a href="sqlite3_syntaxdiagrams.htm#create-trigger-stmt">create-trigger-stmt:</a></b>
        <button id='x929' onclick='hideorshow("x929","x930")'>hide</button>
       </p>
       <div id='x930' class='imgcontainer'>
        <img alt="syntax diagram create-trigger-stmt" src="images/syntax/create-trigger-stmt.gif" />
        <p><b><a href="sqlite3_syntaxdiagrams.htm#delete-stmt">delete-stmt:</a></b>
         <button id='x931' onclick='hideorshow("x931","x932")'>show</button>
        </p>
        <div id='x932' style='display:none;' class='imgcontainer'>
         <img alt="syntax diagram delete-stmt" src="images/syntax/delete-stmt.gif" />
         <p><b><a href="sqlite3_syntaxdiagrams.htm#qualified-table-name">qualified-table-name:</a></b>
          <button id='x933' onclick='hideorshow("x933","x934")'>show</button>
         </p>
         <div id='x934' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram qualified-table-name" src="images/syntax/qualified-table-name.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#with-clause">with-clause:</a></b>
          <button id='x935' onclick='hideorshow("x935","x936")'>show</button>
         </p>
         <div id='x936' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram with-clause" src="images/syntax/with-clause.gif" />
          <p><b><a href="sqlite3_syntaxdiagrams.htm#cte-table-name">cte-table-name:</a></b>
           <button id='x937' onclick='hideorshow("x937","x938")'>show</button>
          </p>
          <div id='x938' style='display:none;' class='imgcontainer'>
           <img alt="syntax diagram cte-table-name" src="images/syntax/cte-table-name.gif" />
          </div>
         </div>
        </div>
        <p><b><a href="sqlite3_syntaxdiagrams.htm#expr">expr:</a></b>
         <button id='x939' onclick='hideorshow("x939","x940")'>show</button>
        </p>
        <div id='x940' style='display:none;' class='imgcontainer'>
         <img alt="syntax diagram expr" src="images/syntax/expr.gif" />
         <p><b><a href="sqlite3_syntaxdiagrams.htm#literal-value">literal-value:</a></b>
          <button id='x941' onclick='hideorshow("x941","x942")'>show</button>
         </p>
         <div id='x942' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram literal-value" src="images/syntax/literal-value.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#raise-function">raise-function:</a></b>
          <button id='x943' onclick='hideorshow("x943","x944")'>show</button>
         </p>
         <div id='x944' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram raise-function" src="images/syntax/raise-function.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#type-name">type-name:</a></b>
          <button id='x945' onclick='hideorshow("x945","x946")'>show</button>
         </p>
         <div id='x946' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram type-name" src="images/syntax/type-name.gif" />
          <p><b><a href="sqlite3_syntaxdiagrams.htm#signed-number">signed-number:</a></b>
           <button id='x947' onclick='hideorshow("x947","x948")'>show</button>
          </p>
          <div id='x948' style='display:none;' class='imgcontainer'>
           <img alt="syntax diagram signed-number" src="images/syntax/signed-number.gif" />
          </div>
         </div>
        </div>
        <p><b><a href="sqlite3_syntaxdiagrams.htm#insert-stmt">insert-stmt:</a></b>
         <button id='x949' onclick='hideorshow("x949","x950")'>show</button>
        </p>
        <div id='x950' style='display:none;' class='imgcontainer'>
         <img alt="syntax diagram insert-stmt" src="images/syntax/insert-stmt.gif" />
         <p><b><a href="sqlite3_syntaxdiagrams.htm#with-clause">with-clause:</a></b>
          <button id='x951' onclick='hideorshow("x951","x952")'>show</button>
         </p>
         <div id='x952' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram with-clause" src="images/syntax/with-clause.gif" />
          <p><b><a href="sqlite3_syntaxdiagrams.htm#cte-table-name">cte-table-name:</a></b>
           <button id='x953' onclick='hideorshow("x953","x954")'>show</button>
          </p>
          <div id='x954' style='display:none;' class='imgcontainer'>
           <img alt="syntax diagram cte-table-name" src="images/syntax/cte-table-name.gif" />
          </div>
         </div>
        </div>
        <p><b><a href="sqlite3_syntaxdiagrams.htm#select-stmt">select-stmt:</a></b>
         <button id='x955' onclick='hideorshow("x955","x956")'>show</button>
        </p>
        <div id='x956' style='display:none;' class='imgcontainer'>
         <img alt="syntax diagram select-stmt" src="images/syntax/select-stmt.gif" />
         <p><b><a href="sqlite3_syntaxdiagrams.htm#common-table-expression">common-table-expression:</a></b>
          <button id='x957' onclick='hideorshow("x957","x958")'>show</button>
         </p>
         <div id='x958' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram common-table-expression" src="images/syntax/common-table-expression.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#compound-operator">compound-operator:</a></b>
          <button id='x959' onclick='hideorshow("x959","x960")'>show</button>
         </p>
         <div id='x960' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram compound-operator" src="images/syntax/compound-operator.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#join-clause">join-clause:</a></b>
          <button id='x961' onclick='hideorshow("x961","x962")'>show</button>
         </p>
         <div id='x962' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram join-clause" src="images/syntax/join-clause.gif" />
          <p><b><a href="sqlite3_syntaxdiagrams.htm#join-constraint">join-constraint:</a></b>
           <button id='x963' onclick='hideorshow("x963","x964")'>show</button>
          </p>
          <div id='x964' style='display:none;' class='imgcontainer'>
           <img alt="syntax diagram join-constraint" src="images/syntax/join-constraint.gif" />
          </div>
          <p><b><a href="sqlite3_syntaxdiagrams.htm#join-operator">join-operator:</a></b>
           <button id='x965' onclick='hideorshow("x965","x966")'>show</button>
          </p>
          <div id='x966' style='display:none;' class='imgcontainer'>
           <img alt="syntax diagram join-operator" src="images/syntax/join-operator.gif" />
          </div>
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#ordering-term">ordering-term:</a></b>
          <button id='x967' onclick='hideorshow("x967","x968")'>show</button>
         </p>
         <div id='x968' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram ordering-term" src="images/syntax/ordering-term.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#result-column">result-column:</a></b>
          <button id='x969' onclick='hideorshow("x969","x970")'>show</button>
         </p>
         <div id='x970' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram result-column" src="images/syntax/result-column.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#table-or-subquery">table-or-subquery:</a></b>
          <button id='x971' onclick='hideorshow("x971","x972")'>show</button>
         </p>
         <div id='x972' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram table-or-subquery" src="images/syntax/table-or-subquery.gif" />
         </div>
        </div>
        <p><b><a href="sqlite3_syntaxdiagrams.htm#update-stmt">update-stmt:</a></b>
         <button id='x973' onclick='hideorshow("x973","x974")'>show</button>
        </p>
        <div id='x974' style='display:none;' class='imgcontainer'>
         <img alt="syntax diagram update-stmt" src="images/syntax/update-stmt.gif" />
         <p><b><a href="sqlite3_syntaxdiagrams.htm#column-name-list">column-name-list:</a></b>
          <button id='x975' onclick='hideorshow("x975","x976")'>show</button>
         </p>
         <div id='x976' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram column-name-list" src="images/syntax/column-name-list.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#qualified-table-name">qualified-table-name:</a></b>
          <button id='x977' onclick='hideorshow("x977","x978")'>show</button>
         </p>
         <div id='x978' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram qualified-table-name" src="images/syntax/qualified-table-name.gif" />
         </div>
         <p><b><a href="sqlite3_syntaxdiagrams.htm#with-clause">with-clause:</a></b>
          <button id='x979' onclick='hideorshow("x979","x980")'>show</button>
         </p>
         <div id='x980' style='display:none;' class='imgcontainer'>
          <img alt="syntax diagram with-clause" src="images/syntax/with-clause.gif" />
          <p><b><a href="sqlite3_syntaxdiagrams.htm#cte-table-name">cte-table-name:</a></b>
           <button id='x981' onclick='hideorshow("x981","x982")'>show</button>
          </p>
          <div id='x982' style='display:none;' class='imgcontainer'>
           <img alt="syntax diagram cte-table-name" src="images/syntax/cte-table-name.gif" />
          </div>
         </div>
        </div>
       </div>
       <p>
        The CREATE TRIGGER statement is used to add triggers to the 
        database schema. Triggers are database operations 
        that are automatically performed when a specified database event
        occurs.
       </p>
       <p>
        A trigger may be specified to fire whenever a <a href="sqlite3_lang_delete.htm">DELETE</a>, <a href="sqlite3_lang_insert.htm">INSERT</a>,
        or <a href="sqlite3_lang_update.htm">UPDATE</a> of a
        particular database table occurs, or whenever an <a href="sqlite3_lang_update.htm">UPDATE</a> occurs on
        on one or more specified columns of a table.
       </p>
       <p>
        At this time SQLite supports only FOR EACH ROW triggers, not FOR EACH
        STATEMENT triggers. Hence explicitly specifying FOR EACH ROW is optional.
        FOR EACH ROW implies that the SQL statements specified in the trigger
        may be executed (depending on the WHEN clause) for each database row being
        inserted, updated or deleted by the statement causing the trigger to fire.
       </p>
       <p>
        Both the WHEN clause and the trigger actions may access elements of 
        the row being inserted, deleted or updated using references of the form 
        NEW.<i>column-name</i> and OLD.<i>column-name</i>, where
        <i>column-name</i> is the name of a column from the table that the trigger
        is associated with. OLD and NEW references may only be used in triggers on
        events for which they are relevant, as follows:
       </p>
       <table border=0 cellpadding=10>
        <tr>
         <td align="right" width=120><i>INSERT</i></td>
         <td>NEW references are valid</td>
        </tr>
        <tr>
         <td align="right" width=120><i>UPDATE</i></td>
         <td>NEW and OLD references are valid</td>
        </tr>
        <tr>
         <td align="right" width=120><i>DELETE</i></td>
         <td>OLD references are valid</td>
        </tr>
       </table>
       <p>
        If a WHEN clause is supplied, the SQL statements specified
        are only executed if the WHEN clause is true.
        If no WHEN clause is supplied, the SQL statements
        are executed every time the trigger fires.
       </p>
       <p>
        The BEFORE or AFTER keyword determines when the trigger actions
        will be executed relative to the insertion, modification or removal of the
        associated row.
       </p>
       <p>
        An <a href="sqlite3_lang_conflict.htm">ON CONFLICT</a> clause may be specified as part of an <a href="sqlite3_lang_update.htm">UPDATE</a> or <a href="sqlite3_lang_insert.htm">INSERT</a>
        action within the body of the trigger.
        However if an <a href="sqlite3_lang_conflict.htm">ON CONFLICT</a> clause is specified as part of 
        the statement causing the trigger to fire, then conflict handling
        policy of the outer statement is used instead.
       </p>
       <p>
        Triggers are automatically <a href="sqlite3_lang_droptrigger.htm">dropped</a>
        when the table that they are 
        associated with (the <i>table-name</i> table) is 
        <a href="sqlite3_lang_droptable.htm">dropped</a>.  However if the trigger actions reference
        other tables, the trigger is not dropped or modified if those other
        tables are <a href="sqlite3_lang_droptable.htm">dropped</a> or <a href="sqlite3_lang_altertable.htm">modified</a>.
       </p>
       <p>Triggers are removed using the <a href="sqlite3_lang_droptrigger.htm">DROP TRIGGER</a> statement.</p>
       <h3>Syntax Restrictions On UPDATE, DELETE, and INSERT Statements Within Triggers</h3>
       <p>
        The <a href="sqlite3_lang_update.htm">UPDATE</a>, <a href="sqlite3_lang_delete.htm">DELETE</a>, and <a href="sqlite3_lang_insert.htm">INSERT</a>
        statements within triggers do not support
        the full syntax for <a href="sqlite3_lang_update.htm">UPDATE</a>, <a href="sqlite3_lang_delete.htm">DELETE</a>, and <a href="sqlite3_lang_insert.htm">INSERT</a> statements.  The following
        restrictions apply:
       </p>
       <ul>
        <li>
        <p>
          The name of the table to be modified in an <a href="sqlite3_lang_update.htm">UPDATE</a>, <a href="sqlite3_lang_delete.htm">DELETE</a>, or <a href="sqlite3_lang_insert.htm">INSERT</a>
          statement must be an unqualified table name.  In other words, one must
          use just "<i>tablename</i>" not "<i>database</i><b>.</b><i>tablename</i>"
          when specifying the table. </p></li>
        <li><p>
         For non-TEMP triggers,
          the table to be modified or queried must exist in the
          same database as the table or view to which the trigger is attached.
          TEMP triggers are not subject to the same-database rule.  A TEMP
          trigger is allowed to query or modify any table in any <a href="sqlite3_lang_attach.htm">ATTACH</a>-ed database.
        </p></li>
        <li>
        <p>
          The "INSERT INTO <i>table</i> DEFAULT VALUES" form of the <a href="sqlite3_lang_insert.htm">INSERT</a> statement
          is not supported.
        </p></li>
        <li>
        <p>
          The INDEXED BY and NOT INDEXED clauses are not supported for <a href="sqlite3_lang_update.htm">UPDATE</a> and
          <a href="sqlite3_lang_delete.htm">DELETE</a> statements.
        </p></li>
        <li>
        <p>
          The ORDER BY and LIMIT clauses on <a href="sqlite3_lang_update.htm">UPDATE</a> and <a href="sqlite3_lang_delete.htm">DELETE</a> statements are not
          supported.  ORDER BY and LIMIT are not normally supported for <a href="sqlite3_lang_update.htm">UPDATE</a> or
          <a href="sqlite3_lang_delete.htm">DELETE</a> in any context but can be enabled for top-level statements
          using the SQLITE_ENABLE_UPDATE_DELETE_LIMIT compile-time option.  However,
          that compile-time option only applies to top-level <a href="sqlite3_lang_update.htm">UPDATE</a> and <a href="sqlite3_lang_delete.htm">DELETE</a>
          statements, not <a href="sqlite3_lang_update.htm">UPDATE</a> and <a href="sqlite3_lang_delete.htm">DELETE</a> statements within triggers.
        </p></li>
        <li>
        <p>
          <a href="sqlite3_syntaxdiagrams.htm#common-table-expression">Common table expression</a> are not supported for
          statements inside of triggers.
        </p></li>
       </ul>

        <a name="instead_of_trigger"></a>
       <h3>INSTEAD OF triggers</h3>
       <p>
        Triggers may be created on <a href="sqlite3_lang_createview.htm">views</a>, as well as ordinary tables, by
        specifying INSTEAD OF in the CREATE TRIGGER statement. 
        If one or more ON INSERT, ON DELETE
        or ON UPDATE triggers are defined on a view, then it is not an
        error to execute an INSERT, DELETE or UPDATE statement on the view, 
        respectively.  Instead,
        executing an INSERT, DELETE or UPDATE on the view causes the associated
        triggers to fire. The real tables underlying the view are not modified
        (except possibly explicitly, by a trigger program).
       </p>
       <p>
        Note that the <a href="sqlite3_changes.htm">sqlite3_changes</a>() and 
        <a href="sqlite3_changes.htm">sqlite3_total_changes</a>() interfaces
        do not count INSTEAD OF trigger firings, but the
        <a href="sqlite3_pragma.htm#pragma_count_changes">count_changes pragma</a> does count INSTEAD OF trigger firing.
       </p>
       <h3>Some Example Triggers</h3>
       <p>
        Assuming that customer records are stored in the "customers" table, and
        that order records are stored in the "orders" table, the following
        UPDATE trigger
        ensures that all associated orders are redirected when a customer changes
        his or her address:
       </p>
       <blockquote><pre>
        CREATE TRIGGER update_customer_address UPDATE OF address ON customers 
          BEGIN
            UPDATE orders SET address = new.address WHERE customer_name = old.name;
          END;
        </pre>
       </blockquote>
       <p>With this trigger installed, executing the statement:</p>
       <blockquote><pre>
        UPDATE customers SET address = '1 Main St.' WHERE name = 'Jack Jones';
        </pre>
       </blockquote>
       <p>causes the following to be automatically executed:</p>
       <blockquote><pre>
        UPDATE orders SET address = '1 Main St.' WHERE customer_name = 'Jack Jones';
        </pre>
       </blockquote>
       <p>For an example of an INSTEAD OF trigger, consider the following schema:</p>
       <blockquote><pre>
        CREATE TABLE customer(
          cust_id INTEGER PRIMARY KEY,
          cust_name TEXT,
          cust_addr TEXT
        );
        CREATE VIEW customer_address AS
           SELECT cust_id, cust_addr FROM customer;
        CREATE TRIGGER cust_addr_chng
        INSTEAD OF UPDATE OF cust_addr ON customer_address
        BEGIN
          UPDATE customer SET cust_addr=NEW.cust_addr
           WHERE cust_id=NEW.cust_id;
        END;
        </pre>
       </blockquote>
       <p>With the schema above, a statement of the form:</p>
       <blockquote><pre>
        UPDATE customer_address SET cust_addr=$new_address WHERE cust_id=$cust_id;
        </pre>
       </blockquote>
       <p>
        Causes the customer.cust_addr field to be updated for a specific
        customer entry that has customer.cust_id equal to the $cust_id parameter.
        Note how the values assigned to the view are made available as field
        in the special "NEW" table within the trigger body.
       </p>

        <a name="undef_before"></a>
       <h3>Cautions On The Use Of BEFORE triggers</h3>
       <p>
        If a BEFORE UPDATE or BEFORE DELETE trigger modifies or deletes a row
        that was to have been updated or deleted, then the result of the subsequent
        update or delete operation is undefined.  Furthermore, if a BEFORE trigger
        modifies or deletes a row, then it is undefined whether or not AFTER triggers
        that would have otherwise run on those rows will in fact run.
       </p>
       <p>
        The value of NEW.rowid is undefined in a BEFORE INSERT trigger in which
        the rowid is not explicitly set to an integer.
       </p>
       <p>
        Because of the behaviors described above, programmers are encouraged to
        prefer AFTER triggers over BEFORE triggers.
       </p>

        <a name="raise"></a>
       <h3>The RAISE() function</h3>
       <p>
        A special SQL function RAISE() may be used within a trigger-program,
        with the following syntax
       </p>
       <p><b><a href="sqlite3_syntaxdiagrams.htm#raise-function">raise-function:</a></b></p>
       <div class='imgcontainer'>
        <img alt="syntax diagram raise-function" src="images/syntax/raise-function.gif"></img>
       </div>
       <p>
        When one of RAISE(ROLLBACK,...), RAISE(ABORT,...) or RAISE(FAIL,...)
        is called during trigger-program
        execution, the specified <a href="sqlite3_lang_conflict.htm">ON CONFLICT</a> processing is performed
        the current query terminates.
        An error code of <a href="sqlconst.htm#SQLITE_CONSTRAINT">SQLITE_CONSTRAINT</a> is returned to the application,
        along with the specified error message.
       </p>
       <p>
        When RAISE(IGNORE) is called, the remainder of the current trigger program,
        the statement that caused the trigger program to execute and any subsequent
        trigger programs that would have been executed are abandoned. No database
        changes are rolled back.  If the statement that caused the trigger program
        to execute is itself part of a trigger program, then that trigger program
        resumes execution at the beginning of the next step.
       </p>

        <a name="temptrig"></a>
       <h3>TEMP Triggers on Non-TEMP Tables</h3>
       <p>
        A trigger normally exists in the same database as the table named
        after the "ON" keyword in the CREATE TRIGGER statement.  Except, it is
        possible to create a TEMP TRIGGER on a table in another database.  
        Such a trigger will only fire when changes
        are made to the target table by the application that defined the trigger.
        Other applications that modify the database will not be able to see the
        TEMP trigger and hence cannot run the trigger.
       </p>
       <p>
        When defining a TEMP trigger on a non-TEMP table, it is important to
        specify the database holding the non-TEMP table.  For example,
        in the following statement, it is important to say "main.tab1" instead
        of just "tab1":
       </p>
       <blockquote><pre>
        CREATE TEMP TRIGGER ex1 AFTER INSERT ON <b>main.</b>tab1 BEGIN ...
        </pre>
       </blockquote>
       <p>
        Failure to specify the schema name on the target table could result
        in the TEMP trigger being reattached to a table with the same name in
        another database whenever any schema change occurs.
       </p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
