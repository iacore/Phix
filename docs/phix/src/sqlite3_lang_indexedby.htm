<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">INDEXED BY</h1>
      <div id="mainSection">
       <p>The INDEXED BY phrase forces the SQLite query planner to use a
        particular named index on a <a href="sqlite3_lang_delete.htm">DELETE</a>, <a href="sqlite3_lang_select.htm">SELECT</a>, or <a href="sqlite3_lang_update.htm">UPDATE</a> statement.
        The INDEXED BY phrase is an SQLite extension and
        is not portable to other SQL database engines.
       </p>
       <p><b><a href="sqlite3_syntaxdiagrams.htm#qualified-table-name">qualified-table-name:</a></b>
        <button id='x1443' onclick='hideorshow("x1443","x1444")'>hide</button>
       </p>
       <div id='x1444' class='imgcontainer'>
        <img alt="syntax diagram qualified-table-name" src="images/syntax/qualified-table-name.gif" />
       </div>
       <p>The "INDEXED BY
        <span class='yyterm'>index-name</span>" phrase specifies 
        that the named index
        must be used in order to look up values on the preceding table.
        If <span class='yyterm'>index-name</span> does not exist or cannot be used 
        for the query, then the preparation of the SQL statement fails.
        The "NOT INDEXED" clause specifies that no index shall be used when
        accessing the preceding table, including implied indices create by
        UNIQUE and PRIMARY KEY constraints.  However, the <a href="sqlite3_lang_createtable.htm#rowid">rowid</a>
        can still be used to look up entries even when "NOT INDEXED" is specified.
       </p>
       <p>Some SQL database engines provide non-standard "hint" mechanisms which
        can be used to give the query optimizer clues about what indices it should
        use for a particular statement.  The INDEX BY clause of SQLite is 
        <em>not</em> a hinting mechanism and it should not be used as such.
        The INDEXED BY clause does not give the optimizer hints about which index
        to use; it gives the optimizer a requirement of which index to use.
        If the query optimizer is unable to use the index specified by the
        INDEX BY clause, then the query will fail with an error.
       </p>
       <p>The INDEXED BY clause is <em>not</em> intended for use in tuning
        the performance of a query.  The intent of the INDEXED BY clause is
        to raise a run-time error if a schema change, such as dropping or
        creating an index, causes the query plan for a time-sensitive query
        to change.  The INDEXED BY clause is designed to help detect
        undesirable query plan changes during regression testing.
        Application 
        developers are admonished to omit all use of INDEXED BY during
        application design, implementation, testing, and tuning.  If
        INDEXED BY is to be used at all, it should be inserted at the very
        end of the development process when "locking down" a design.
       </p>
       <h3>See Also:</h3>
       <ol>
        <li>
        <p>The query planner checklist describes steps that application
        developers should following to help resolve query planner problems.
        Notice the that the use of INDEXED BY is a last resort, to be used only
        when all other measures fail.
        </p>

        <li>
        <p>The unary "+" operator
        can be used to disqualify terms in the WHERE clause from use by indices.
        Careful use of unary + can sometimes help prevent the query planner from
        choosing a poor index without restricting it to using one specific index.
        Careful placement of unary + operators is a better method for controlling 
        which indices are used by a query.
        </p>

<!--
        <li>
        <p>The [a href="c3ref/stmt_status.htm?"]sqlite3_stmt_status()[/a] [not implemented] C/C++ interface together with the
        SQLITE_STMTSTATUS_FULLSCAN_STEP and SQLITE_STMTSTATUS_SORT verbs
        can be used to detect at run-time when an SQL statement is not
        making effective use of indices.  Many applications may prefer to
        use the [a href="c3ref/stmt_status.htm?"]sqlite3_stmt_status()[/a] [not implemented] interface to detect index misuse
        rather than the INDEXED BY phrase described here.
        </p>
-->
       </ol>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
