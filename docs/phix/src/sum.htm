<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">sum / product</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
          <a href="atom.htm">atom</a> res = sum(<a href="object.htm">object</a> x, zlr=0)
          <br>
          <i>-- or --</i>
          <br>
          <a href="atom.htm">atom</a> res = product(<a href="object.htm">object</a> x, zlr=1)
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Add or multiply together all elements of x, however deeply nested.
            <br>
            <br>
            x: atom or sequence of items to add or multiply together<br>
            zlr: atom or length 1 sequence, the overrideable zero length result for {}.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            This function may be applied to an <a href="atom.htm">atom</a> or all elements of a <a href="sequence.htm">sequence</a>.<br>
            Note that unlike most of the other math functions there are <i>no</i> separate sq_sum or sq_product routines.
            <br>
            <br>
            The zlr (zero length result) parameter is only used when x is {}, an empty sequence.
            <br>
            <br>
            You might, for instance, rely on sum({},1) to award one bonus point for "no faults", or product({},0) to order zero tons
            of concrete when there is no foundation, instead of the mathematically correct defaults which are the other way around.
            <br>
            <br>
            If zlr is a sequence of length 1, containing a single atom, it is applied to any sum/product calls on (empty) nested subsequences, <br>
            whereas if zlr is an atom it is applied at the top-level only, and any recursive calls get the standard 0/1 defaults.<br>
            A fatal error occurs if zlr is not an atom or a length 1 sequence containing a single atom.
         </td>
        </tr>
<!--
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          supported.
         </td>
        </tr>
-->
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
atom s = sum({1,2,3,4}),    -- s is 10
     p = product({1,2,3,4}) -- p is 24
</eucode-->
<pre>
<font color="#004080">atom</font><font color="#000000"> s</font><font color="#0000FF"> =</font><font color="#5E005E"> sum</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">,</font><font color="#000000">4</font><font color="#800000">}</font><font color="#0000FF">),   </font><font color="#000080"><i> -- s is 10</i></font>
<font color="#000000">     p</font><font color="#0000FF"> =</font><font color="#5E005E"> product</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">,</font><font color="#000000">4</font><font color="#800000">}</font><font color="#0000FF">)</font><font color="#000080"><i> -- p is 24</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\psum.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
