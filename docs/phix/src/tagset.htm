<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">tagset</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Syntax:</b>
         </td>
         <td>
          <font face = "Arial, Helvetica">
            seqeuence s = tagset(integer len)
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Returns a sequence of integers: {1,2,3,..,len}.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>This routine is particularly useful when performing a tag sort.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example Program:</b>
         </td>
         <td>
<!--eucode>
sequence Names = {"C. C. Catch", "Army of Lovers", "Boney M.", "Dschinghis Khan"}
sequence Years = { 1985,          1987,             1975,       1979            }

function by_year(integer i, integer j)
integer res = compare(Years[i],Years[j])
    if res=0 then
        res = compare(Names[i],Names[j])
    end if
    return res
end function
sequence yeartags = custom_sort(routine_id("by_year"),tagset(length(Years)))

for i=1 to length(yeartags) do
    integer ti = yeartags[i]
    printf(1,"Year: %d, Name: %s\n",{Years[ti],Names[ti]})
end for
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">sequence</font><font color="#000000"> Names</font><font color="#0000FF"> = {</font><font color="#008000">"C. C. Catch"</font><font color="#0000FF">,</font><font color="#008000"> "Army of Lovers"</font><font color="#0000FF">,</font><font color="#008000"> "Boney M."</font><font color="#0000FF">,</font><font color="#008000"> "Dschinghis Khan"</font><font color="#0000FF">}
</font><font color="#004080">sequence</font><font color="#000000"> Years</font><font color="#0000FF"> = {</font><font color="#000000"> 1985</font><font color="#0000FF">,         </font><font color="#000000"> 1987</font><font color="#0000FF">,            </font><font color="#000000"> 1975</font><font color="#0000FF">,      </font><font color="#000000"> 1979           </font><font color="#0000FF"> }

</font><font color="#008080">function</font><font color="#000000"> by_year</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> i</font><font color="#0000FF">,</font><font color="#004080"> integer</font><font color="#000000"> j</font><font color="#0000FF">)
</font><font color="#004080">integer</font><font color="#000000"> res</font><font color="#0000FF"> =</font><font color="#7060A8"> compare</font><font color="#0000FF">(</font><font color="#000000">Years</font><font color="#800000">[</font><font color="#000000">i</font><font color="#800000">]</font><font color="#0000FF">,</font><font color="#000000">Years</font><font color="#800000">[</font><font color="#000000">j</font><font color="#800000">]</font><font color="#0000FF">)
</font><font color="#008080">    if</font><font color="#000000"> res</font><font color="#0000FF">=</font><font color="#000000">0</font><font color="#008080"> then
</font><font color="#000000">        res</font><font color="#0000FF"> =</font><font color="#7060A8"> compare</font><font color="#0000FF">(</font><font color="#000000">Names</font><font color="#800000">[</font><font color="#000000">i</font><font color="#800000">]</font><font color="#0000FF">,</font><font color="#000000">Names</font><font color="#800000">[</font><font color="#000000">j</font><font color="#800000">]</font><font color="#0000FF">)
</font><font color="#008080">    end if
    return</font><font color="#000000"> res
</font><font color="#008080">end function
</font><font color="#004080">sequence</font><font color="#000000"> yeartags</font><font color="#0000FF"> =</font><font color="#800080"> custom_sort</font><font color="#0000FF">(</font><font color="#800080">routine_id</font><font color="#800000">(</font><font color="#008000">"by_year"</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#800080">tagset</font><font color="#800000">(</font><font color="#7060A8">length</font><font color="#800080">(</font><font color="#000000">Years</font><font color="#800080">)</font><font color="#800000">)</font><font color="#0000FF">)

</font><font color="#008080">for</font><font color="#000000"> i</font><font color="#0000FF">=</font><font color="#000000">1</font><font color="#008080"> to</font><font color="#7060A8"> length</font><font color="#0000FF">(</font><font color="#000000">yeartags</font><font color="#0000FF">)</font><font color="#008080"> do
</font><font color="#004080">    integer</font><font color="#000000"> ti</font><font color="#0000FF"> =</font><font color="#000000"> yeartags</font><font color="#0000FF">[</font><font color="#000000">i</font><font color="#0000FF">]
</font><font color="#800080">    printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"Year: %d, Name: %s\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#000000">Years</font><font color="#800080">[</font><font color="#000000">ti</font><font color="#800080">]</font><font color="#0000FF">,</font><font color="#000000">Names</font><font color="#800080">[</font><font color="#000000">ti</font><font color="#800080">]</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#008080">end for</font>
</pre>
          <br>
            This program, with a sort by name as well as by year, is included in the distribution as demo\tagsort.exw
         </td>
        </tr>
       </table>
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
