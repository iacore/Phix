<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">to_string</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td>
          <b>Definition:</b>
         </td>
         <td>
            <a href="string.htm">string</a> res = to_string(<a href="object.htm">object</a> data_in,
                                                            <a href="integer.htm">integer</a> string_quote=0,
                                                            <a href="integer.htm">integer</a> embed_string_quote='"')
         </td>
        </tr>
        <tr>
         <td>
          <b>Description:</b>
         </td>
         <td>
            Converts an object into a text string.
            <br>
            <br>
            data_in: Any Phix object.<br>
            string_quote: If not zero (the default) this is used to enclose data_in, if it is already a string. <br>
            embed_string_quote: Used to enclose any strings embedded inside data_in. The default is double quote.
            <br>
            <br>
            Returns the string repesentation of data_in.
         </td>
        </tr>
        <tr>
         <td>
          <a href="p2js.htm"><span class="pwap2js"><b>pwa/p2js:</b></span></a>
         </td>
         <td>
          Supported, but only somewhat unofficially/reluctantly, see examples and alternatives below.
         </td>
        </tr>
        <tr>
         <td>
          <b>Comments:</b>
         </td>
         <td>
            The returned value is guaranteed to be a displayable text string.
            <br>
            <br>
            string_quote is only used if data_in is already a string. <br>
            In this case, if string_quote is zero the string is returned unaltered, otherwise
            all occurances of string_quote already in data_in are prefixed with
            the &rsquo;\&rsquo; escape character, as are any pre-existing escape characters. <br>
            Then string_quote is added to both ends of data_in, resulting in a quoted string.
            <br>
            <br>
            embed_string_quote is only used if data_in is a sequence that contains strings. <br>
            In this case, it is used as the enclosing quote for embedded strings.
            <br>
            <br>
            See also <a href="printf.htm">(s)printf</a>()&rsquo;s '%v' handling, which is often easier, and/or <a href="ppp.htm">ppp</a>.
            <br>
            <br>
            This routine is defined in builtins\to_str.e (an autoinclude) and is provided only for compatibility with Euphoria.
         </td>
        </tr>
        <tr>
         <td>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
printf(1,"%s\n",{to_string(12)})                        -- 12
printf(1,"%s\n",{to_string("abc")})                     -- abc
printf(1,"%s\n",{to_string("abc",'"')})                 -- "abc"
printf(1,"%s\n",{to_string(`abc\"`,'`')})               -- `abc\\"`     -- see note
printf(1,"%s\n",{to_string({12,"abc",{4.5, -99}})})     -- {12, "abc", {4.5, -99}}
printf(1,"%s\n",{to_string({12,"abc",{4.5, -99}},0,0)}) -- {12, abc, {4.5, -99}}
puts(1,"\n")
printf(1,"%v\n",{12})                       -- 12
printf(1,"%v\n",{"abc"})                    -- "abc" (no quote-less %v, that'd be %s)
printf(1,"%v\n",{`abc\"`})  	            -- `abc\"`	-- that's better!
printf(1,"%v\n",{{12,"abc",{4.5,-99}}})     -- {12,"abc",{4.5,-99}}         -- ("")
puts(1,"\n")
pp(12)                                      -- 12
pp("abc",{pp_StrFmt,-1})                    -- abc
pp("abc")                                   -- "abc"
pp(`abc\"`)  		               			-- `abc\"`	-- ditto
pp({12,"abc",{4.5, -99}})                   -- {12, `abc`, {4.5,-99}}
pp({12,"abc",{4.5, -99}},{pp_StrFmt,-1})    -- {12, abc, {4.5,-99}}
</eucode-->
<pre>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%s\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#5E005E">to_string</font><font color="#800080">(</font><font color="#000000">12</font><font color="#800080">)</font><font color="#800000">}</font><font color="#0000FF">)                       </font><font color="#000080"><i> -- 12</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%s\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#5E005E">to_string</font><font color="#800080">(</font><font color="#008000">"abc"</font><font color="#800080">)</font><font color="#800000">}</font><font color="#0000FF">)                    </font><font color="#000080"><i> -- abc</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%s\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#5E005E">to_string</font><font color="#800080">(</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#008000">'"'</font><font color="#800080">)</font><font color="#800000">}</font><font color="#0000FF">)                </font><font color="#000080"><i> -- "abc"</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%s\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#5E005E">to_string</font><font color="#800080">(</font><font color="#008000">`abc\"`</font><font color="#0000FF">,</font><font color="#008000">'`'</font><font color="#800080">)</font><font color="#800000">}</font><font color="#0000FF">)              </font><font color="#000080"><i> -- `abc\\"`     -- see note</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%s\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#5E005E">to_string</font><font color="#800080">(</font><font color="#00FF00">{</font><font color="#000000">12</font><font color="#0000FF">,</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#000080">{</font><font color="#000000">4.5</font><font color="#0000FF">, -</font><font color="#000000">99</font><font color="#000080">}</font><font color="#00FF00">}</font><font color="#800080">)</font><font color="#800000">}</font><font color="#0000FF">)    </font><font color="#000080"><i> -- {12, "abc", {4.5, -99}}</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%s\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#5E005E">to_string</font><font color="#800080">(</font><font color="#00FF00">{</font><font color="#000000">12</font><font color="#0000FF">,</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#000080">{</font><font color="#000000">4.5</font><font color="#0000FF">, -</font><font color="#000000">99</font><font color="#000080">}</font><font color="#00FF00">}</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#800080">)</font><font color="#800000">}</font><font color="#0000FF">)</font><font color="#000080"><i> -- {12, abc, {4.5, -99}}</i></font>
<font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"\n"</font><font color="#0000FF">)</font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%v\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#000000">12</font><font color="#800000">}</font><font color="#0000FF">)                      </font><font color="#000080"><i> -- 12</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%v\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#008000">"abc"</font><font color="#800000">}</font><font color="#0000FF">)                   </font><font color="#000080"><i> -- "abc" (no quote-less %v, that'd be %s)</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%v\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#008000">`abc\"`</font><font color="#800000">}</font><font color="#0000FF">)                 </font><font color="#000080"><i> -- `abc\"`  -- that's better!</i></font>
<font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"%v\n"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#800080">{</font><font color="#000000">12</font><font color="#0000FF">,</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#00FF00">{</font><font color="#000000">4.5</font><font color="#0000FF">,-</font><font color="#000000">99</font><font color="#00FF00">}</font><font color="#800080">}</font><font color="#800000">}</font><font color="#0000FF">)    </font><font color="#000080"><i> -- {12,"abc",{4.5,-99}}         -- ("")</i></font>
<font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"\n"</font><font color="#0000FF">)</font>
<font color="#5E005E">pp</font><font color="#0000FF">(</font><font color="#000000">12</font><font color="#0000FF">)                                     </font><font color="#000080"><i> -- 12</i></font>
<font color="#5E005E">pp</font><font color="#0000FF">(</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#004600">pp_StrFmt</font><font color="#0000FF">,-</font><font color="#000000">1</font><font color="#800000">}</font><font color="#0000FF">)                   </font><font color="#000080"><i> -- abc</i></font>
<font color="#5E005E">pp</font><font color="#0000FF">(</font><font color="#008000">"abc"</font><font color="#0000FF">)                                  </font><font color="#000080"><i> -- "abc"</i></font>
<font color="#5E005E">pp</font><font color="#0000FF">(</font><font color="#008000">`abc\"`</font><font color="#0000FF">)                                </font><font color="#000080"><i> -- `abc\"`  -- ditto</i></font>
<font color="#5E005E">pp</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">12</font><font color="#0000FF">,</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#800080">{</font><font color="#000000">4.5</font><font color="#0000FF">, -</font><font color="#000000">99</font><font color="#800080">}</font><font color="#800000">}</font><font color="#0000FF">)                  </font><font color="#000080"><i> -- {12, `abc`, {4.5,-99}}</i></font>
<font color="#5E005E">pp</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">12</font><font color="#0000FF">,</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#800080">{</font><font color="#000000">4.5</font><font color="#0000FF">, -</font><font color="#000000">99</font><font color="#800080">}</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#004600">pp_StrFmt</font><font color="#0000FF">,-</font><font color="#000000">1</font><font color="#800000">}</font><font color="#0000FF">)   </font><font color="#000080"><i> -- {12, abc, {4.5,-99}}</i></font>
</pre>
            <br>
            Note: I spotted in passing that the fourth item was completely wrong [compared to Euphoria?]. I corrected it best
            I could but cannot (be bothered to) precisely justify exactly why it behaves in the particular way that it does.
            Personally I would use and recommend <a href="sprint.htm">sprint</a>() or the (phix-specific) <a href="printf.htm">printf</a>(%v) instead.
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
