// auto-generated by pwa/p2js, see http://phix.x10.mx
"use strict";
//
// log10.e
//
//with debug

/*global*/ function log10(/*atom*/ n) {
//Added 26/9/22:
    if (integer(n) && n>0) {
        // (sadly not quite as efficient as log2)   
        let /*atom*/ t = 1, r = 0;
        while (t<=n) {
            if (t===n) { return r; }
            t *= 10;
            r += 1;
        }
    }
    return log(n)*INVLN10;
}

/*global*/ function log2(/*atom*/ n) {
//Added 26/9/22:
    if ((integer(n) && n>0) && (equal(and_bits(n,n-1),0))) { // "if Kernigans bit counter would yield 1"
        // KBC says and_bits(xxx1{0},xxx0{1}) is xxx0{0}, ie
        // least significant set bit is cleared - clever, eh?
        let /*integer*/ t = 1, r = 0; // 2^0==1
        while (true) {
            if (t===n) { return r; }
            t *= 2;
            r += 1;          // 2^r==t
        }
    }
//</26/9/22>
//  return log(n) * INVLN2
    return log(n)*1.44269504088896340739;
}
