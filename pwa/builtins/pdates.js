// auto-generated by pwa/p2js, see http://phix.x10.mx
"use strict";
//
// pdates.e
// ========
//
//   Some support routines for date(), namely day_of_week(), days_in_month(), 
//                                     day_of_year(), and is_leap_year()
//
//   [moved out of pdate.e as that uses #ilASM{}, for pwa/p2js]
//
let /*sequence*/ $dot, $dim, $t, $days;
let /*integer*/ $dinit = 0;
function $initd() {
    $dot = ["sequence",0,31,59,90,120,151,181,212,243,273,304,334];
    $dim = ["sequence",31,28,31,30,31,30,31,31,30,31,30,31];
    $t = ["sequence",-1,2,1,4,-1,2,4,0,3,5,1,3];
    $days = ["sequence","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];
    $dinit = 1;
}

/*global*/ function is_leap_year(/*object*/ y) {
    if (sequence(y)) { y = $subse(y,DT_YEAR); }
    return (equal(remainder(y,4),0)) && ((!equal(remainder(y,100),0)) || (equal(remainder(y,400),0)));
}

/*global*/ function day_of_year(/*object*/ y, /*integer*/ m=0, d=0) {
// day of year function, returns 1..366
    if (sequence(y)) { [,y,m,d] = y; }     // (extract DT_YEAR,DT_MONTH,DT_YEAR)
    if (!$dinit) { $initd(); }
    if ((m<1 || m>12) || ((!equal(y,0)) && compare(y,1752)<0)) { return 0; }
    return (d+$subse($dot,m))+(m>2 && is_leap_year(y));
}

/*global*/ function days_in_month(/*object*/ y, /*integer*/ m=0) {
    if (sequence(y)) { [,y,m] = y; }     // (extract DT_YEAR,DT_MONTH)
    if (!$dinit) { $initd(); }
    if ((m<1 || m>12) || ((!equal(y,0)) && compare(y,1752)<0)) { return 0; }
    return $subse($dim,m)+((m===2) && is_leap_year(y));
}
/*
function julianDayOfYear(object ymd) -- returns an integer
integer year, month, day
integer d

    year = ymd[1]
    month = ymd[2]
    day = ymd[3]

    if month=1 then return day end if

    d = 0
    for i=1 to month-1 do
        d += daysInMonth(year, i)
    end for

    d += day

    if year=Gregorian_Reformation and month=9 then
        if day>13 then
            d -= 11
        elsif day>2 then
            return 0
        end if
    end if

    return d
end function

*/

/*global*/ function day_of_week(/*object*/ y, /*integer*/ m=0, d=0, /*bool*/ bAsText=false) {
// day of week function (Sakamoto) returns 1..7 (Mon..Sun)
    if (sequence(y)) { [,y,m,d] = y; }     // (extract DT_YEAR,DT_MONTH,DT_YEAR)
    let /*integer*/ l;
    if (!$dinit) { $initd(); }
//23/5/24: (erm, still maybe.. [untested])
//  if m=13 then y += 1; m = 1 elsif m=0 then y -= 1 m = 12 end if
//  if d=0 then
//      if m=1 then y -=1; m = 12 else m -= 1 end if
//      d = days_in_month(y, m)
//  end if
    if ((((d<1 || d>31) || m<0) || m>12) || ((!equal(y,0)) && compare(y,1752)<0)) { crash("9/0"); }
    if ((((!equal(y,0)) || (m!==0)) || !bAsText) || d>7) {
        y -= m<3;
        l = (floor(y/4)-floor(y/100))+floor(y/400);
        d += (y+l)+$subse($t,m);
        d = remainder(d,7)+1;
    }
    if (bAsText) {
        return $subse($days,d);
    }
    return d;
}

/*global*/ function week_number(/*object*/ y, /*integer*/ m=0, d=0) {
    // note $days prior to the first monday of the year are
    //      classed as the 52nd week of the preceding year.
    // returns {y[-1],1..52}
    if (sequence(y)) { [,y,m,d] = y; }     // (extract DT_YEAR,DT_MONTH,DT_YEAR)
    let /*integer*/ d1 = day_of_week(y,1,1),  // (1..7)
                    w52 = remainder(7-d1,7)+1,  // (1..7)
                    dy = day_of_year(y,m,d)-w52; // (1..366) - (1..7) = -6..365
    if (dy<=0) { return ["sequence",y-1,52]; }
    return ["sequence",y,floor((dy-1)/7)+1];
}
