"use strict";
// auto-generated by pwa/p2js.
//
// builtins\pextract.e
//
/*global*/ function extract(/*sequence*/ source, indexes, /*bool*/ invert=false) {
    let /*integer*/ l = length(indexes), ii;
    let /*sequence*/ res = repeat(0,l);
    if (invert) {
        for (let i=1, i$lim=l; i<=i$lim; i+=1) {
            ii = $subse(indexes,i);
            res = $repe(res,ii,i);
        }
        indexes = res;
    }
    for (let i=1, i$lim=l; i<=i$lim; i+=1) {
        ii = $subse(indexes,i);
        res = $repe(res,i,$subse(source,ii));
    }
    return res;
}
/*global*/ function reinstate(/*sequence*/ source, indexes, replacements, /*bool*/ invert=false) {
    let /*integer*/ l = length(indexes), ii;
    if (length(replacements)!==l) { crash("9/0"); }
    if (invert) {
        let /*sequence*/ inverse = repeat(0,l);
        for (let i=1, i$lim=l; i<=i$lim; i+=1) {
            ii = $subse(indexes,i);
            inverse = $repe(inverse,ii,i);
        }
        indexes = inverse;
    }
    for (let i=1, i$lim=l; i<=i$lim; i+=1) {
        ii = $subse(indexes,i);
        source = $repe(source,ii,$subse(replacements,i));
    }
    return source;
}

