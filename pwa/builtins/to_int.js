"use strict";
// auto-generated by pwa/p2js - part of Phix, see http://phix.x10.mx
//
// builtins/to_int.e
// =================
//
// Phix implementation of to_integer (auto-include)
//
//  This is, quite deliberately, just about the simplest possible implementation.
//  See also to_number() [in scanf.e] for fractions,exponents,_,non-decimal, etc.
//

/*global*/ function to_integer(/*string*/ s, /*integer*/ def_value=0) {
    if (equal(length(s),0)) {
        return def_value;
    }
    let /*integer*/ res = 0, 
                    sgn = 1;
    for (let i=1, i$lim=length(s); i<=i$lim; i+=1) {
        let /*integer*/ ch = $subse(s,i);
        if (ch<0X30 || ch>0X39) {
            if (((i!==1) || (equal(length(s),1))) || ((ch!==0X2D) && (ch!==0X2B))) {
                return def_value;
            }
            if (ch===0X2D) { sgn = -1; }
        } else {
            let /*atom*/ rchk = (res*10+ch)-0X30;
            if (!integer(rchk)) {
                return def_value;
            }
            res = rchk;
        }
    }
    res = sgn*res;  // (explicitly enforce a final typecheck)
    return res;
}

/*global*/ function is_integer(/*string*/ s) {
    let /*integer*/ r = -power(2,machine_bits()-2);
    // (r is -1073741824 or -4611686018427387904)
    return !equal(to_integer(s,r),r);
}
