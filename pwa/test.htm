<!DOCTYPE html>
<html lang="en" >
 <head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>pwa</title>
 </head>
 <body style="font-family: monospace;">
  <script src="p2js.js"></script>
  <script src="builtins/pmaths.js"></script>
  <script src="builtins/primes.js"></script>
  <script src="builtins/bsearch.js"></script>
  <script>
// auto-generated by pwa/p2js, see http://phix.x10.mx
"use strict";
/*with javascript_semantics*/ const limit = ((equal(platform(),JS)) ? 1e7 : 1e8), 
                                    gslim = 250;
let /*sequence*/ primes = get_primes_le(limit*5), 
                 gapstarts = repeat(0,gslim);
for (let i=2, i$lim=length(primes); i<=i$lim; i+=1) {
    let /*integer*/ gap = $subse(primes,i)-$subse(primes,i-1);
    if (equal($subse(gapstarts,gap),0)) {
        gapstarts = $repe(gapstarts,gap,$subse(primes,i-1));
    }
}
let /*integer*/ pm = 10, gap1 = 2;
while (true) {
    while (equal($subse(gapstarts,gap1),0)) { gap1 += 2; }
    let /*integer*/ start1 = $subse(gapstarts,gap1), 
                    gap2 = gap1+2;
    if (equal($subse(gapstarts,gap2),0)) {
        gap1 = gap2+2;
    } else {
        let /*integer*/ start2 = $subse(gapstarts,gap2), 
                        diff = abs(start2-start1);
        if (diff>pm) {
            printf(1,"Earliest difference >%,d between adjacent prime gap starting primes:\n",["sequence",pm]);
            printf(1,"Gap %d starts at %,d, gap %d starts at %,d, difference is %,d.\n\n",["sequence",gap1,start1,gap2,start2,diff]);
            if (equal(pm,limit)) { break; }
            pm *= 10;
        } else {
            gap1 = gap2;
        }
    }
}
  </script>
 </body>
</html>
